// 
// Decompiled by Procyon v0.5.30
// 

package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import jogamp.opengl.Debug;

import java.io.PrintStream;
import java.lang.reflect.Array;
import java.nio.*;

public class TraceGL4bc implements GL3bc, GL4, GL4bc
{
    public static final boolean DEBUG;
    private PrintStream stream;
    private int indent;
    private GL4bc downstreamGL4bc;
    
    public TraceGL4bc(final GL4bc downstreamGL4bc, final PrintStream stream) {
        this.indent = 0;
        if (downstreamGL4bc == null) {
            throw new IllegalArgumentException("null downstreamGL4bc");
        }
        this.downstreamGL4bc = downstreamGL4bc;
        this.stream = stream;
    }
    
    @Override
    public final GL getDownstreamGL() throws GLException {
        return this.downstreamGL4bc;
    }
    
    @Override
    public int getBoundBuffer(final int n) {
        return this.downstreamGL4bc.getBoundBuffer(n);
    }
    
    @Override
    public int getBoundFramebuffer(final int n) {
        return this.downstreamGL4bc.getBoundFramebuffer(n);
    }
    
    @Override
    public GLBufferStorage getBufferStorage(final int n) {
        return this.downstreamGL4bc.getBufferStorage(n);
    }
    
    @Override
    public GLContext getContext() {
        return this.downstreamGL4bc.getContext();
    }
    
    @Override
    public int getDefaultDrawFramebuffer() {
        return this.downstreamGL4bc.getDefaultDrawFramebuffer();
    }
    
    @Override
    public int getDefaultReadBuffer() {
        return this.downstreamGL4bc.getDefaultReadBuffer();
    }
    
    @Override
    public int getDefaultReadFramebuffer() {
        return this.downstreamGL4bc.getDefaultReadFramebuffer();
    }
    
    @Override
    public Object getExtension(final String s) {
        return this.downstreamGL4bc.getExtension(s);
    }
    
    @Override
    public GL getGL() {
        return this;
    }
    
    @Override
    public GL2 getGL2() {
        if (this.isGL2()) {
            return this;
        }
        throw new GLException("Not a GL2 implementation");
    }
    
    @Override
    public GL2ES1 getGL2ES1() {
        if (this.isGL2ES1()) {
            return this;
        }
        throw new GLException("Not a GL2ES1 implementation");
    }
    
    @Override
    public GL2ES2 getGL2ES2() {
        if (this.isGL2ES2()) {
            return this;
        }
        throw new GLException("Not a GL2ES2 implementation");
    }
    
    @Override
    public GL2ES3 getGL2ES3() {
        if (this.isGL2ES3()) {
            return this;
        }
        throw new GLException("Not a GL2ES3 implementation");
    }
    
    @Override
    public GL2GL3 getGL2GL3() {
        if (this.isGL2GL3()) {
            return this;
        }
        throw new GLException("Not a GL2GL3 implementation");
    }
    
    @Override
    public GL3 getGL3() {
        if (this.isGL3()) {
            return this;
        }
        throw new GLException("Not a GL3 implementation");
    }
    
    @Override
    public GL3ES3 getGL3ES3() {
        if (this.isGL3ES3()) {
            return this;
        }
        throw new GLException("Not a GL3ES3 implementation");
    }
    
    @Override
    public GL3bc getGL3bc() {
        if (this.isGL3bc()) {
            return this;
        }
        throw new GLException("Not a GL3bc implementation");
    }
    
    @Override
    public GL4 getGL4() {
        if (this.isGL4()) {
            return this;
        }
        throw new GLException("Not a GL4 implementation");
    }
    
    @Override
    public GL4ES3 getGL4ES3() {
        if (this.isGL4ES3()) {
            return this;
        }
        throw new GLException("Not a GL4ES3 implementation");
    }
    
    @Override
    public GL4bc getGL4bc() {
        if (this.isGL4bc()) {
            return this;
        }
        throw new GLException("Not a GL4bc implementation");
    }
    
    @Override
    public GLES1 getGLES1() {
        throw new GLException("Not a GLES1 implementation");
    }
    
    @Override
    public GLES2 getGLES2() {
        throw new GLException("Not a GLES2 implementation");
    }
    
    @Override
    public GLES3 getGLES3() {
        throw new GLException("Not a GLES3 implementation");
    }
    
    @Override
    public GLProfile getGLProfile() {
        return this.downstreamGL4bc.getGLProfile();
    }
    
    @Override
    public int getMaxRenderbufferSamples() {
        return this.downstreamGL4bc.getMaxRenderbufferSamples();
    }
    
    @Override
    public Object getPlatformGLExtensions() {
        return this.downstreamGL4bc.getPlatformGLExtensions();
    }
    
    @Override
    public GL getRootGL() {
        return this.downstreamGL4bc.getRootGL();
    }
    
    @Override
    public int getSwapInterval() {
        return this.downstreamGL4bc.getSwapInterval();
    }
    
    @Override
    public void glAccum(final int n, final float n2) {
        this.printIndent();
        this.print("glAccum(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glAccum(n, n2);
        this.println("");
    }
    
    @Override
    public void glActiveShaderProgram(final int n, final int n2) {
        this.printIndent();
        this.print("glActiveShaderProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glActiveShaderProgram(n, n2);
        this.println("");
    }
    
    @Override
    public void glActiveStencilFaceEXT(final int n) {
        this.printIndent();
        this.print("glActiveStencilFaceEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glActiveStencilFaceEXT(n);
        this.println("");
    }
    
    @Override
    public void glActiveTexture(final int n) {
        this.printIndent();
        this.print("glActiveTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glActiveTexture(n);
        this.println("");
    }
    
    @Override
    public void glAlphaFunc(final int n, final float n2) {
        this.printIndent();
        this.print("glAlphaFunc(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glAlphaFunc(n, n2);
        this.println("");
    }
    
    @Override
    public void glApplyFramebufferAttachmentCMAAINTEL() {
        this.printIndent();
        this.print("glApplyFramebufferAttachmentCMAAINTEL()");
        this.downstreamGL4bc.glApplyFramebufferAttachmentCMAAINTEL();
        this.println("");
    }
    
    @Override
    public void glApplyTextureEXT(final int n) {
        this.printIndent();
        this.print("glApplyTextureEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glApplyTextureEXT(n);
        this.println("");
    }
    
    @Override
    public boolean glAreTexturesResident(final int n, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glAreTexturesResident(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final boolean glAreTexturesResident = this.downstreamGL4bc.glAreTexturesResident(n, intBuffer, byteBuffer);
        this.println(" = " + glAreTexturesResident);
        return glAreTexturesResident;
    }
    
    @Override
    public boolean glAreTexturesResident(final int n, final int[] array, final int n2, final byte[] array2, final int n3) {
        this.printIndent();
        this.print("glAreTexturesResident(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final boolean glAreTexturesResident = this.downstreamGL4bc.glAreTexturesResident(n, array, n2, array2, n3);
        this.println(" = " + glAreTexturesResident);
        return glAreTexturesResident;
    }
    
    @Override
    public void glArrayElement(final int n) {
        this.printIndent();
        this.print("glArrayElement(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glArrayElement(n);
        this.println("");
    }
    
    @Override
    public void glAttachObjectARB(final long n, final long n2) {
        this.printIndent();
        this.print("glAttachObjectARB(<long> " + n + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glAttachObjectARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glAttachShader(final int n, final int n2) {
        this.printIndent();
        this.print("glAttachShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glAttachShader(n, n2);
        this.println("");
    }
    
    @Override
    public void glBegin(final int n) {
        this.printIndent();
        this.print("glBegin(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBegin(n);
        this.println("");
        this.indent += 2;
    }
    
    @Override
    public void glBeginConditionalRender(final int n, final int n2) {
        this.printIndent();
        this.print("glBeginConditionalRender(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginConditionalRender(n, n2);
        this.println("");
    }
    
    @Override
    public void glBeginConditionalRenderNVX(final int n) {
        this.printIndent();
        this.print("glBeginConditionalRenderNVX(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginConditionalRenderNVX(n);
        this.println("");
    }
    
    @Override
    public void glBeginOcclusionQueryNV(final int n) {
        this.printIndent();
        this.print("glBeginOcclusionQueryNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginOcclusionQueryNV(n);
        this.println("");
    }
    
    @Override
    public void glBeginPerfMonitorAMD(final int n) {
        this.printIndent();
        this.print("glBeginPerfMonitorAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginPerfMonitorAMD(n);
        this.println("");
    }
    
    @Override
    public void glBeginPerfQueryINTEL(final int n) {
        this.printIndent();
        this.print("glBeginPerfQueryINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginPerfQueryINTEL(n);
        this.println("");
    }
    
    @Override
    public void glBeginQuery(final int n, final int n2) {
        this.printIndent();
        this.print("glBeginQuery(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginQuery(n, n2);
        this.println("");
    }
    
    @Override
    public void glBeginQueryIndexed(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBeginQueryIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginQueryIndexed(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBeginTransformFeedback(final int n) {
        this.printIndent();
        this.print("glBeginTransformFeedback(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginTransformFeedback(n);
        this.println("");
    }
    
    @Override
    public void glBeginVertexShaderEXT() {
        this.printIndent();
        this.print("glBeginVertexShaderEXT()");
        this.downstreamGL4bc.glBeginVertexShaderEXT();
        this.println("");
    }
    
    @Override
    public void glBeginVideoCaptureNV(final int n) {
        this.printIndent();
        this.print("glBeginVideoCaptureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBeginVideoCaptureNV(n);
        this.println("");
    }
    
    @Override
    public void glBindAttribLocation(final int n, final int n2, final String s) {
        this.printIndent();
        this.print("glBindAttribLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glBindAttribLocation(n, n2, s);
        this.println("");
    }
    
    @Override
    public void glBindBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glBindBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindBuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindBufferBase(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBindBufferBase(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBindBufferBase(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBindBufferRange(final int n, final int n2, final int n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glBindBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glBindBufferRange(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glBindBuffersBase(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glBindBuffersBase(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glBindBuffersBase(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glBindBuffersBase(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glBindBuffersBase(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glBindBuffersBase(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glBindBuffersRange(final int n, final int n2, final int n3, final int[] array, final int n4, final PointerBuffer pointerBuffer, final PointerBuffer pointerBuffer2) {
        this.printIndent();
        this.print("glBindBuffersRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer2 + ")");
        this.downstreamGL4bc.glBindBuffersRange(n, n2, n3, array, n4, pointerBuffer, pointerBuffer2);
        this.println("");
    }
    
    @Override
    public void glBindBuffersRange(final int n, final int n2, final int n3, final IntBuffer intBuffer, final PointerBuffer pointerBuffer, final PointerBuffer pointerBuffer2) {
        this.printIndent();
        this.print("glBindBuffersRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer2 + ")");
        this.downstreamGL4bc.glBindBuffersRange(n, n2, n3, intBuffer, pointerBuffer, pointerBuffer2);
        this.println("");
    }
    
    @Override
    public void glBindFragDataLocation(final int n, final int n2, final String s) {
        this.printIndent();
        this.print("glBindFragDataLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glBindFragDataLocation(n, n2, s);
        this.println("");
    }
    
    @Override
    public void glBindFragDataLocationIndexed(final int n, final int n2, final int n3, final String s) {
        this.printIndent();
        this.print("glBindFragDataLocationIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glBindFragDataLocationIndexed(n, n2, n3, s);
        this.println("");
    }
    
    @Override
    public void glBindFramebuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glBindFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindFramebuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindImageTexture(final int n, final int n2, final int n3, final boolean b, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glBindImageTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glBindImageTexture(n, n2, n3, b, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glBindImageTextures(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glBindImageTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glBindImageTextures(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glBindImageTextures(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glBindImageTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBindImageTextures(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public int glBindLightParameterEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glBindLightParameterEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glBindLightParameterEXT = this.downstreamGL4bc.glBindLightParameterEXT(n, n2);
        this.println(" = " + glBindLightParameterEXT);
        return glBindLightParameterEXT;
    }
    
    @Override
    public int glBindMaterialParameterEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glBindMaterialParameterEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glBindMaterialParameterEXT = this.downstreamGL4bc.glBindMaterialParameterEXT(n, n2);
        this.println(" = " + glBindMaterialParameterEXT);
        return glBindMaterialParameterEXT;
    }
    
    @Override
    public void glBindMultiTextureEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBindMultiTextureEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBindMultiTextureEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public int glBindParameterEXT(final int n) {
        this.printIndent();
        this.print("glBindParameterEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glBindParameterEXT = this.downstreamGL4bc.glBindParameterEXT(n);
        this.println(" = " + glBindParameterEXT);
        return glBindParameterEXT;
    }
    
    @Override
    public void glBindProgramARB(final int n, final int n2) {
        this.printIndent();
        this.print("glBindProgramARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindProgramARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindProgramPipeline(final int n) {
        this.printIndent();
        this.print("glBindProgramPipeline(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBindProgramPipeline(n);
        this.println("");
    }
    
    @Override
    public void glBindRenderbuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glBindRenderbuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindRenderbuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindSampler(final int n, final int n2) {
        this.printIndent();
        this.print("glBindSampler(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindSampler(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindSamplers(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glBindSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBindSamplers(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glBindSamplers(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glBindSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glBindSamplers(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public int glBindTexGenParameterEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBindTexGenParameterEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glBindTexGenParameterEXT = this.downstreamGL4bc.glBindTexGenParameterEXT(n, n2, n3);
        this.println(" = " + glBindTexGenParameterEXT);
        return glBindTexGenParameterEXT;
    }
    
    @Override
    public void glBindTexture(final int n, final int n2) {
        this.printIndent();
        this.print("glBindTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindTexture(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindTextureUnit(final int n, final int n2) {
        this.printIndent();
        this.print("glBindTextureUnit(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindTextureUnit(n, n2);
        this.println("");
    }
    
    @Override
    public int glBindTextureUnitParameterEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glBindTextureUnitParameterEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glBindTextureUnitParameterEXT = this.downstreamGL4bc.glBindTextureUnitParameterEXT(n, n2);
        this.println(" = " + glBindTextureUnitParameterEXT);
        return glBindTextureUnitParameterEXT;
    }
    
    @Override
    public void glBindTextures(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glBindTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glBindTextures(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glBindTextures(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glBindTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBindTextures(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glBindTransformFeedback(final int n, final int n2) {
        this.printIndent();
        this.print("glBindTransformFeedback(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindTransformFeedback(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindTransformFeedbackNV(final int n, final int n2) {
        this.printIndent();
        this.print("glBindTransformFeedbackNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBindTransformFeedbackNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glBindVertexArray(final int n) {
        this.printIndent();
        this.print("glBindVertexArray(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBindVertexArray(n);
        this.println("");
    }
    
    @Override
    public void glBindVertexBuffer(final int n, final int n2, final long n3, final int n4) {
        this.printIndent();
        this.print("glBindVertexBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glBindVertexBuffer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBindVertexBuffers(final int n, final int n2, final int[] array, final int n3, final PointerBuffer pointerBuffer, final int[] array2, final int n4) {
        this.printIndent();
        this.print("glBindVertexBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glBindVertexBuffers(n, n2, array, n3, pointerBuffer, array2, n4);
        this.println("");
    }
    
    @Override
    public void glBindVertexBuffers(final int n, final int n2, final IntBuffer intBuffer, final PointerBuffer pointerBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glBindVertexBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glBindVertexBuffers(n, n2, intBuffer, pointerBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glBindVertexShaderEXT(final int n) {
        this.printIndent();
        this.print("glBindVertexShaderEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBindVertexShaderEXT(n);
        this.println("");
    }
    
    @Override
    public void glBindVideoCaptureStreamBufferNV(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glBindVideoCaptureStreamBufferNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glBindVideoCaptureStreamBufferNV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBindVideoCaptureStreamTextureNV(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glBindVideoCaptureStreamTextureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glBindVideoCaptureStreamTextureNV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glBitmap(final int n, final int n2, final float n3, final float n4, final float n5, final float n6, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glBitmap(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glBitmap(n, n2, n3, n4, n5, n6, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glBitmap(final int n, final int n2, final float n3, final float n4, final float n5, final float n6, final long n7) {
        this.printIndent();
        this.print("glBitmap(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glBitmap(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glBitmap(final int n, final int n2, final float n3, final float n4, final float n5, final float n6, final byte[] array, final int n7) {
        this.printIndent();
        this.print("glBitmap(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glBitmap(n, n2, n3, n4, n5, n6, array, n7);
        this.println("");
    }
    
    @Override
    public void glBlendBarrier() {
        this.printIndent();
        this.print("glBlendBarrier()");
        this.downstreamGL4bc.glBlendBarrier();
        this.println("");
    }
    
    @Override
    public void glBlendColor(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glBlendColor(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glBlendColor(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBlendEquation(final int n) {
        this.printIndent();
        this.print("glBlendEquation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquation(n);
        this.println("");
    }
    
    @Override
    public void glBlendEquationIndexedAMD(final int n, final int n2) {
        this.printIndent();
        this.print("glBlendEquationIndexedAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquationIndexedAMD(n, n2);
        this.println("");
    }
    
    @Override
    public void glBlendEquationSeparate(final int n, final int n2) {
        this.printIndent();
        this.print("glBlendEquationSeparate(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquationSeparate(n, n2);
        this.println("");
    }
    
    @Override
    public void glBlendEquationSeparateIndexedAMD(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBlendEquationSeparateIndexedAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquationSeparateIndexedAMD(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBlendEquationSeparatei(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBlendEquationSeparatei(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquationSeparatei(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBlendEquationi(final int n, final int n2) {
        this.printIndent();
        this.print("glBlendEquationi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendEquationi(n, n2);
        this.println("");
    }
    
    @Override
    public void glBlendFunc(final int n, final int n2) {
        this.printIndent();
        this.print("glBlendFunc(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFunc(n, n2);
        this.println("");
    }
    
    @Override
    public void glBlendFuncIndexedAMD(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBlendFuncIndexedAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFuncIndexedAMD(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBlendFuncSeparate(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glBlendFuncSeparate(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFuncSeparate(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBlendFuncSeparateINGR(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glBlendFuncSeparateINGR(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFuncSeparateINGR(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBlendFuncSeparateIndexedAMD(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glBlendFuncSeparateIndexedAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFuncSeparateIndexedAMD(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glBlendFuncSeparatei(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glBlendFuncSeparatei(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFuncSeparatei(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glBlendFunci(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBlendFunci(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBlendFunci(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBlitFramebuffer(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10) {
        this.printIndent();
        this.print("glBlitFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ")");
        this.downstreamGL4bc.glBlitFramebuffer(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glBlitNamedFramebuffer(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final int n12) {
        this.printIndent();
        this.print("glBlitNamedFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n12).toUpperCase() + ")");
        this.downstreamGL4bc.glBlitNamedFramebuffer(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12);
        this.println("");
    }
    
    @Override
    public void glBufferAddressRangeNV(final int n, final int n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glBufferAddressRangeNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glBufferAddressRangeNV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glBufferData(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glBufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBufferData(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glBufferPageCommitmentARB(final int n, final long n2, final long n3, final boolean b) {
        this.printIndent();
        this.print("glBufferPageCommitmentARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glBufferPageCommitmentARB(n, n2, n3, b);
        this.println("");
    }
    
    @Override
    public void glBufferParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glBufferParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBufferParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glBufferStorage(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glBufferStorage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glBufferStorage(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glBufferSubData(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glBufferSubData(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glCallCommandListNV(final int n) {
        this.printIndent();
        this.print("glCallCommandListNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCallCommandListNV(n);
        this.println("");
    }
    
    @Override
    public void glCallList(final int n) {
        this.printIndent();
        this.print("glCallList(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCallList(n);
        this.println("");
    }
    
    @Override
    public void glCallLists(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glCallLists(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCallLists(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public int glCheckFramebufferStatus(final int n) {
        this.printIndent();
        this.print("glCheckFramebufferStatus(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glCheckFramebufferStatus = this.downstreamGL4bc.glCheckFramebufferStatus(n);
        this.println(" = " + glCheckFramebufferStatus);
        return glCheckFramebufferStatus;
    }
    
    @Override
    public int glCheckNamedFramebufferStatus(final int n, final int n2) {
        this.printIndent();
        this.print("glCheckNamedFramebufferStatus(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glCheckNamedFramebufferStatus = this.downstreamGL4bc.glCheckNamedFramebufferStatus(n, n2);
        this.println(" = " + glCheckNamedFramebufferStatus);
        return glCheckNamedFramebufferStatus;
    }
    
    @Override
    public int glCheckNamedFramebufferStatusEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glCheckNamedFramebufferStatusEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glCheckNamedFramebufferStatusEXT = this.downstreamGL4bc.glCheckNamedFramebufferStatusEXT(n, n2);
        this.println(" = " + glCheckNamedFramebufferStatusEXT);
        return glCheckNamedFramebufferStatusEXT;
    }
    
    @Override
    public void glClampColor(final int n, final int n2) {
        this.printIndent();
        this.print("glClampColor(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glClampColor(n, n2);
        this.println("");
    }
    
    @Override
    public void glClear(final int n) {
        this.printIndent();
        this.print("glClear(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glClear(n);
        this.println("");
    }
    
    @Override
    public void glClearAccum(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glClearAccum(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glClearAccum(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearBufferData(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glClearBufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearBufferData(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glClearBufferSubData(final int n, final int n2, final long n3, final long n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glClearBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearBufferSubData(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glClearBufferfi(final int n, final int n2, final float n3, final int n4) {
        this.printIndent();
        this.print("glClearBufferfi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearBufferfi(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearBufferfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glClearBufferfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glClearBufferfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glClearBufferfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glClearBufferfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glClearBufferfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glClearBufferiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glClearBufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glClearBufferiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glClearBufferiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glClearBufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glClearBufferiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glClearBufferuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glClearBufferuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glClearBufferuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glClearBufferuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glClearBufferuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glClearBufferuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glClearColor(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glClearColor(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glClearColor(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearColorIi(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glClearColorIi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearColorIi(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearColorIui(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glClearColorIui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearColorIui(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearDepth(final double n) {
        this.printIndent();
        this.print("glClearDepth(<double> " + n + ")");
        this.downstreamGL4bc.glClearDepth(n);
        this.println("");
    }
    
    @Override
    public void glClearDepthf(final float n) {
        this.printIndent();
        this.print("glClearDepthf(<float> " + n + ")");
        this.downstreamGL4bc.glClearDepthf(n);
        this.println("");
    }
    
    @Override
    public void glClearIndex(final float n) {
        this.printIndent();
        this.print("glClearIndex(<float> " + n + ")");
        this.downstreamGL4bc.glClearIndex(n);
        this.println("");
    }
    
    @Override
    public void glClearNamedBufferData(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glClearNamedBufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearNamedBufferData(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glClearNamedBufferSubData(final int n, final int n2, final long n3, final long n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glClearNamedBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearNamedBufferSubData(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferfi(final int n, final int n2, final float n3, final int n4) {
        this.printIndent();
        this.print("glClearNamedFramebufferfi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearNamedFramebufferfi(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferfv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glClearNamedFramebufferfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearNamedFramebufferfv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferfv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glClearNamedFramebufferfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glClearNamedFramebufferfv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glClearNamedFramebufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glClearNamedFramebufferiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glClearNamedFramebufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearNamedFramebufferiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferuiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glClearNamedFramebufferuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glClearNamedFramebufferuiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glClearNamedFramebufferuiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glClearNamedFramebufferuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glClearNamedFramebufferuiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glClearStencil(final int n) {
        this.printIndent();
        this.print("glClearStencil(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glClearStencil(n);
        this.println("");
    }
    
    @Override
    public void glClearTexImage(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glClearTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearTexImage(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glClearTexSubImage(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glClearTexSubImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glClearTexSubImage(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glClientActiveTexture(final int n) {
        this.printIndent();
        this.print("glClientActiveTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glClientActiveTexture(n);
        this.println("");
    }
    
    @Override
    public void glClientAttribDefaultEXT(final int n) {
        this.printIndent();
        this.print("glClientAttribDefaultEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glClientAttribDefaultEXT(n);
        this.println("");
    }
    
    @Override
    public int glClientWaitSync(final long n, final int n2, final long n3) {
        this.printIndent();
        this.print("glClientWaitSync(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        final int glClientWaitSync = this.downstreamGL4bc.glClientWaitSync(n, n2, n3);
        this.println(" = " + glClientWaitSync);
        return glClientWaitSync;
    }
    
    @Override
    public void glClipControl(final int n, final int n2) {
        this.printIndent();
        this.print("glClipControl(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glClipControl(n, n2);
        this.println("");
    }
    
    @Override
    public void glClipPlane(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glClipPlane(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glClipPlane(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glClipPlane(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glClipPlane(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glClipPlane(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glClipPlanef(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glClipPlanef(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glClipPlanef(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glClipPlanef(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glClipPlanef(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glClipPlanef(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glColor3b(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glColor3b(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glColor3b(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glColor3bv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glColor3bv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glColor3bv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3bv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glColor3bv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3bv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glColor3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glColor3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glColor3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glColor3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glColor3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glColor3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glColor3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glColor3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glColor3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glColor3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3h(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glColor3h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glColor3h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor3hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3hv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor3hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor3hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glColor3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColor3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColor3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glColor3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glColor3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glColor3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3ub(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glColor3ub(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glColor3ub(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glColor3ubv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glColor3ubv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glColor3ubv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3ubv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glColor3ubv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3ubv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glColor3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3uiv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColor3uiv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColor3uiv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3uiv(final int[] array, final int n) {
        this.printIndent();
        this.print("glColor3uiv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3uiv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor3us(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glColor3us(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glColor3us(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColor3usv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor3usv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor3usv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColor3usv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor3usv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor3usv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4b(final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glColor4b(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glColor4b(b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glColor4bv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glColor4bv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glColor4bv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4bv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glColor4bv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4bv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4d(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glColor4d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glColor4d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glColor4dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glColor4dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glColor4dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4dv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4f(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glColor4f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glColor4f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glColor4fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4fv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glColor4fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glColor4fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4h(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glColor4h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glColor4h(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor4hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor4hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor4hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4hv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glColor4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColor4iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColor4iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glColor4iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4iv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4s(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glColor4s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glColor4s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor4sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor4sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor4sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4sv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4ub(final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glColor4ub(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glColor4ub(b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glColor4ubv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glColor4ubv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4ubv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4ubv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glColor4ubv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glColor4ubv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4ui(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glColor4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4ui(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4uiv(final int[] array, final int n) {
        this.printIndent();
        this.print("glColor4uiv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4uiv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4uiv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColor4uiv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColor4uiv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glColor4us(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glColor4us(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glColor4us(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColor4usv(final short[] array, final int n) {
        this.printIndent();
        this.print("glColor4usv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glColor4usv(array, n);
        this.println("");
    }
    
    @Override
    public void glColor4usv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glColor4usv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glColor4usv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glColorFormatNV(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glColorFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glColorFormatNV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glColorMask(final boolean b, final boolean b2, final boolean b3, final boolean b4) {
        this.printIndent();
        this.print("glColorMask(<boolean> " + b + ", " + "<boolean> " + b2 + ", " + "<boolean> " + b3 + ", " + "<boolean> " + b4 + ")");
        this.downstreamGL4bc.glColorMask(b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glColorMaskIndexed(final int n, final boolean b, final boolean b2, final boolean b3, final boolean b4) {
        this.printIndent();
        this.print("glColorMaskIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<boolean> " + b2 + ", " + "<boolean> " + b3 + ", " + "<boolean> " + b4 + ")");
        this.downstreamGL4bc.glColorMaskIndexed(n, b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glColorMaski(final int n, final boolean b, final boolean b2, final boolean b3, final boolean b4) {
        this.printIndent();
        this.print("glColorMaski(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<boolean> " + b2 + ", " + "<boolean> " + b3 + ", " + "<boolean> " + b4 + ")");
        this.downstreamGL4bc.glColorMaski(n, b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glColorMaterial(final int n, final int n2) {
        this.printIndent();
        this.print("glColorMaterial(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glColorMaterial(n, n2);
        this.println("");
    }
    
    @Override
    public void glColorP3ui(final int n, final int n2) {
        this.printIndent();
        this.print("glColorP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glColorP3ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glColorP3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColorP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColorP3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glColorP3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glColorP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glColorP3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glColorP4ui(final int n, final int n2) {
        this.printIndent();
        this.print("glColorP4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glColorP4ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glColorP4uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColorP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColorP4uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glColorP4uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glColorP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glColorP4uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glColorPointer(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glColorPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glColorPointer(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glColorPointer(final GLArrayData glArrayData) {
        this.printIndent();
        this.print("glColorPointer(<com.jogamp.opengl.GLArrayData> " + glArrayData + ")");
        this.downstreamGL4bc.glColorPointer(glArrayData);
        this.println("");
    }
    
    @Override
    public void glColorPointer(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glColorPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glColorPointer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glColorSubTable(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glColorSubTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glColorSubTable(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glColorSubTable(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glColorSubTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glColorSubTable(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glColorTable(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glColorTable(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glColorTable(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glColorTable(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glColorTableParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glColorTableParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glColorTableParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glColorTableParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glColorTableParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glColorTableParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glColorTableParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glColorTableParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glColorTableParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glColorTableParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glColorTableParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glColorTableParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glCommandListSegmentsNV(final int n, final int n2) {
        this.printIndent();
        this.print("glCommandListSegmentsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCommandListSegmentsNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glCompileCommandListNV(final int n) {
        this.printIndent();
        this.print("glCompileCommandListNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCompileCommandListNV(n);
        this.println("");
    }
    
    @Override
    public void glCompileShader(final int n) {
        this.printIndent();
        this.print("glCompileShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCompileShader(n);
        this.println("");
    }
    
    @Override
    public void glCompileShaderARB(final long n) {
        this.printIndent();
        this.print("glCompileShaderARB(<long> " + n + ")");
        this.downstreamGL4bc.glCompileShaderARB(n);
        this.println("");
    }
    
    @Override
    public void glCompileShaderIncludeARB(final int n, final int n2, final String[] array, final int[] array2, final int n3) {
        this.printIndent();
        this.print("glCompileShaderIncludeARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glCompileShaderIncludeARB(n, n2, array, array2, n3);
        this.println("");
    }
    
    @Override
    public void glCompileShaderIncludeARB(final int n, final int n2, final String[] array, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCompileShaderIncludeARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCompileShaderIncludeARB(n, n2, array, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexSubImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedMultiTexSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedMultiTexSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedMultiTexSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexImage1D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glCompressedTexImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glCompressedTexImage1D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexImage2D(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final long n8) {
        this.printIndent();
        this.print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<long> " + n8 + ")");
        this.downstreamGL4bc.glCompressedTexImage2D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexImage3D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glCompressedTexImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glCompressedTexImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glCompressedTexSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glCompressedTexSubImage1D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexSubImage1D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glCompressedTexSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final long n11) {
        this.printIndent();
        this.print("glCompressedTexSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<long> " + n11 + ")");
        this.downstreamGL4bc.glCompressedTexSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11);
        this.println("");
    }
    
    @Override
    public void glCompressedTexSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTexSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTexSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage1D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glCompressedTextureSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final Buffer buffer) {
        this.printIndent();
        this.print("glCompressedTextureSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glCompressedTextureSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, buffer);
        this.println("");
    }
    
    @Override
    public void glConservativeRasterParameterfNV(final int n, final float n2) {
        this.printIndent();
        this.print("glConservativeRasterParameterfNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glConservativeRasterParameterfNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glConvolutionFilter1D(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glConvolutionFilter1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glConvolutionFilter1D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glConvolutionFilter1D(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glConvolutionFilter1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glConvolutionFilter1D(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glConvolutionFilter2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glConvolutionFilter2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glConvolutionFilter2D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glConvolutionFilter2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glConvolutionFilter2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glConvolutionFilter2D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameterf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glConvolutionParameterf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glConvolutionParameterf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glConvolutionParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glConvolutionParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glConvolutionParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glConvolutionParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glConvolutionParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glConvolutionParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glConvolutionParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glConvolutionParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glConvolutionParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glConvolutionParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glConvolutionParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glCopyBufferSubData(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glCopyBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glCopyBufferSubData(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyColorSubTable(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glCopyColorSubTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyColorSubTable(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyColorTable(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glCopyColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyColorTable(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyConvolutionFilter1D(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glCopyConvolutionFilter1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyConvolutionFilter1D(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyConvolutionFilter2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glCopyConvolutionFilter2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyConvolutionFilter2D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glCopyImageSubData(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final int n12, final int n13, final int n14, final int n15) {
        this.printIndent();
        this.print("glCopyImageSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n12).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n13).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n14).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n15).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyImageSubData(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15);
        this.println("");
    }
    
    @Override
    public void glCopyImageSubDataNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final int n12, final int n13, final int n14, final int n15) {
        this.printIndent();
        this.print("glCopyImageSubDataNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n12).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n13).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n14).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n15).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyImageSubDataNV(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15);
        this.println("");
    }
    
    @Override
    public void glCopyMultiTexImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glCopyMultiTexImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyMultiTexImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCopyMultiTexImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyMultiTexImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyMultiTexImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyMultiTexSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glCopyMultiTexSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyMultiTexSubImage1DEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glCopyMultiTexSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyMultiTexSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyMultiTexSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyMultiTexSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10) {
        this.printIndent();
        this.print("glCopyMultiTexSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyMultiTexSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glCopyNamedBufferSubData(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glCopyNamedBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glCopyNamedBufferSubData(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyPixels(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glCopyPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyPixels(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glCopyTexImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glCopyTexImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTexImage1D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glCopyTexImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glCopyTexImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTexImage2D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCopyTexSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glCopyTexSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTexSubImage1D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glCopyTexSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glCopyTexSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTexSubImage2D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCopyTexSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyTexSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTexSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyTextureImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glCopyTextureImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCopyTextureImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyTextureImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glCopyTextureSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage1D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glCopyTextureSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage1DEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glCopyTextureSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage2D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyTextureSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9) {
        this.printIndent();
        this.print("glCopyTextureSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glCopyTextureSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10) {
        this.printIndent();
        this.print("glCopyTextureSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ")");
        this.downstreamGL4bc.glCopyTextureSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glCoverageModulationNV(final int n) {
        this.printIndent();
        this.print("glCoverageModulationNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCoverageModulationNV(n);
        this.println("");
    }
    
    @Override
    public void glCoverageModulationTableNV(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glCoverageModulationTableNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCoverageModulationTableNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCoverageModulationTableNV(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glCoverageModulationTableNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glCoverageModulationTableNV(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateBuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateBuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateBuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateBuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateCommandListsNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateCommandListsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateCommandListsNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateCommandListsNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateCommandListsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateCommandListsNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateFramebuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateFramebuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateFramebuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateFramebuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreatePerfQueryINTEL(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreatePerfQueryINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreatePerfQueryINTEL(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreatePerfQueryINTEL(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreatePerfQueryINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreatePerfQueryINTEL(n, intBuffer);
        this.println("");
    }
    
    @Override
    public int glCreateProgram() {
        this.printIndent();
        this.print("glCreateProgram()");
        final int glCreateProgram = this.downstreamGL4bc.glCreateProgram();
        this.println(" = " + glCreateProgram);
        return glCreateProgram;
    }
    
    @Override
    public long glCreateProgramObjectARB() {
        this.printIndent();
        this.print("glCreateProgramObjectARB()");
        final long glCreateProgramObjectARB = this.downstreamGL4bc.glCreateProgramObjectARB();
        this.println(" = " + glCreateProgramObjectARB);
        return glCreateProgramObjectARB;
    }
    
    @Override
    public void glCreateProgramPipelines(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateProgramPipelines(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateProgramPipelines(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateProgramPipelines(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateQueries(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glCreateQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateQueries(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glCreateQueries(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateQueries(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateRenderbuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateRenderbuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateRenderbuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateRenderbuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateSamplers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateSamplers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateSamplers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateSamplers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public int glCreateShader(final int n) {
        this.printIndent();
        this.print("glCreateShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glCreateShader = this.downstreamGL4bc.glCreateShader(n);
        this.println(" = " + glCreateShader);
        return glCreateShader;
    }
    
    @Override
    public long glCreateShaderObjectARB(final int n) {
        this.printIndent();
        this.print("glCreateShaderObjectARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final long glCreateShaderObjectARB = this.downstreamGL4bc.glCreateShaderObjectARB(n);
        this.println(" = " + glCreateShaderObjectARB);
        return glCreateShaderObjectARB;
    }
    
    @Override
    public int glCreateShaderProgramv(final int n, final int n2, final String[] array) {
        this.printIndent();
        this.print("glCreateShaderProgramv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ")");
        final int glCreateShaderProgramv = this.downstreamGL4bc.glCreateShaderProgramv(n, n2, array);
        this.println(" = " + glCreateShaderProgramv);
        return glCreateShaderProgramv;
    }
    
    @Override
    public void glCreateStatesNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateStatesNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateStatesNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateStatesNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public long glCreateSyncFromCLeventARB(final long n, final long n2, final int n3) {
        this.printIndent();
        this.print("glCreateSyncFromCLeventARB(<long> " + n + ", " + "<long> " + n2 + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final long glCreateSyncFromCLeventARB = this.downstreamGL4bc.glCreateSyncFromCLeventARB(n, n2, n3);
        this.println(" = " + glCreateSyncFromCLeventARB);
        return glCreateSyncFromCLeventARB;
    }
    
    @Override
    public void glCreateTextures(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glCreateTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateTextures(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glCreateTextures(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateTextures(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateTransformFeedbacks(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateTransformFeedbacks(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCreateTransformFeedbacks(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateTransformFeedbacks(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateVertexArrays(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glCreateVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glCreateVertexArrays(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glCreateVertexArrays(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glCreateVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCreateVertexArrays(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCullFace(final int n) {
        this.printIndent();
        this.print("glCullFace(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCullFace(n);
        this.println("");
    }
    
    @Override
    public void glCullParameterdvEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glCullParameterdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glCullParameterdvEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glCullParameterdvEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glCullParameterdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCullParameterdvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCullParameterfvEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glCullParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glCullParameterfvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glCullParameterfvEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glCullParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glCullParameterfvEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glCurrentPaletteMatrixARB(final int n) {
        this.printIndent();
        this.print("glCurrentPaletteMatrixARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glCurrentPaletteMatrixARB(n);
        this.println("");
    }
    
    @Override
    public void glDebugMessageControl(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5, final boolean b) {
        this.printIndent();
        this.print("glDebugMessageControl(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glDebugMessageControl(n, n2, n3, n4, array, n5, b);
        this.println("");
    }
    
    @Override
    public void glDebugMessageControl(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer, final boolean b) {
        this.printIndent();
        this.print("glDebugMessageControl(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glDebugMessageControl(n, n2, n3, n4, intBuffer, b);
        this.println("");
    }
    
    @Override
    public void glDebugMessageEnableAMD(final int n, final int n2, final int n3, final IntBuffer intBuffer, final boolean b) {
        this.printIndent();
        this.print("glDebugMessageEnableAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glDebugMessageEnableAMD(n, n2, n3, intBuffer, b);
        this.println("");
    }
    
    @Override
    public void glDebugMessageEnableAMD(final int n, final int n2, final int n3, final int[] array, final int n4, final boolean b) {
        this.printIndent();
        this.print("glDebugMessageEnableAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glDebugMessageEnableAMD(n, n2, n3, array, n4, b);
        this.println("");
    }
    
    @Override
    public void glDebugMessageInsert(final int n, final int n2, final int n3, final int n4, final int n5, final String s) {
        this.printIndent();
        this.print("glDebugMessageInsert(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glDebugMessageInsert(n, n2, n3, n4, n5, s);
        this.println("");
    }
    
    @Override
    public void glDebugMessageInsertAMD(final int n, final int n2, final int n3, final int n4, final String s) {
        this.printIndent();
        this.print("glDebugMessageInsertAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glDebugMessageInsertAMD(n, n2, n3, n4, s);
        this.println("");
    }
    
    @Override
    public void glDeleteBuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteBuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteBuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteBuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteCommandListsNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteCommandListsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteCommandListsNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteCommandListsNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteCommandListsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteCommandListsNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteFramebuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteFramebuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteFramebuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteFramebuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteLists(final int n, final int n2) {
        this.printIndent();
        this.print("glDeleteLists(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteLists(n, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteNamedStringARB(final int n, final String s) {
        this.printIndent();
        this.print("glDeleteNamedStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glDeleteNamedStringARB(n, s);
        this.println("");
    }
    
    @Override
    public void glDeleteNamesAMD(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glDeleteNamesAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteNamesAMD(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glDeleteNamesAMD(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteNamesAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteNamesAMD(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteObjectARB(final long n) {
        this.printIndent();
        this.print("glDeleteObjectARB(<long> " + n + ")");
        this.downstreamGL4bc.glDeleteObjectARB(n);
        this.println("");
    }
    
    @Override
    public void glDeleteOcclusionQueriesNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteOcclusionQueriesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteOcclusionQueriesNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteOcclusionQueriesNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteOcclusionQueriesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteOcclusionQueriesNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeletePerfMonitorsAMD(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeletePerfMonitorsAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeletePerfMonitorsAMD(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeletePerfMonitorsAMD(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeletePerfMonitorsAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeletePerfMonitorsAMD(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeletePerfQueryINTEL(final int n) {
        this.printIndent();
        this.print("glDeletePerfQueryINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDeletePerfQueryINTEL(n);
        this.println("");
    }
    
    @Override
    public void glDeleteProgram(final int n) {
        this.printIndent();
        this.print("glDeleteProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteProgram(n);
        this.println("");
    }
    
    @Override
    public void glDeleteProgramPipelines(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteProgramPipelines(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteProgramPipelines(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteProgramPipelines(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteProgramsARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteProgramsARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteProgramsARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteProgramsARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteProgramsARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteProgramsARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteQueries(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteQueries(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteQueries(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteQueries(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteRenderbuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteRenderbuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteRenderbuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteRenderbuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteSamplers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteSamplers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteSamplers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteSamplers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteShader(final int n) {
        this.printIndent();
        this.print("glDeleteShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteShader(n);
        this.println("");
    }
    
    @Override
    public void glDeleteStatesNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteStatesNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteStatesNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteStatesNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteSync(final long n) {
        this.printIndent();
        this.print("glDeleteSync(<long> " + n + ")");
        this.downstreamGL4bc.glDeleteSync(n);
        this.println("");
    }
    
    @Override
    public void glDeleteTextures(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteTextures(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteTextures(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteTextures(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteTransformFeedbacks(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteTransformFeedbacks(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteTransformFeedbacks(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteTransformFeedbacks(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteTransformFeedbacksNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteTransformFeedbacksNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteTransformFeedbacksNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteTransformFeedbacksNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteTransformFeedbacksNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteTransformFeedbacksNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteVertexArrays(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDeleteVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteVertexArrays(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDeleteVertexArrays(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDeleteVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDeleteVertexArrays(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDeleteVertexShaderEXT(final int n) {
        this.printIndent();
        this.print("glDeleteVertexShaderEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDeleteVertexShaderEXT(n);
        this.println("");
    }
    
    @Override
    public void glDepthBoundsEXT(final double n, final double n2) {
        this.printIndent();
        this.print("glDepthBoundsEXT(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glDepthBoundsEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glDepthFunc(final int n) {
        this.printIndent();
        this.print("glDepthFunc(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDepthFunc(n);
        this.println("");
    }
    
    @Override
    public void glDepthMask(final boolean b) {
        this.printIndent();
        this.print("glDepthMask(<boolean> " + b + ")");
        this.downstreamGL4bc.glDepthMask(b);
        this.println("");
    }
    
    @Override
    public void glDepthRange(final double n, final double n2) {
        this.printIndent();
        this.print("glDepthRange(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glDepthRange(n, n2);
        this.println("");
    }
    
    @Override
    public void glDepthRangeArrayv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glDepthRangeArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glDepthRangeArrayv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glDepthRangeArrayv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glDepthRangeArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDepthRangeArrayv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glDepthRangeIndexed(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glDepthRangeIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glDepthRangeIndexed(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDepthRangef(final float n, final float n2) {
        this.printIndent();
        this.print("glDepthRangef(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glDepthRangef(n, n2);
        this.println("");
    }
    
    @Override
    public void glDetachObjectARB(final long n, final long n2) {
        this.printIndent();
        this.print("glDetachObjectARB(<long> " + n + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glDetachObjectARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glDetachShader(final int n, final int n2) {
        this.printIndent();
        this.print("glDetachShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDetachShader(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisable(final int n) {
        this.printIndent();
        this.print("glDisable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDisable(n);
        this.println("");
    }
    
    @Override
    public void glDisableClientState(final int n) {
        this.printIndent();
        this.print("glDisableClientState(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableClientState(n);
        this.println("");
    }
    
    @Override
    public void glDisableClientStateIndexedEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableClientStateIndexedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableClientStateIndexedEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableClientStateiEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableClientStateiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableClientStateiEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableIndexed(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableIndexed(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableVariantClientStateEXT(final int n) {
        this.printIndent();
        this.print("glDisableVariantClientStateEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVariantClientStateEXT(n);
        this.println("");
    }
    
    @Override
    public void glDisableVertexArrayAttrib(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableVertexArrayAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexArrayAttrib(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableVertexArrayAttribEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableVertexArrayAttribEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexArrayAttribEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableVertexArrayEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableVertexArrayEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexArrayEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableVertexAttribAPPLE(final int n, final int n2) {
        this.printIndent();
        this.print("glDisableVertexAttribAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexAttribAPPLE(n, n2);
        this.println("");
    }
    
    @Override
    public void glDisableVertexAttribArray(final int n) {
        this.printIndent();
        this.print("glDisableVertexAttribArray(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexAttribArray(n);
        this.println("");
    }
    
    @Override
    public void glDisableVertexAttribArrayARB(final int n) {
        this.printIndent();
        this.print("glDisableVertexAttribArrayARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDisableVertexAttribArrayARB(n);
        this.println("");
    }
    
    @Override
    public void glDisablei(final int n, final int n2) {
        this.printIndent();
        this.print("glDisablei(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDisablei(n, n2);
        this.println("");
    }
    
    @Override
    public void glDispatchCompute(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glDispatchCompute(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDispatchCompute(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDispatchComputeGroupSizeARB(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glDispatchComputeGroupSizeARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glDispatchComputeGroupSizeARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glDispatchComputeIndirect(final long n) {
        this.printIndent();
        this.print("glDispatchComputeIndirect(<long> " + n + ")");
        this.downstreamGL4bc.glDispatchComputeIndirect(n);
        this.println("");
    }
    
    @Override
    public void glDrawArrays(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glDrawArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawArrays(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDrawArraysIndirect(final int n, final long n2) {
        this.printIndent();
        this.print("glDrawArraysIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glDrawArraysIndirect(n, n2);
        this.println("");
    }
    
    @Override
    public void glDrawArraysIndirect(final int n, final Buffer buffer) {
        this.printIndent();
        this.print("glDrawArraysIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glDrawArraysIndirect(n, buffer);
        this.println("");
    }
    
    @Override
    public void glDrawArraysInstanced(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glDrawArraysInstanced(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawArraysInstanced(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glDrawArraysInstancedBaseInstance(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glDrawArraysInstancedBaseInstance(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawArraysInstancedBaseInstance(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawBuffer(final int n) {
        this.printIndent();
        this.print("glDrawBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawBuffer(n);
        this.println("");
    }
    
    @Override
    public void glDrawBuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDrawBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawBuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDrawBuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDrawBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDrawBuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDrawBuffersATI(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glDrawBuffersATI(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glDrawBuffersATI(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glDrawBuffersATI(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glDrawBuffersATI(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawBuffersATI(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsAddressNV(final int n, final long[] array, final int n2, final int[] array2, final int n3, final int n4) {
        this.printIndent();
        this.print("glDrawCommandsAddressNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsAddressNV(n, array, n2, array2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsAddressNV(final int n, final LongBuffer longBuffer, final IntBuffer intBuffer, final int n2) {
        this.printIndent();
        this.print("glDrawCommandsAddressNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsAddressNV(n, longBuffer, intBuffer, n2);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsNV(final int n, final int n2, final PointerBuffer pointerBuffer, final int[] array, final int n3, final int n4) {
        this.printIndent();
        this.print("glDrawCommandsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsNV(n, n2, pointerBuffer, array, n3, n4);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsNV(final int n, final int n2, final PointerBuffer pointerBuffer, final IntBuffer intBuffer, final int n3) {
        this.printIndent();
        this.print("glDrawCommandsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsNV(n, n2, pointerBuffer, intBuffer, n3);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsStatesAddressNV(final LongBuffer longBuffer, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final int n) {
        this.printIndent();
        this.print("glDrawCommandsStatesAddressNV(<java.nio.LongBuffer> " + longBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsStatesAddressNV(longBuffer, intBuffer, intBuffer2, intBuffer3, n);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsStatesAddressNV(final long[] array, final int n, final int[] array2, final int n2, final int[] array3, final int n3, final int[] array4, final int n4, final int n5) {
        this.printIndent();
        this.print("glDrawCommandsStatesAddressNV(<[J>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsStatesAddressNV(array, n, array2, n2, array3, n3, array4, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsStatesNV(final int n, final PointerBuffer pointerBuffer, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final int n2) {
        this.printIndent();
        this.print("glDrawCommandsStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsStatesNV(n, pointerBuffer, intBuffer, intBuffer2, intBuffer3, n2);
        this.println("");
    }
    
    @Override
    public void glDrawCommandsStatesNV(final int n, final PointerBuffer pointerBuffer, final int[] array, final int n2, final int[] array2, final int n3, final int[] array3, final int n4, final int n5) {
        this.printIndent();
        this.print("glDrawCommandsStatesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawCommandsStatesNV(n, pointerBuffer, array, n2, array2, n3, array3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawElements(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glDrawElements(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glDrawElements(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glDrawElements(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glDrawElements(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glDrawElements(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glDrawElementsBaseVertex(final int n, final int n2, final int n3, final Buffer buffer, final int n4) {
        this.printIndent();
        this.print("glDrawElementsBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsBaseVertex(n, n2, n3, buffer, n4);
        this.println("");
    }
    
    @Override
    public void glDrawElementsBaseVertex(final int n, final int n2, final int n3, final long n4, final int n5) {
        this.printIndent();
        this.print("glDrawElementsBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsBaseVertex(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawElementsIndirect(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glDrawElementsIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glDrawElementsIndirect(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glDrawElementsIndirect(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glDrawElementsIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glDrawElementsIndirect(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstanced(final int n, final int n2, final int n3, final Buffer buffer, final int n4) {
        this.printIndent();
        this.print("glDrawElementsInstanced(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstanced(n, n2, n3, buffer, n4);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstanced(final int n, final int n2, final int n3, final long n4, final int n5) {
        this.printIndent();
        this.print("glDrawElementsInstanced(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstanced(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseInstance(final int n, final int n2, final int n3, final long n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseInstance(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseInstance(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseInstance(final int n, final int n2, final int n3, final Buffer buffer, final int n4, final int n5) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseInstance(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseInstance(n, n2, n3, buffer, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseVertex(final int n, final int n2, final int n3, final long n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseVertex(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseVertex(final int n, final int n2, final int n3, final Buffer buffer, final int n4, final int n5) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseVertex(n, n2, n3, buffer, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseVertexBaseInstance(final int n, final int n2, final int n3, final Buffer buffer, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseVertexBaseInstance(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseVertexBaseInstance(n, n2, n3, buffer, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glDrawElementsInstancedBaseVertexBaseInstance(final int n, final int n2, final int n3, final long n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glDrawElementsInstancedBaseVertexBaseInstance(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawElementsInstancedBaseVertexBaseInstance(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glDrawPixels(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glDrawPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glDrawPixels(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glDrawPixels(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glDrawPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glDrawPixels(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glDrawRangeElements(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glDrawRangeElements(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glDrawRangeElements(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glDrawRangeElements(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glDrawRangeElements(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glDrawRangeElements(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glDrawRangeElementsBaseVertex(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer, final int n6) {
        this.printIndent();
        this.print("glDrawRangeElementsBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawRangeElementsBaseVertex(n, n2, n3, n4, n5, buffer, n6);
        this.println("");
    }
    
    @Override
    public void glDrawRangeElementsBaseVertex(final int n, final int n2, final int n3, final int n4, final int n5, final long n6, final int n7) {
        this.printIndent();
        this.print("glDrawRangeElementsBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawRangeElementsBaseVertex(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glDrawTextureNV(final int n, final int n2, final float n3, final float n4, final float n5, final float n6, final float n7, final float n8, final float n9, final float n10, final float n11) {
        this.printIndent();
        this.print("glDrawTextureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<float> " + n7 + ", " + "<float> " + n8 + ", " + "<float> " + n9 + ", " + "<float> " + n10 + ", " + "<float> " + n11 + ")");
        this.downstreamGL4bc.glDrawTextureNV(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11);
        this.println("");
    }
    
    @Override
    public void glDrawTransformFeedback(final int n, final int n2) {
        this.printIndent();
        this.print("glDrawTransformFeedback(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawTransformFeedback(n, n2);
        this.println("");
    }
    
    @Override
    public void glDrawTransformFeedbackInstanced(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glDrawTransformFeedbackInstanced(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawTransformFeedbackInstanced(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDrawTransformFeedbackNV(final int n, final int n2) {
        this.printIndent();
        this.print("glDrawTransformFeedbackNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawTransformFeedbackNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glDrawTransformFeedbackStream(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glDrawTransformFeedbackStream(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawTransformFeedbackStream(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glDrawTransformFeedbackStreamInstanced(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glDrawTransformFeedbackStreamInstanced(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glDrawTransformFeedbackStreamInstanced(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glEdgeFlag(final boolean b) {
        this.printIndent();
        this.print("glEdgeFlag(<boolean> " + b + ")");
        this.downstreamGL4bc.glEdgeFlag(b);
        this.println("");
    }
    
    @Override
    public void glEdgeFlagFormatNV(final int n) {
        this.printIndent();
        this.print("glEdgeFlagFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEdgeFlagFormatNV(n);
        this.println("");
    }
    
    @Override
    public void glEdgeFlagPointer(final int n, final long n2) {
        this.printIndent();
        this.print("glEdgeFlagPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glEdgeFlagPointer(n, n2);
        this.println("");
    }
    
    @Override
    public void glEdgeFlagPointer(final int n, final Buffer buffer) {
        this.printIndent();
        this.print("glEdgeFlagPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glEdgeFlagPointer(n, buffer);
        this.println("");
    }
    
    @Override
    public void glEdgeFlagv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glEdgeFlagv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glEdgeFlagv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glEdgeFlagv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glEdgeFlagv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEdgeFlagv(array, n);
        this.println("");
    }
    
    @Override
    public void glEnable(final int n) {
        this.printIndent();
        this.print("glEnable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEnable(n);
        this.println("");
    }
    
    @Override
    public void glEnableClientState(final int n) {
        this.printIndent();
        this.print("glEnableClientState(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableClientState(n);
        this.println("");
    }
    
    @Override
    public void glEnableClientStateIndexedEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableClientStateIndexedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableClientStateIndexedEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableClientStateiEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableClientStateiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableClientStateiEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableIndexed(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableIndexed(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableVariantClientStateEXT(final int n) {
        this.printIndent();
        this.print("glEnableVariantClientStateEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVariantClientStateEXT(n);
        this.println("");
    }
    
    @Override
    public void glEnableVertexArrayAttrib(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableVertexArrayAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexArrayAttrib(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableVertexArrayAttribEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableVertexArrayAttribEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexArrayAttribEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableVertexArrayEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableVertexArrayEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexArrayEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableVertexAttribAPPLE(final int n, final int n2) {
        this.printIndent();
        this.print("glEnableVertexAttribAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexAttribAPPLE(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnableVertexAttribArray(final int n) {
        this.printIndent();
        this.print("glEnableVertexAttribArray(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexAttribArray(n);
        this.println("");
    }
    
    @Override
    public void glEnableVertexAttribArrayARB(final int n) {
        this.printIndent();
        this.print("glEnableVertexAttribArrayARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEnableVertexAttribArrayARB(n);
        this.println("");
    }
    
    @Override
    public void glEnablei(final int n, final int n2) {
        this.printIndent();
        this.print("glEnablei(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEnablei(n, n2);
        this.println("");
    }
    
    @Override
    public void glEnd() {
        this.indent -= 2;
        this.printIndent();
        this.print("glEnd()");
        this.downstreamGL4bc.glEnd();
        this.println("");
    }
    
    @Override
    public void glEndConditionalRender() {
        this.printIndent();
        this.print("glEndConditionalRender()");
        this.downstreamGL4bc.glEndConditionalRender();
        this.println("");
    }
    
    @Override
    public void glEndConditionalRenderNVX() {
        this.printIndent();
        this.print("glEndConditionalRenderNVX()");
        this.downstreamGL4bc.glEndConditionalRenderNVX();
        this.println("");
    }
    
    @Override
    public void glEndList() {
        this.indent -= 2;
        this.printIndent();
        this.print("glEndList()");
        this.downstreamGL4bc.glEndList();
        this.println("");
    }
    
    @Override
    public void glEndOcclusionQueryNV() {
        this.printIndent();
        this.print("glEndOcclusionQueryNV()");
        this.downstreamGL4bc.glEndOcclusionQueryNV();
        this.println("");
    }
    
    @Override
    public void glEndPerfMonitorAMD(final int n) {
        this.printIndent();
        this.print("glEndPerfMonitorAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEndPerfMonitorAMD(n);
        this.println("");
    }
    
    @Override
    public void glEndPerfQueryINTEL(final int n) {
        this.printIndent();
        this.print("glEndPerfQueryINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEndPerfQueryINTEL(n);
        this.println("");
    }
    
    @Override
    public void glEndQuery(final int n) {
        this.printIndent();
        this.print("glEndQuery(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEndQuery(n);
        this.println("");
    }
    
    @Override
    public void glEndQueryIndexed(final int n, final int n2) {
        this.printIndent();
        this.print("glEndQueryIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEndQueryIndexed(n, n2);
        this.println("");
    }
    
    @Override
    public void glEndTransformFeedback() {
        this.printIndent();
        this.print("glEndTransformFeedback()");
        this.downstreamGL4bc.glEndTransformFeedback();
        this.println("");
    }
    
    @Override
    public void glEndVertexShaderEXT() {
        this.printIndent();
        this.print("glEndVertexShaderEXT()");
        this.downstreamGL4bc.glEndVertexShaderEXT();
        this.println("");
    }
    
    @Override
    public void glEndVideoCaptureNV(final int n) {
        this.printIndent();
        this.print("glEndVideoCaptureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEndVideoCaptureNV(n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1d(final double n) {
        this.printIndent();
        this.print("glEvalCoord1d(<double> " + n + ")");
        this.downstreamGL4bc.glEvalCoord1d(n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glEvalCoord1dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalCoord1dv(array, n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glEvalCoord1dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glEvalCoord1dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1f(final float n) {
        this.printIndent();
        this.print("glEvalCoord1f(<float> " + n + ")");
        this.downstreamGL4bc.glEvalCoord1f(n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glEvalCoord1fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glEvalCoord1fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glEvalCoord1fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glEvalCoord1fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalCoord1fv(array, n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2d(final double n, final double n2) {
        this.printIndent();
        this.print("glEvalCoord2d(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glEvalCoord2d(n, n2);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glEvalCoord2dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalCoord2dv(array, n);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glEvalCoord2dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glEvalCoord2dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2f(final float n, final float n2) {
        this.printIndent();
        this.print("glEvalCoord2f(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glEvalCoord2f(n, n2);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glEvalCoord2fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glEvalCoord2fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glEvalCoord2fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glEvalCoord2fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalCoord2fv(array, n);
        this.println("");
    }
    
    @Override
    public void glEvalMapsNV(final int n, final int n2) {
        this.printIndent();
        this.print("glEvalMapsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalMapsNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glEvalMesh1(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glEvalMesh1(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalMesh1(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glEvalMesh2(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glEvalMesh2(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalMesh2(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glEvalPoint1(final int n) {
        this.printIndent();
        this.print("glEvalPoint1(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalPoint1(n);
        this.println("");
    }
    
    @Override
    public void glEvalPoint2(final int n, final int n2) {
        this.printIndent();
        this.print("glEvalPoint2(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glEvalPoint2(n, n2);
        this.println("");
    }
    
    @Override
    public void glEvaluateDepthValuesARB() {
        this.printIndent();
        this.print("glEvaluateDepthValuesARB()");
        this.downstreamGL4bc.glEvaluateDepthValuesARB();
        this.println("");
    }
    
    @Override
    public void glExtractComponentEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glExtractComponentEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glExtractComponentEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFeedbackBuffer(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glFeedbackBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glFeedbackBuffer(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public long glFenceSync(final int n, final int n2) {
        this.printIndent();
        this.print("glFenceSync(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final long glFenceSync = this.downstreamGL4bc.glFenceSync(n, n2);
        this.println(" = " + glFenceSync);
        return glFenceSync;
    }
    
    @Override
    public void glFinish() {
        this.printIndent();
        this.print("glFinish()");
        this.downstreamGL4bc.glFinish();
        this.println("");
    }
    
    @Override
    public void glFinishTextureSUNX() {
        this.printIndent();
        this.print("glFinishTextureSUNX()");
        this.downstreamGL4bc.glFinishTextureSUNX();
        this.println("");
    }
    
    @Override
    public void glFlush() {
        this.printIndent();
        this.print("glFlush()");
        this.downstreamGL4bc.glFlush();
        this.println("");
    }
    
    @Override
    public void glFlushMappedBufferRange(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glFlushMappedBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glFlushMappedBufferRange(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFlushMappedNamedBufferRange(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glFlushMappedNamedBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glFlushMappedNamedBufferRange(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFlushMappedNamedBufferRangeEXT(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glFlushMappedNamedBufferRangeEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glFlushMappedNamedBufferRangeEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFlushPixelDataRangeNV(final int n) {
        this.printIndent();
        this.print("glFlushPixelDataRangeNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFlushPixelDataRangeNV(n);
        this.println("");
    }
    
    @Override
    public void glFlushVertexArrayRangeAPPLE(final int n, final Buffer buffer) {
        this.printIndent();
        this.print("glFlushVertexArrayRangeAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glFlushVertexArrayRangeAPPLE(n, buffer);
        this.println("");
    }
    
    @Override
    public void glFogCoordFormatNV(final int n, final int n2) {
        this.printIndent();
        this.print("glFogCoordFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFogCoordFormatNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glFogCoordPointer(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glFogCoordPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glFogCoordPointer(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glFogCoordPointer(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glFogCoordPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glFogCoordPointer(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFogCoordd(final double n) {
        this.printIndent();
        this.print("glFogCoordd(<double> " + n + ")");
        this.downstreamGL4bc.glFogCoordd(n);
        this.println("");
    }
    
    @Override
    public void glFogCoorddv(final double[] array, final int n) {
        this.printIndent();
        this.print("glFogCoorddv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFogCoorddv(array, n);
        this.println("");
    }
    
    @Override
    public void glFogCoorddv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glFogCoorddv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glFogCoorddv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glFogCoordf(final float n) {
        this.printIndent();
        this.print("glFogCoordf(<float> " + n + ")");
        this.downstreamGL4bc.glFogCoordf(n);
        this.println("");
    }
    
    @Override
    public void glFogCoordfv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glFogCoordfv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glFogCoordfv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glFogCoordfv(final float[] array, final int n) {
        this.printIndent();
        this.print("glFogCoordfv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFogCoordfv(array, n);
        this.println("");
    }
    
    @Override
    public void glFogCoordh(final short n) {
        this.printIndent();
        this.print("glFogCoordh(<short> " + n + ")");
        this.downstreamGL4bc.glFogCoordh(n);
        this.println("");
    }
    
    @Override
    public void glFogCoordhv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glFogCoordhv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glFogCoordhv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glFogCoordhv(final short[] array, final int n) {
        this.printIndent();
        this.print("glFogCoordhv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFogCoordhv(array, n);
        this.println("");
    }
    
    @Override
    public void glFogf(final int n, final float n2) {
        this.printIndent();
        this.print("glFogf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glFogf(n, n2);
        this.println("");
    }
    
    @Override
    public void glFogfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glFogfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFogfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glFogfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glFogfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glFogfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glFogi(final int n, final int n2) {
        this.printIndent();
        this.print("glFogi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFogi(n, n2);
        this.println("");
    }
    
    @Override
    public void glFogiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glFogiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glFogiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glFogiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glFogiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFogiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glFragmentCoverageColorNV(final int n) {
        this.printIndent();
        this.print("glFragmentCoverageColorNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFragmentCoverageColorNV(n);
        this.println("");
    }
    
    @Override
    public void glFrameTerminatorGREMEDY() {
        this.printIndent();
        this.print("glFrameTerminatorGREMEDY()");
        this.downstreamGL4bc.glFrameTerminatorGREMEDY();
        this.println("");
    }
    
    @Override
    public void glFramebufferDrawBufferEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glFramebufferDrawBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferDrawBufferEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glFramebufferDrawBuffersEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glFramebufferDrawBuffersEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glFramebufferDrawBuffersEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glFramebufferDrawBuffersEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glFramebufferDrawBuffersEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferDrawBuffersEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glFramebufferParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glFramebufferParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glFramebufferReadBufferEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glFramebufferReadBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferReadBufferEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glFramebufferRenderbuffer(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glFramebufferRenderbuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferRenderbuffer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferSampleLocationsfvARB(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glFramebufferSampleLocationsfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferSampleLocationsfvARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferSampleLocationsfvARB(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glFramebufferSampleLocationsfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glFramebufferSampleLocationsfvARB(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glFramebufferSampleLocationsfvNV(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glFramebufferSampleLocationsfvNV(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glFramebufferSampleLocationsfvNV(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferSampleLocationsfvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferTexture(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glFramebufferTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTexture(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferTexture1D(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTexture1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTexture1D(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTexture2D(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTexture2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTexture2D(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTexture3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glFramebufferTexture3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTexture3D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureARB(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glFramebufferTextureARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glFramebufferTextureEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureFaceARB(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTextureFaceARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureFaceARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureFaceEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTextureFaceEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureFaceEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureLayer(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTextureLayer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureLayer(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureLayerARB(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glFramebufferTextureLayerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureLayerARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glFramebufferTextureMultiviewOVR(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glFramebufferTextureMultiviewOVR(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glFramebufferTextureMultiviewOVR(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glFrontFace(final int n) {
        this.printIndent();
        this.print("glFrontFace(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glFrontFace(n);
        this.println("");
    }
    
    @Override
    public void glFrustum(final double n, final double n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glFrustum(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glFrustum(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glFrustumf(final float n, final float n2, final float n3, final float n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glFrustumf(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glFrustumf(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glGenBuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenBuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenBuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenBuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenFramebuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenFramebuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenFramebuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenFramebuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenFramebuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public int glGenLists(final int n) {
        this.printIndent();
        this.print("glGenLists(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glGenLists = this.downstreamGL4bc.glGenLists(n);
        this.println(" = " + glGenLists);
        return glGenLists;
    }
    
    @Override
    public void glGenNamesAMD(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGenNamesAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGenNamesAMD(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGenNamesAMD(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenNamesAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenNamesAMD(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenOcclusionQueriesNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenOcclusionQueriesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenOcclusionQueriesNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenOcclusionQueriesNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenOcclusionQueriesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenOcclusionQueriesNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenPerfMonitorsAMD(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenPerfMonitorsAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenPerfMonitorsAMD(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenPerfMonitorsAMD(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenPerfMonitorsAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenPerfMonitorsAMD(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenProgramPipelines(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenProgramPipelines(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenProgramPipelines(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenProgramPipelines(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenProgramPipelines(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenProgramsARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenProgramsARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenProgramsARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenProgramsARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenProgramsARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenProgramsARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenQueries(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenQueries(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenQueries(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenQueries(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenQueries(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenRenderbuffers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenRenderbuffers(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenRenderbuffers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenRenderbuffers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenSamplers(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenSamplers(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenSamplers(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenSamplers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenSamplers(n, array, n2);
        this.println("");
    }
    
    @Override
    public int glGenSymbolsEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glGenSymbolsEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final int glGenSymbolsEXT = this.downstreamGL4bc.glGenSymbolsEXT(n, n2, n3, n4);
        this.println(" = " + glGenSymbolsEXT);
        return glGenSymbolsEXT;
    }
    
    @Override
    public void glGenTextures(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenTextures(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenTextures(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenTextures(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenTransformFeedbacks(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenTransformFeedbacks(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenTransformFeedbacks(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenTransformFeedbacks(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenTransformFeedbacks(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenTransformFeedbacksNV(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenTransformFeedbacksNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenTransformFeedbacksNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenTransformFeedbacksNV(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenTransformFeedbacksNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenTransformFeedbacksNV(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGenVertexArrays(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGenVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenVertexArrays(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGenVertexArrays(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGenVertexArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGenVertexArrays(n, intBuffer);
        this.println("");
    }
    
    @Override
    public int glGenVertexShadersEXT(final int n) {
        this.printIndent();
        this.print("glGenVertexShadersEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glGenVertexShadersEXT = this.downstreamGL4bc.glGenVertexShadersEXT(n);
        this.println(" = " + glGenVertexShadersEXT);
        return glGenVertexShadersEXT;
    }
    
    @Override
    public void glGenerateMipmap(final int n) {
        this.printIndent();
        this.print("glGenerateMipmap(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glGenerateMipmap(n);
        this.println("");
    }
    
    @Override
    public void glGenerateMultiTexMipmapEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glGenerateMultiTexMipmapEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenerateMultiTexMipmapEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glGenerateTextureMipmap(final int n) {
        this.printIndent();
        this.print("glGenerateTextureMipmap(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glGenerateTextureMipmap(n);
        this.println("");
    }
    
    @Override
    public void glGenerateTextureMipmapEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glGenerateTextureMipmapEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGenerateTextureMipmapEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glGetActiveAtomicCounterBufferiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetActiveAtomicCounterBufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetActiveAtomicCounterBufferiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveAtomicCounterBufferiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetActiveAtomicCounterBufferiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveAtomicCounterBufferiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetActiveAttrib(final int n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5, final int[] array3, final int n6, final byte[] array4, final int n7) {
        this.printIndent();
        this.print("glGetActiveAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveAttrib(n, n2, n3, array, n4, array2, n5, array3, n6, array4, n7);
        this.println("");
    }
    
    @Override
    public void glGetActiveAttrib(final int n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveAttrib(n, n2, n3, intBuffer, intBuffer2, intBuffer3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineName(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveSubroutineName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveSubroutineName(n, n2, n3, n4, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineName(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5, final byte[] array2, final int n6) {
        this.printIndent();
        this.print("glGetActiveSubroutineName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveSubroutineName(n, n2, n3, n4, array, n5, array2, n6);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineUniformName(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveSubroutineUniformName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveSubroutineUniformName(n, n2, n3, n4, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineUniformName(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5, final byte[] array2, final int n6) {
        this.printIndent();
        this.print("glGetActiveSubroutineUniformName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveSubroutineUniformName(n, n2, n3, n4, array, n5, array2, n6);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineUniformiv(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glGetActiveSubroutineUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveSubroutineUniformiv(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetActiveSubroutineUniformiv(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetActiveSubroutineUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetActiveSubroutineUniformiv(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniform(final int n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveUniform(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveUniform(n, n2, n3, intBuffer, intBuffer2, intBuffer3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniform(final int n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5, final int[] array3, final int n6, final byte[] array4, final int n7) {
        this.printIndent();
        this.print("glGetActiveUniform(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniform(n, n2, n3, array, n4, array2, n5, array3, n6, array4, n7);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformARB(final long n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5, final int[] array3, final int n6, final byte[] array4, final int n7) {
        this.printIndent();
        this.print("glGetActiveUniformARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniformARB(n, n2, n3, array, n4, array2, n5, array3, n6, array4, n7);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformARB(final long n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveUniformARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveUniformARB(n, n2, n3, intBuffer, intBuffer2, intBuffer3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformBlockName(final int n, final int n2, final int n3, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveUniformBlockName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveUniformBlockName(n, n2, n3, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformBlockName(final int n, final int n2, final int n3, final int[] array, final int n4, final byte[] array2, final int n5) {
        this.printIndent();
        this.print("glGetActiveUniformBlockName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniformBlockName(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformBlockiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetActiveUniformBlockiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniformBlockiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformBlockiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetActiveUniformBlockiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetActiveUniformBlockiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformName(final int n, final int n2, final int n3, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetActiveUniformName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetActiveUniformName(n, n2, n3, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformName(final int n, final int n2, final int n3, final int[] array, final int n4, final byte[] array2, final int n5) {
        this.printIndent();
        this.print("glGetActiveUniformName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniformName(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformsiv(final int n, final int n2, final int[] array, final int n3, final int n4, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glGetActiveUniformsiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetActiveUniformsiv(n, n2, array, n3, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetActiveUniformsiv(final int n, final int n2, final IntBuffer intBuffer, final int n3, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetActiveUniformsiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetActiveUniformsiv(n, n2, intBuffer, n3, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glGetAttachedObjectsARB(final long n, final int n2, final int[] array, final int n3, final long[] array2, final int n4) {
        this.printIndent();
        this.print("glGetAttachedObjectsARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetAttachedObjectsARB(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetAttachedObjectsARB(final long n, final int n2, final IntBuffer intBuffer, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetAttachedObjectsARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetAttachedObjectsARB(n, n2, intBuffer, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetAttachedShaders(final int n, final int n2, final int[] array, final int n3, final int[] array2, final int n4) {
        this.printIndent();
        this.print("glGetAttachedShaders(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetAttachedShaders(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetAttachedShaders(final int n, final int n2, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetAttachedShaders(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetAttachedShaders(n, n2, intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public int glGetAttribLocation(final int n, final String s) {
        this.printIndent();
        this.print("glGetAttribLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetAttribLocation = this.downstreamGL4bc.glGetAttribLocation(n, s);
        this.println(" = " + glGetAttribLocation);
        return glGetAttribLocation;
    }
    
    @Override
    public void glGetBooleanIndexedv(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetBooleanIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetBooleanIndexedv(n, n2, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBooleanIndexedv(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetBooleanIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBooleanIndexedv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetBooleani_v(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetBooleani_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetBooleani_v(n, n2, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBooleani_v(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetBooleani_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBooleani_v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetBooleanv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetBooleanv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetBooleanv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBooleanv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glGetBooleanv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBooleanv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameteri64v(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetBufferParameteri64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBufferParameteri64v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameteri64v(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetBufferParameteri64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetBufferParameteri64v(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetBufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameterui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetBufferParameterui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetBufferParameterui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetBufferParameterui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetBufferParameterui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetBufferParameterui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetBufferSubData(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetBufferSubData(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetClipPlane(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glGetClipPlane(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetClipPlane(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetClipPlane(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetClipPlane(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetClipPlane(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetClipPlanef(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glGetClipPlanef(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetClipPlanef(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetClipPlanef(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetClipPlanef(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetClipPlanef(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetColorTable(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetColorTable(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetColorTable(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetColorTable(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetColorTableParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetColorTableParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetColorTableParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetColorTableParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetColorTableParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetColorTableParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetColorTableParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetColorTableParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetColorTableParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetColorTableParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetColorTableParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetColorTableParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public int glGetCommandHeaderNV(final int n, final int n2) {
        this.printIndent();
        this.print("glGetCommandHeaderNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glGetCommandHeaderNV = this.downstreamGL4bc.glGetCommandHeaderNV(n, n2);
        this.println(" = " + glGetCommandHeaderNV);
        return glGetCommandHeaderNV;
    }
    
    @Override
    public void glGetCompressedMultiTexImageEXT(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetCompressedMultiTexImageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetCompressedMultiTexImageEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetCompressedTexImage(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glGetCompressedTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glGetCompressedTexImage(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glGetCompressedTexImage(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glGetCompressedTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetCompressedTexImage(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glGetCompressedTextureImage(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetCompressedTextureImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetCompressedTextureImage(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetCompressedTextureImageEXT(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetCompressedTextureImageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetCompressedTextureImageEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetCompressedTextureSubImage(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glGetCompressedTextureSubImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetCompressedTextureSubImage(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionFilter(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetConvolutionFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetConvolutionFilter(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionFilter(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetConvolutionFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetConvolutionFilter(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetConvolutionParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetConvolutionParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetConvolutionParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetConvolutionParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetConvolutionParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetConvolutionParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetConvolutionParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetConvolutionParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetConvolutionParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetCoverageModulationTableNV(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glGetCoverageModulationTableNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetCoverageModulationTableNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetCoverageModulationTableNV(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetCoverageModulationTableNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetCoverageModulationTableNV(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public int glGetDebugMessageLog(final int n, final int n2, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final IntBuffer intBuffer4, final IntBuffer intBuffer5, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetDebugMessageLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.IntBuffer> " + intBuffer4 + ", " + "<java.nio.IntBuffer> " + intBuffer5 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final int glGetDebugMessageLog = this.downstreamGL4bc.glGetDebugMessageLog(n, n2, intBuffer, intBuffer2, intBuffer3, intBuffer4, intBuffer5, byteBuffer);
        this.println(" = " + glGetDebugMessageLog);
        return glGetDebugMessageLog;
    }
    
    @Override
    public int glGetDebugMessageLog(final int n, final int n2, final int[] array, final int n3, final int[] array2, final int n4, final int[] array3, final int n5, final int[] array4, final int n6, final int[] array5, final int n7, final byte[] array6, final int n8) {
        this.printIndent();
        this.print("glGetDebugMessageLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        final int glGetDebugMessageLog = this.downstreamGL4bc.glGetDebugMessageLog(n, n2, array, n3, array2, n4, array3, n5, array4, n6, array5, n7, array6, n8);
        this.println(" = " + glGetDebugMessageLog);
        return glGetDebugMessageLog;
    }
    
    @Override
    public int glGetDebugMessageLogAMD(final int n, final int n2, final int[] array, final int n3, final int[] array2, final int n4, final int[] array3, final int n5, final int[] array4, final int n6, final byte[] array5, final int n7) {
        this.printIndent();
        this.print("glGetDebugMessageLogAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        final int glGetDebugMessageLogAMD = this.downstreamGL4bc.glGetDebugMessageLogAMD(n, n2, array, n3, array2, n4, array3, n5, array4, n6, array5, n7);
        this.println(" = " + glGetDebugMessageLogAMD);
        return glGetDebugMessageLogAMD;
    }
    
    @Override
    public int glGetDebugMessageLogAMD(final int n, final int n2, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final IntBuffer intBuffer4, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetDebugMessageLogAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.IntBuffer> " + intBuffer4 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final int glGetDebugMessageLogAMD = this.downstreamGL4bc.glGetDebugMessageLogAMD(n, n2, intBuffer, intBuffer2, intBuffer3, intBuffer4, byteBuffer);
        this.println(" = " + glGetDebugMessageLogAMD);
        return glGetDebugMessageLogAMD;
    }
    
    @Override
    public void glGetDoubleIndexedvEXT(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetDoubleIndexedvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetDoubleIndexedvEXT(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetDoubleIndexedvEXT(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetDoubleIndexedvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetDoubleIndexedvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetDoublei_v(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetDoublei_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetDoublei_v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetDoublei_v(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetDoublei_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetDoublei_v(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetDoublei_vEXT(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetDoublei_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetDoublei_vEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetDoublei_vEXT(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetDoublei_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetDoublei_vEXT(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetDoublev(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glGetDoublev(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetDoublev(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetDoublev(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetDoublev(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetDoublev(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public int glGetError() {
        this.printIndent();
        this.print("glGetError()");
        final int glGetError = this.downstreamGL4bc.glGetError();
        this.println(" = " + glGetError);
        return glGetError;
    }
    
    @Override
    public void glGetFirstPerfQueryIdINTEL(final int[] array, final int n) {
        this.printIndent();
        this.print("glGetFirstPerfQueryIdINTEL(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFirstPerfQueryIdINTEL(array, n);
        this.println("");
    }
    
    @Override
    public void glGetFirstPerfQueryIdINTEL(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetFirstPerfQueryIdINTEL(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetFirstPerfQueryIdINTEL(intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFloatIndexedvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetFloatIndexedvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetFloatIndexedvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFloatIndexedvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetFloatIndexedvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFloatIndexedvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetFloati_v(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetFloati_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetFloati_v(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFloati_v(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetFloati_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFloati_v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetFloati_vEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetFloati_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFloati_vEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetFloati_vEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetFloati_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetFloati_vEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFloatv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetFloatv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetFloatv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFloatv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glGetFloatv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFloatv(n, array, n2);
        this.println("");
    }
    
    @Override
    public int glGetFragDataIndex(final int n, final String s) {
        this.printIndent();
        this.print("glGetFragDataIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetFragDataIndex = this.downstreamGL4bc.glGetFragDataIndex(n, s);
        this.println(" = " + glGetFragDataIndex);
        return glGetFragDataIndex;
    }
    
    @Override
    public int glGetFragDataLocation(final int n, final String s) {
        this.printIndent();
        this.print("glGetFragDataLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetFragDataLocation = this.downstreamGL4bc.glGetFragDataLocation(n, s);
        this.println(" = " + glGetFragDataLocation);
        return glGetFragDataLocation;
    }
    
    @Override
    public void glGetFramebufferAttachmentParameteriv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFramebufferAttachmentParameteriv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetFramebufferAttachmentParameteriv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetFramebufferAttachmentParameteriv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFramebufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetFramebufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetFramebufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFramebufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetFramebufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFramebufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetFramebufferParameterivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetFramebufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetFramebufferParameterivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetFramebufferParameterivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetFramebufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetFramebufferParameterivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public int glGetGraphicsResetStatus() {
        this.printIndent();
        this.print("glGetGraphicsResetStatus()");
        final int glGetGraphicsResetStatus = this.downstreamGL4bc.glGetGraphicsResetStatus();
        this.println(" = " + glGetGraphicsResetStatus);
        return glGetGraphicsResetStatus;
    }
    
    @Override
    public long glGetHandleARB(final int n) {
        this.printIndent();
        this.print("glGetHandleARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final long glGetHandleARB = this.downstreamGL4bc.glGetHandleARB(n);
        this.println(" = " + glGetHandleARB);
        return glGetHandleARB;
    }
    
    @Override
    public void glGetHistogram(final int n, final boolean b, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetHistogram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetHistogram(n, b, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetHistogram(final int n, final boolean b, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetHistogram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetHistogram(n, b, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetHistogramParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetHistogramParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetHistogramParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetHistogramParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetHistogramParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetHistogramParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetHistogramParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetHistogramParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetHistogramParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetHistogramParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetHistogramParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetHistogramParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public long glGetImageHandleARB(final int n, final int n2, final boolean b, final int n3, final int n4) {
        this.printIndent();
        this.print("glGetImageHandleARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final long glGetImageHandleARB = this.downstreamGL4bc.glGetImageHandleARB(n, n2, b, n3, n4);
        this.println(" = " + glGetImageHandleARB);
        return glGetImageHandleARB;
    }
    
    @Override
    public void glGetInfoLogARB(final long n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetInfoLogARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInfoLogARB(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetInfoLogARB(final long n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetInfoLogARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetInfoLogARB(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInteger64i_v(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetInteger64i_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetInteger64i_v(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInteger64i_v(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetInteger64i_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInteger64i_v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetInteger64v(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetInteger64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetInteger64v(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInteger64v(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glGetInteger64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInteger64v(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetIntegerIndexedv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetIntegerIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetIntegerIndexedv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetIntegerIndexedv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetIntegerIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetIntegerIndexedv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetIntegeri_v(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetIntegeri_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetIntegeri_v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetIntegeri_v(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetIntegeri_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetIntegeri_v(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetIntegerui64i_vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetIntegerui64i_vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetIntegerui64i_vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetIntegerui64i_vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetIntegerui64i_vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetIntegerui64i_vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetIntegerui64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glGetIntegerui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetIntegerui64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetIntegerui64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetIntegerui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetIntegerui64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetIntegerv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetIntegerv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetIntegerv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetIntegerv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGetIntegerv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetIntegerv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetInternalformati64v(final int n, final int n2, final int n3, final int n4, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetInternalformati64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetInternalformati64v(n, n2, n3, n4, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInternalformati64v(final int n, final int n2, final int n3, final int n4, final long[] array, final int n5) {
        this.printIndent();
        this.print("glGetInternalformati64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInternalformati64v(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetInternalformativ(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetInternalformativ(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetInternalformativ(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInternalformativ(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glGetInternalformativ(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInternalformativ(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetInvariantBooleanvEXT(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetInvariantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetInvariantBooleanvEXT(n, n2, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInvariantBooleanvEXT(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetInvariantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInvariantBooleanvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetInvariantFloatvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetInvariantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetInvariantFloatvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInvariantFloatvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetInvariantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInvariantFloatvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetInvariantIntegervEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetInvariantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetInvariantIntegervEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetInvariantIntegervEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetInvariantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetInvariantIntegervEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLightfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetLightfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetLightfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLightfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetLightfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetLightfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetLightiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetLightiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetLightiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetLightiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetLightiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetLightiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantBooleanvEXT(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetLocalConstantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetLocalConstantBooleanvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantBooleanvEXT(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetLocalConstantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetLocalConstantBooleanvEXT(n, n2, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantFloatvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetLocalConstantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetLocalConstantFloatvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantFloatvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetLocalConstantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetLocalConstantFloatvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantIntegervEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetLocalConstantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetLocalConstantIntegervEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetLocalConstantIntegervEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetLocalConstantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetLocalConstantIntegervEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapAttribParameterfvNV(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMapAttribParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMapAttribParameterfvNV(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapAttribParameterfvNV(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetMapAttribParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapAttribParameterfvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMapAttribParameterivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMapAttribParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapAttribParameterivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMapAttribParameterivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMapAttribParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMapAttribParameterivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapControlPointsNV(final int n, final int n2, final int n3, final int n4, final int n5, final boolean b, final Buffer buffer) {
        this.printIndent();
        this.print("glGetMapControlPointsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetMapControlPointsNV(n, n2, n3, n4, n5, b, buffer);
        this.println("");
    }
    
    @Override
    public void glGetMapParameterfvNV(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMapParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapParameterfvNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMapParameterfvNV(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMapParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMapParameterfvNV(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapParameterivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetMapParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapParameterivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMapParameterivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMapParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMapParameterivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapdv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetMapdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapdv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMapdv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetMapdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetMapdv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMapfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMapfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMapiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetMapiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMapiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMapiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMapiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMapiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMaterialfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMaterialfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMaterialfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMaterialfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMaterialfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMaterialfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMaterialiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetMaterialiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMaterialiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMaterialiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMaterialiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMaterialiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMinmax(final int n, final boolean b, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetMinmax(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetMinmax(n, b, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetMinmax(final int n, final boolean b, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetMinmax(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetMinmax(n, b, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetMinmaxParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMinmaxParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMinmaxParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMinmaxParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMinmaxParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMinmaxParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMinmaxParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMinmaxParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMinmaxParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMinmaxParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetMinmaxParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMinmaxParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexEnvfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexEnvfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexEnvfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexEnvfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultiTexEnvfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexEnvfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexEnvivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexEnvivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexEnvivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexEnvivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexEnvivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexEnvivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGendvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexGendvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexGendvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGendvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetMultiTexGendvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexGendvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGenfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultiTexGenfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexGenfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGenfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexGenfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexGenfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGenivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexGenivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexGenivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexGenivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexGenivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexGenivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexImageEXT(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glGetMultiTexImageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetMultiTexImageEXT(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexLevelParameterfvEXT(final int n, final int n2, final int n3, final int n4, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultiTexLevelParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexLevelParameterfvEXT(n, n2, n3, n4, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexLevelParameterfvEXT(final int n, final int n2, final int n3, final int n4, final float[] array, final int n5) {
        this.printIndent();
        this.print("glGetMultiTexLevelParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexLevelParameterfvEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexLevelParameterivEXT(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexLevelParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexLevelParameterivEXT(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexLevelParameterivEXT(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glGetMultiTexLevelParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexLevelParameterivEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterIivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexParameterIivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterIivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexParameterIivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterIuivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexParameterIuivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterIuivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexParameterIuivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexParameterfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultiTexParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexParameterfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetMultiTexParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultiTexParameterivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetMultiTexParameterivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetMultiTexParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetMultiTexParameterivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultisamplefv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMultisamplefv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultisamplefv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMultisamplefv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultisamplefv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultisamplefv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetMultisamplefvNV(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetMultisamplefvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetMultisamplefvNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetMultisamplefvNV(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetMultisamplefvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetMultisamplefvNV(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameteri64v(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedBufferParameteri64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedBufferParameteri64v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameteri64v(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetNamedBufferParameteri64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetNamedBufferParameteri64v(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedBufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedBufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedBufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedBufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameterivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedBufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedBufferParameterivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameterivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedBufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedBufferParameterivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameterui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetNamedBufferParameterui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetNamedBufferParameterui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferParameterui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedBufferParameterui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedBufferParameterui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferPointerv(final int n, final int n2, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glGetNamedBufferPointerv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glGetNamedBufferPointerv(n, n2, pointerBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferSubData(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetNamedBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetNamedBufferSubData(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedBufferSubDataEXT(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetNamedBufferSubDataEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetNamedBufferSubDataEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferAttachmentParameteriv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedFramebufferAttachmentParameteriv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferAttachmentParameteriv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedFramebufferAttachmentParameteriv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferAttachmentParameterivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedFramebufferAttachmentParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedFramebufferAttachmentParameterivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferAttachmentParameterivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedFramebufferAttachmentParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedFramebufferAttachmentParameterivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedFramebufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedFramebufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedFramebufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedFramebufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedFramebufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterIivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterIivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterIivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterIivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterIuivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterIuivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterIuivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterIuivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterdvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterdvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterdvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterdvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramLocalParameterfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedProgramLocalParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedProgramLocalParameterfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramStringEXT(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetNamedProgramStringEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetNamedProgramStringEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedProgramivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedProgramivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedProgramivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetNamedProgramivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedProgramivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedRenderbufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedRenderbufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedRenderbufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedRenderbufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedRenderbufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedRenderbufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedRenderbufferParameterivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedRenderbufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedRenderbufferParameterivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedRenderbufferParameterivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedRenderbufferParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedRenderbufferParameterivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNamedStringARB(final int n, final String s, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetNamedStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetNamedStringARB(n, s, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedStringARB(final int n, final String s, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetNamedStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedStringARB(n, s, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetNamedStringivARB(final int n, final String s, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNamedStringivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNamedStringivARB(n, s, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetNamedStringivARB(final int n, final String s, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetNamedStringivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNamedStringivARB(n, s, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetNextPerfQueryIdINTEL(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGetNextPerfQueryIdINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetNextPerfQueryIdINTEL(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetNextPerfQueryIdINTEL(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetNextPerfQueryIdINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetNextPerfQueryIdINTEL(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetObjectLabel(final int n, final int n2, final int n3, final int[] array, final int n4, final byte[] array2, final int n5) {
        this.printIndent();
        this.print("glGetObjectLabel(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetObjectLabel(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetObjectLabel(final int n, final int n2, final int n3, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetObjectLabel(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetObjectLabel(n, n2, n3, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterfvARB(final long n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetObjectParameterfvARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetObjectParameterfvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterfvARB(final long n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetObjectParameterfvARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetObjectParameterfvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterivAPPLE(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetObjectParameterivAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetObjectParameterivAPPLE(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterivAPPLE(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetObjectParameterivAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetObjectParameterivAPPLE(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterivARB(final long n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetObjectParameterivARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetObjectParameterivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetObjectParameterivARB(final long n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetObjectParameterivARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetObjectParameterivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetObjectPtrLabel(final Buffer buffer, final int n, final int[] array, final int n2, final byte[] array2, final int n3) {
        this.printIndent();
        this.print("glGetObjectPtrLabel(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetObjectPtrLabel(buffer, n, array, n2, array2, n3);
        this.println("");
    }
    
    @Override
    public void glGetObjectPtrLabel(final Buffer buffer, final int n, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetObjectPtrLabel(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetObjectPtrLabel(buffer, n, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetOcclusionQueryivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetOcclusionQueryivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetOcclusionQueryivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetOcclusionQueryivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetOcclusionQueryivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetOcclusionQueryivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetOcclusionQueryuivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetOcclusionQueryuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetOcclusionQueryuivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetOcclusionQueryuivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetOcclusionQueryuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetOcclusionQueryuivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetPerfCounterInfoINTEL(final int n, final int n2, final int n3, final ByteBuffer byteBuffer, final int n4, final ByteBuffer byteBuffer2, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final IntBuffer intBuffer4, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetPerfCounterInfoINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.IntBuffer> " + intBuffer4 + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetPerfCounterInfoINTEL(n, n2, n3, byteBuffer, n4, byteBuffer2, intBuffer, intBuffer2, intBuffer3, intBuffer4, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfCounterInfoINTEL(final int n, final int n2, final int n3, final byte[] array, final int n4, final int n5, final byte[] array2, final int n6, final int[] array3, final int n7, final int[] array4, final int n8, final int[] array5, final int n9, final int[] array6, final int n10, final long[] array7, final int n11) {
        this.printIndent();
        this.print("glGetPerfCounterInfoINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfCounterInfoINTEL(n, n2, n3, array, n4, n5, array2, n6, array3, n7, array4, n8, array5, n9, array6, n10, array7, n11);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCounterDataAMD(final int n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glGetPerfMonitorCounterDataAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfMonitorCounterDataAMD(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCounterDataAMD(final int n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetPerfMonitorCounterDataAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetPerfMonitorCounterDataAMD(n, n2, n3, intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCounterInfoAMD(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetPerfMonitorCounterInfoAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetPerfMonitorCounterInfoAMD(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCounterStringAMD(final int n, final int n2, final int n3, final int[] array, final int n4, final byte[] array2, final int n5) {
        this.printIndent();
        this.print("glGetPerfMonitorCounterStringAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfMonitorCounterStringAMD(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCounterStringAMD(final int n, final int n2, final int n3, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetPerfMonitorCounterStringAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetPerfMonitorCounterStringAMD(n, n2, n3, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCountersAMD(final int n, final IntBuffer intBuffer, final IntBuffer intBuffer2, final int n2, final IntBuffer intBuffer3) {
        this.printIndent();
        this.print("glGetPerfMonitorCountersAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ")");
        this.downstreamGL4bc.glGetPerfMonitorCountersAMD(n, intBuffer, intBuffer2, n2, intBuffer3);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorCountersAMD(final int n, final int[] array, final int n2, final int[] array2, final int n3, final int n4, final int[] array3, final int n5) {
        this.printIndent();
        this.print("glGetPerfMonitorCountersAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfMonitorCountersAMD(n, array, n2, array2, n3, n4, array3, n5);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorGroupStringAMD(final int n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetPerfMonitorGroupStringAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfMonitorGroupStringAMD(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorGroupStringAMD(final int n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetPerfMonitorGroupStringAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetPerfMonitorGroupStringAMD(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorGroupsAMD(final int[] array, final int n, final int n2, final int[] array2, final int n3) {
        this.printIndent();
        this.print("glGetPerfMonitorGroupsAMD(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfMonitorGroupsAMD(array, n, n2, array2, n3);
        this.println("");
    }
    
    @Override
    public void glGetPerfMonitorGroupsAMD(final IntBuffer intBuffer, final int n, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetPerfMonitorGroupsAMD(<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetPerfMonitorGroupsAMD(intBuffer, n, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryDataINTEL(final int n, final int n2, final int n3, final Buffer buffer, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetPerfQueryDataINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfQueryDataINTEL(n, n2, n3, buffer, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryDataINTEL(final int n, final int n2, final int n3, final Buffer buffer, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetPerfQueryDataINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetPerfQueryDataINTEL(n, n2, n3, buffer, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryIdByNameINTEL(final ByteBuffer byteBuffer, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetPerfQueryIdByNameINTEL(<java.nio.ByteBuffer> " + byteBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetPerfQueryIdByNameINTEL(byteBuffer, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryIdByNameINTEL(final byte[] array, final int n, final int[] array2, final int n2) {
        this.printIndent();
        this.print("glGetPerfQueryIdByNameINTEL(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfQueryIdByNameINTEL(array, n, array2, n2);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryInfoINTEL(final int n, final int n2, final byte[] array, final int n3, final int[] array2, final int n4, final int[] array3, final int n5, final int[] array4, final int n6, final int[] array5, final int n7) {
        this.printIndent();
        this.print("glGetPerfQueryInfoINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPerfQueryInfoINTEL(n, n2, array, n3, array2, n4, array3, n5, array4, n6, array5, n7);
        this.println("");
    }
    
    @Override
    public void glGetPerfQueryInfoINTEL(final int n, final int n2, final ByteBuffer byteBuffer, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final IntBuffer intBuffer4) {
        this.printIndent();
        this.print("glGetPerfQueryInfoINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.IntBuffer> " + intBuffer4 + ")");
        this.downstreamGL4bc.glGetPerfQueryInfoINTEL(n, n2, byteBuffer, intBuffer, intBuffer2, intBuffer3, intBuffer4);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glGetPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPixelMapfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetPixelMapfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapfv(final int n, final long n2) {
        this.printIndent();
        this.print("glGetPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glGetPixelMapfv(n, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapuiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetPixelMapuiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapuiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glGetPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPixelMapuiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapuiv(final int n, final long n2) {
        this.printIndent();
        this.print("glGetPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glGetPixelMapuiv(n, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapusv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glGetPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPixelMapusv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapusv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glGetPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glGetPixelMapusv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPixelMapusv(final int n, final long n2) {
        this.printIndent();
        this.print("glGetPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glGetPixelMapusv(n, n2);
        this.println("");
    }
    
    @Override
    public void glGetPixelTransformParameterfvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetPixelTransformParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPixelTransformParameterfvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetPixelTransformParameterfvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetPixelTransformParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetPixelTransformParameterfvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPixelTransformParameterivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetPixelTransformParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPixelTransformParameterivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetPixelTransformParameterivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetPixelTransformParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetPixelTransformParameterivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPointeri_vEXT(final int n, final int n2, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glGetPointeri_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glGetPointeri_vEXT(n, n2, pointerBuffer);
        this.println("");
    }
    
    @Override
    public void glGetPolygonStipple(final byte[] array, final int n) {
        this.printIndent();
        this.print("glGetPolygonStipple(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glGetPolygonStipple(array, n);
        this.println("");
    }
    
    @Override
    public void glGetPolygonStipple(final long n) {
        this.printIndent();
        this.print("glGetPolygonStipple(<long> " + n + ")");
        this.downstreamGL4bc.glGetPolygonStipple(n);
        this.println("");
    }
    
    @Override
    public void glGetPolygonStipple(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetPolygonStipple(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetPolygonStipple(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramBinary(final int n, final int n2, final IntBuffer intBuffer, final IntBuffer intBuffer2, final Buffer buffer) {
        this.printIndent();
        this.print("glGetProgramBinary(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetProgramBinary(n, n2, intBuffer, intBuffer2, buffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramBinary(final int n, final int n2, final int[] array, final int n3, final int[] array2, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetProgramBinary(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetProgramBinary(n, n2, array, n3, array2, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterIivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramEnvParameterIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterIivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterIivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramEnvParameterIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterIivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterIuivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramEnvParameterIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterIuivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterIuivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramEnvParameterIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterIuivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterdvARB(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetProgramEnvParameterdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterdvARB(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterdvARB(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramEnvParameterdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterdvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterfvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramEnvParameterfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterfvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramEnvParameterfvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetProgramEnvParameterfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetProgramEnvParameterfvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramInfoLog(final int n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetProgramInfoLog(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramInfoLog(final int n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetProgramInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramInfoLog(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetProgramInterfaceiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetProgramInterfaceiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramInterfaceiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetProgramInterfaceiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramInterfaceiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramInterfaceiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterIivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramLocalParameterIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterIivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterIivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramLocalParameterIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterIivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterIuivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramLocalParameterIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterIuivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterIuivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramLocalParameterIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterIuivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterdvARB(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetProgramLocalParameterdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterdvARB(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterdvARB(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramLocalParameterdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterdvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterfvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramLocalParameterfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterfvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramLocalParameterfvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetProgramLocalParameterfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetProgramLocalParameterfvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramPipelineInfoLog(final int n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetProgramPipelineInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramPipelineInfoLog(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetProgramPipelineInfoLog(final int n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramPipelineInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetProgramPipelineInfoLog(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramPipelineiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramPipelineiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramPipelineiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramPipelineiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramPipelineiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramPipelineiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public int glGetProgramResourceIndex(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramResourceIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final int glGetProgramResourceIndex = this.downstreamGL4bc.glGetProgramResourceIndex(n, n2, byteBuffer);
        this.println(" = " + glGetProgramResourceIndex);
        return glGetProgramResourceIndex;
    }
    
    @Override
    public int glGetProgramResourceIndex(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramResourceIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glGetProgramResourceIndex = this.downstreamGL4bc.glGetProgramResourceIndex(n, n2, array, n3);
        this.println(" = " + glGetProgramResourceIndex);
        return glGetProgramResourceIndex;
    }
    
    @Override
    public int glGetProgramResourceLocation(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramResourceLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final int glGetProgramResourceLocation = this.downstreamGL4bc.glGetProgramResourceLocation(n, n2, byteBuffer);
        this.println(" = " + glGetProgramResourceLocation);
        return glGetProgramResourceLocation;
    }
    
    @Override
    public int glGetProgramResourceLocation(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramResourceLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glGetProgramResourceLocation = this.downstreamGL4bc.glGetProgramResourceLocation(n, n2, array, n3);
        this.println(" = " + glGetProgramResourceLocation);
        return glGetProgramResourceLocation;
    }
    
    @Override
    public int glGetProgramResourceLocationIndex(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramResourceLocationIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        final int glGetProgramResourceLocationIndex = this.downstreamGL4bc.glGetProgramResourceLocationIndex(n, n2, byteBuffer);
        this.println(" = " + glGetProgramResourceLocationIndex);
        return glGetProgramResourceLocationIndex;
    }
    
    @Override
    public int glGetProgramResourceLocationIndex(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramResourceLocationIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glGetProgramResourceLocationIndex = this.downstreamGL4bc.glGetProgramResourceLocationIndex(n, n2, array, n3);
        this.println(" = " + glGetProgramResourceLocationIndex);
        return glGetProgramResourceLocationIndex;
    }
    
    @Override
    public void glGetProgramResourceName(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetProgramResourceName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetProgramResourceName(n, n2, n3, n4, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramResourceName(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5, final byte[] array2, final int n6) {
        this.printIndent();
        this.print("glGetProgramResourceName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramResourceName(n, n2, n3, n4, array, n5, array2, n6);
        this.println("");
    }
    
    @Override
    public void glGetProgramResourceiv(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5, final int n6, final int[] array2, final int n7, final int[] array3, final int n8) {
        this.printIndent();
        this.print("glGetProgramResourceiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramResourceiv(n, n2, n3, n4, array, n5, n6, array2, n7, array3, n8);
        this.println("");
    }
    
    @Override
    public void glGetProgramResourceiv(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer, final int n5, final IntBuffer intBuffer2, final IntBuffer intBuffer3) {
        this.printIndent();
        this.print("glGetProgramResourceiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ")");
        this.downstreamGL4bc.glGetProgramResourceiv(n, n2, n3, n4, intBuffer, n5, intBuffer2, intBuffer3);
        this.println("");
    }
    
    @Override
    public void glGetProgramStageiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetProgramStageiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramStageiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetProgramStageiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramStageiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramStageiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramStringARB(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glGetProgramStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetProgramStringARB(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramSubroutineParameteruivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramSubroutineParameteruivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramSubroutineParameteruivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramSubroutineParameteruivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramSubroutineParameteruivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramSubroutineParameteruivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetProgramiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetProgramivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetProgramivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetProgramivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetProgramivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetProgramivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryBufferObjecti64v(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetQueryBufferObjecti64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetQueryBufferObjecti64v(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetQueryBufferObjectiv(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetQueryBufferObjectiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetQueryBufferObjectiv(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetQueryBufferObjectui64v(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetQueryBufferObjectui64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetQueryBufferObjectui64v(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetQueryBufferObjectuiv(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glGetQueryBufferObjectuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glGetQueryBufferObjectuiv(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glGetQueryIndexediv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetQueryIndexediv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetQueryIndexediv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryIndexediv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetQueryIndexediv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryIndexediv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjecti64v(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjecti64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjecti64v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjecti64v(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetQueryObjecti64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjecti64v(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjecti64vEXT(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetQueryObjecti64vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjecti64vEXT(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjecti64vEXT(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjecti64vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjecti64vEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetQueryObjectiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjectiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjectiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjectiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectui64v(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjectui64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjectui64v(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectui64v(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetQueryObjectui64v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjectui64v(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectui64vEXT(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetQueryObjectui64vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjectui64vEXT(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectui64vEXT(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjectui64vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjectui64vEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryObjectuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryObjectuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetQueryObjectuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetQueryObjectuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetQueryObjectuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetQueryiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetQueryiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetQueryiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetQueryiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetQueryiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetRenderbufferParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetRenderbufferParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetRenderbufferParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetRenderbufferParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetSamplerParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetSamplerParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetSamplerParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetSamplerParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetSamplerParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetSamplerParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetSamplerParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetSamplerParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetSamplerParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetSamplerParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetSamplerParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetSamplerParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetSamplerParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetSamplerParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetSamplerParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetSamplerParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetSamplerParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetSeparableFilter(final int n, final int n2, final int n3, final Buffer buffer, final Buffer buffer2, final Buffer buffer3) {
        this.printIndent();
        this.print("glGetSeparableFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<java.nio.Buffer> " + buffer2 + ", " + "<java.nio.Buffer> " + buffer3 + ")");
        this.downstreamGL4bc.glGetSeparableFilter(n, n2, n3, buffer, buffer2, buffer3);
        this.println("");
    }
    
    @Override
    public void glGetSeparableFilter(final int n, final int n2, final int n3, final long n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glGetSeparableFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glGetSeparableFilter(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glGetShaderInfoLog(final int n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetShaderInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetShaderInfoLog(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetShaderInfoLog(final int n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetShaderInfoLog(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetShaderInfoLog(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetShaderPrecisionFormat(final int n, final int n2, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetShaderPrecisionFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetShaderPrecisionFormat(n, n2, intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glGetShaderPrecisionFormat(final int n, final int n2, final int[] array, final int n3, final int[] array2, final int n4) {
        this.printIndent();
        this.print("glGetShaderPrecisionFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetShaderPrecisionFormat(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetShaderSource(final int n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetShaderSource(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetShaderSource(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetShaderSource(final int n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetShaderSource(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetShaderSource(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetShaderSourceARB(final long n, final int n2, final int[] array, final int n3, final byte[] array2, final int n4) {
        this.printIndent();
        this.print("glGetShaderSourceARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetShaderSourceARB(n, n2, array, n3, array2, n4);
        this.println("");
    }
    
    @Override
    public void glGetShaderSourceARB(final long n, final int n2, final IntBuffer intBuffer, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetShaderSourceARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetShaderSourceARB(n, n2, intBuffer, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetShaderiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetShaderiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetShaderiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetShaderiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetShaderiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetShaderiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public short glGetStageIndexNV(final int n) {
        this.printIndent();
        this.print("glGetStageIndexNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final short glGetStageIndexNV = this.downstreamGL4bc.glGetStageIndexNV(n);
        this.println(" = " + glGetStageIndexNV);
        return glGetStageIndexNV;
    }
    
    @Override
    public String glGetString(final int n) {
        this.printIndent();
        this.print("glGetString(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final String glGetString = this.downstreamGL4bc.glGetString(n);
        this.println(" = " + glGetString);
        return glGetString;
    }
    
    @Override
    public String glGetStringi(final int n, final int n2) {
        this.printIndent();
        this.print("glGetStringi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final String glGetStringi = this.downstreamGL4bc.glGetStringi(n, n2);
        this.println(" = " + glGetStringi);
        return glGetStringi;
    }
    
    @Override
    public int glGetSubroutineIndex(final int n, final int n2, final String s) {
        this.printIndent();
        this.print("glGetSubroutineIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetSubroutineIndex = this.downstreamGL4bc.glGetSubroutineIndex(n, n2, s);
        this.println(" = " + glGetSubroutineIndex);
        return glGetSubroutineIndex;
    }
    
    @Override
    public int glGetSubroutineUniformLocation(final int n, final int n2, final String s) {
        this.printIndent();
        this.print("glGetSubroutineUniformLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetSubroutineUniformLocation = this.downstreamGL4bc.glGetSubroutineUniformLocation(n, n2, s);
        this.println(" = " + glGetSubroutineUniformLocation);
        return glGetSubroutineUniformLocation;
    }
    
    @Override
    public void glGetSynciv(final long n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glGetSynciv(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetSynciv(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glGetSynciv(final long n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glGetSynciv(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glGetSynciv(n, n2, n3, intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glGetTexEnvfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTexEnvfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTexEnvfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexEnvfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexEnvfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexEnvfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexEnviv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexEnviv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexEnviv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexEnviv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexEnviv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexEnviv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexGendv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetTexGendv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetTexGendv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexGendv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexGendv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexGendv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexGenfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexGenfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexGenfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexGenfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTexGenfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTexGenfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexGeniv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexGeniv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexGeniv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexGeniv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexGeniv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexGeniv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexImage(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glGetTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glGetTexImage(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glGetTexImage(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetTexImage(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetTexLevelParameterfv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTexLevelParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTexLevelParameterfv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexLevelParameterfv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetTexLevelParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexLevelParameterfv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTexLevelParameteriv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTexLevelParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexLevelParameteriv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTexLevelParameteriv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexLevelParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexLevelParameteriv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTexParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTexParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTexParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTexParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTexParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public long glGetTextureHandleARB(final int n) {
        this.printIndent();
        this.print("glGetTextureHandleARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final long glGetTextureHandleARB = this.downstreamGL4bc.glGetTextureHandleARB(n);
        this.println(" = " + glGetTextureHandleARB);
        return glGetTextureHandleARB;
    }
    
    @Override
    public void glGetTextureImage(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glGetTextureImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetTextureImage(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureImageEXT(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glGetTextureImageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetTextureImageEXT(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterfv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureLevelParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterfv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterfv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTextureLevelParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterfv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterfvEXT(final int n, final int n2, final int n3, final int n4, final float[] array, final int n5) {
        this.printIndent();
        this.print("glGetTextureLevelParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterfvEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterfvEXT(final int n, final int n2, final int n3, final int n4, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTextureLevelParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterfvEXT(n, n2, n3, n4, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameteriv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureLevelParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureLevelParameteriv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameteriv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureLevelParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureLevelParameteriv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterivEXT(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glGetTextureLevelParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterivEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glGetTextureLevelParameterivEXT(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureLevelParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureLevelParameterivEXT(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTextureParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterIivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterIivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTextureParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIuivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterIuivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterIuivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterIuivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetTextureParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTextureParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTextureParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTextureParameterivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTextureParameterivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTextureParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTextureParameterivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public long glGetTextureSamplerHandleARB(final int n, final int n2) {
        this.printIndent();
        this.print("glGetTextureSamplerHandleARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final long glGetTextureSamplerHandleARB = this.downstreamGL4bc.glGetTextureSamplerHandleARB(n, n2);
        this.println(" = " + glGetTextureSamplerHandleARB);
        return glGetTextureSamplerHandleARB;
    }
    
    @Override
    public void glGetTextureSubImage(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final Buffer buffer) {
        this.printIndent();
        this.print("glGetTextureSubImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetTextureSubImage(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, buffer);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbackVarying(final int n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetTransformFeedbackVarying(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetTransformFeedbackVarying(n, n2, n3, intBuffer, intBuffer2, intBuffer3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbackVarying(final int n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5, final int[] array3, final int n6, final byte[] array4, final int n7) {
        this.printIndent();
        this.print("glGetTransformFeedbackVarying(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTransformFeedbackVarying(n, n2, n3, array, n4, array2, n5, array3, n6, array4, n7);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbacki64_v(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glGetTransformFeedbacki64_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTransformFeedbacki64_v(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbacki64_v(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetTransformFeedbacki64_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetTransformFeedbacki64_v(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbacki_v(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTransformFeedbacki_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTransformFeedbacki_v(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbacki_v(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetTransformFeedbacki_v(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTransformFeedbacki_v(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbackiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetTransformFeedbackiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetTransformFeedbackiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetTransformFeedbackiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetTransformFeedbackiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetTransformFeedbackiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public int glGetUniformBlockIndex(final int n, final String s) {
        this.printIndent();
        this.print("glGetUniformBlockIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetUniformBlockIndex = this.downstreamGL4bc.glGetUniformBlockIndex(n, s);
        this.println(" = " + glGetUniformBlockIndex);
        return glGetUniformBlockIndex;
    }
    
    @Override
    public int glGetUniformBufferSizeEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glGetUniformBufferSizeEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glGetUniformBufferSizeEXT = this.downstreamGL4bc.glGetUniformBufferSizeEXT(n, n2);
        this.println(" = " + glGetUniformBufferSizeEXT);
        return glGetUniformBufferSizeEXT;
    }
    
    @Override
    public void glGetUniformIndices(final int n, final int n2, final String[] array, final int[] array2, final int n3) {
        this.printIndent();
        this.print("glGetUniformIndices(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformIndices(n, n2, array, array2, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformIndices(final int n, final int n2, final String[] array, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetUniformIndices(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetUniformIndices(n, n2, array, intBuffer);
        this.println("");
    }
    
    @Override
    public int glGetUniformLocation(final int n, final String s) {
        this.printIndent();
        this.print("glGetUniformLocation(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final int glGetUniformLocation = this.downstreamGL4bc.glGetUniformLocation(n, s);
        this.println(" = " + glGetUniformLocation);
        return glGetUniformLocation;
    }
    
    @Override
    public int glGetUniformLocationARB(final long n, final String s) {
        this.printIndent();
        this.print("glGetUniformLocationARB(<long> " + n + ", " + "<java.lang.String> " + s + ")");
        final int glGetUniformLocationARB = this.downstreamGL4bc.glGetUniformLocationARB(n, s);
        this.println(" = " + glGetUniformLocationARB);
        return glGetUniformLocationARB;
    }
    
    @Override
    public long glGetUniformOffsetEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glGetUniformOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final long glGetUniformOffsetEXT = this.downstreamGL4bc.glGetUniformOffsetEXT(n, n2);
        this.println(" = " + glGetUniformOffsetEXT);
        return glGetUniformOffsetEXT;
    }
    
    @Override
    public void glGetUniformSubroutineuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformSubroutineuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformSubroutineuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformSubroutineuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetUniformSubroutineuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetUniformSubroutineuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformdv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetUniformdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetUniformdv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformdv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformdv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetUniformfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetUniformfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformfvARB(final long n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformfvARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformfvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformfvARB(final long n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetUniformfvARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetUniformfvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformi64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformi64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformi64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformi64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetUniformi64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetUniformi64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformi64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformi64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformi64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformi64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetUniformi64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetUniformi64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetUniformiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformivARB(final long n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformivARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformivARB(final long n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetUniformivARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetUniformivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetUniformui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetUniformui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetUniformui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetUniformuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetUniformuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetUniformuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetUniformuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetUniformuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetUniformuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVariantBooleanvEXT(final int n, final int n2, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetVariantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetVariantBooleanvEXT(n, n2, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVariantBooleanvEXT(final int n, final int n2, final byte[] array, final int n3) {
        this.printIndent();
        this.print("glGetVariantBooleanvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVariantBooleanvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVariantFloatvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetVariantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVariantFloatvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVariantFloatvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetVariantFloatvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetVariantFloatvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVariantIntegervEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVariantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVariantIntegervEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVariantIntegervEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVariantIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVariantIntegervEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIndexed64iv(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glGetVertexArrayIndexed64iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexArrayIndexed64iv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIndexed64iv(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayIndexed64iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayIndexed64iv(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIndexediv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayIndexediv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayIndexediv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIndexediv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetVertexArrayIndexediv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexArrayIndexediv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIntegeri_vEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayIntegeri_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayIntegeri_vEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIntegeri_vEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetVertexArrayIntegeri_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexArrayIntegeri_vEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIntegervEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexArrayIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexArrayIntegervEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayIntegervEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayIntegervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayIntegervEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayPointeri_vEXT(final int n, final int n2, final int n3, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayPointeri_vEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayPointeri_vEXT(n, n2, n3, pointerBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayPointervEXT(final int n, final int n2, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayPointervEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayPointervEXT(n, n2, pointerBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexArrayiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexArrayiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexArrayiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexArrayiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexArrayiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribIivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribIivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIuivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribIuivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribIuivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribIuivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLdv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribLdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribLdv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLdv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribLdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribLdv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLi64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribLi64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribLi64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLi64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribLi64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribLi64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribLui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribLui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribLui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribLui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribLui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribLui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribLui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribLui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribLui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribdv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribdv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribdv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribdv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribdvARB(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribdvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribdvARB(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribdvARB(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribfvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribfvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribfvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribfvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVertexAttribivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVertexAttribivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVertexAttribivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVertexAttribivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVertexAttribivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamdvNV(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamdvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamdvNV(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamdvNV(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamdvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamdvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamfvNV(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamfvNV(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamfvNV(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamfvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureStreamivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVideoCaptureStreamivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVideoCaptureStreamivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetVideoCaptureivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetVideoCaptureivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetVideoCaptureivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetVideoCaptureivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetVideoCaptureivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetnColorTable(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnColorTable(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnColorTable(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnCompressedTexImage(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnCompressedTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnCompressedTexImage(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnConvolutionFilter(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnConvolutionFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnConvolutionFilter(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnHistogram(final int n, final boolean b, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnHistogram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnHistogram(n, b, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnMapdv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glGetnMapdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnMapdv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnMapdv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetnMapdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetnMapdv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnMapfv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetnMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetnMapfv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnMapfv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetnMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnMapfv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnMapiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetnMapiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnMapiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnMapiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetnMapiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetnMapiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnMinmax(final int n, final boolean b, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnMinmax(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnMinmax(n, b, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glGetnPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnPixelMapfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetnPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetnPixelMapfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetnPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetnPixelMapuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glGetnPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnPixelMapuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapusv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glGetnPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glGetnPixelMapusv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnPixelMapusv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glGetnPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnPixelMapusv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glGetnPolygonStipple(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glGetnPolygonStipple(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glGetnPolygonStipple(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnPolygonStipple(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glGetnPolygonStipple(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnPolygonStipple(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glGetnSeparableFilter(final int n, final int n2, final int n3, final int n4, final Buffer buffer, final int n5, final Buffer buffer2, final Buffer buffer3) {
        this.printIndent();
        this.print("glGetnSeparableFilter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer2 + ", " + "<java.nio.Buffer> " + buffer3 + ")");
        this.downstreamGL4bc.glGetnSeparableFilter(n, n2, n3, n4, buffer, n5, buffer2, buffer3);
        this.println("");
    }
    
    @Override
    public void glGetnTexImage(final int n, final int n2, final int n3, final int n4, final int n5, final Buffer buffer) {
        this.printIndent();
        this.print("glGetnTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glGetnTexImage(n, n2, n3, n4, n5, buffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformdv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glGetnUniformdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glGetnUniformdv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformdv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformdv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformdv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnUniformfv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformfv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnUniformfv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glGetnUniformfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glGetnUniformfv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformi64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformi64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformi64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnUniformi64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetnUniformi64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetnUniformi64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnUniformiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetnUniformiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetnUniformiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glGetnUniformui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glGetnUniformui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glGetnUniformuiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glGetnUniformuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glGetnUniformuiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glGetnUniformuiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glGetnUniformuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glGetnUniformuiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glHint(final int n, final int n2) {
        this.printIndent();
        this.print("glHint(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glHint(n, n2);
        this.println("");
    }
    
    @Override
    public void glHintPGI(final int n, final int n2) {
        this.printIndent();
        this.print("glHintPGI(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glHintPGI(n, n2);
        this.println("");
    }
    
    @Override
    public void glHistogram(final int n, final int n2, final int n3, final boolean b) {
        this.printIndent();
        this.print("glHistogram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glHistogram(n, n2, n3, b);
        this.println("");
    }
    
    @Override
    public long glImportSyncEXT(final int n, final long n2, final int n3) {
        this.printIndent();
        this.print("glImportSyncEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final long glImportSyncEXT = this.downstreamGL4bc.glImportSyncEXT(n, n2, n3);
        this.println(" = " + glImportSyncEXT);
        return glImportSyncEXT;
    }
    
    @Override
    public void glIndexFormatNV(final int n, final int n2) {
        this.printIndent();
        this.print("glIndexFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexFormatNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glIndexFuncEXT(final int n, final float n2) {
        this.printIndent();
        this.print("glIndexFuncEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glIndexFuncEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glIndexMask(final int n) {
        this.printIndent();
        this.print("glIndexMask(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexMask(n);
        this.println("");
    }
    
    @Override
    public void glIndexMaterialEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glIndexMaterialEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexMaterialEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glIndexPointer(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glIndexPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glIndexPointer(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glIndexd(final double n) {
        this.printIndent();
        this.print("glIndexd(<double> " + n + ")");
        this.downstreamGL4bc.glIndexd(n);
        this.println("");
    }
    
    @Override
    public void glIndexdv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glIndexdv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glIndexdv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glIndexdv(final double[] array, final int n) {
        this.printIndent();
        this.print("glIndexdv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexdv(array, n);
        this.println("");
    }
    
    @Override
    public void glIndexf(final float n) {
        this.printIndent();
        this.print("glIndexf(<float> " + n + ")");
        this.downstreamGL4bc.glIndexf(n);
        this.println("");
    }
    
    @Override
    public void glIndexfv(final float[] array, final int n) {
        this.printIndent();
        this.print("glIndexfv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexfv(array, n);
        this.println("");
    }
    
    @Override
    public void glIndexfv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glIndexfv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glIndexfv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glIndexi(final int n) {
        this.printIndent();
        this.print("glIndexi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexi(n);
        this.println("");
    }
    
    @Override
    public void glIndexiv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glIndexiv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glIndexiv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glIndexiv(final int[] array, final int n) {
        this.printIndent();
        this.print("glIndexiv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexiv(array, n);
        this.println("");
    }
    
    @Override
    public void glIndexs(final short n) {
        this.printIndent();
        this.print("glIndexs(<short> " + n + ")");
        this.downstreamGL4bc.glIndexs(n);
        this.println("");
    }
    
    @Override
    public void glIndexsv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glIndexsv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glIndexsv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glIndexsv(final short[] array, final int n) {
        this.printIndent();
        this.print("glIndexsv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexsv(array, n);
        this.println("");
    }
    
    @Override
    public void glIndexub(final byte b) {
        this.printIndent();
        this.print("glIndexub(<byte> " + b + ")");
        this.downstreamGL4bc.glIndexub(b);
        this.println("");
    }
    
    @Override
    public void glIndexubv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glIndexubv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glIndexubv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glIndexubv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glIndexubv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glIndexubv(array, n);
        this.println("");
    }
    
    @Override
    public void glInitNames() {
        this.printIndent();
        this.print("glInitNames()");
        this.downstreamGL4bc.glInitNames();
        this.println("");
    }
    
    @Override
    public void glInsertComponentEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glInsertComponentEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glInsertComponentEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glInterleavedArrays(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glInterleavedArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glInterleavedArrays(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glInterleavedArrays(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glInterleavedArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glInterleavedArrays(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glInvalidateBufferData(final int n) {
        this.printIndent();
        this.print("glInvalidateBufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateBufferData(n);
        this.println("");
    }
    
    @Override
    public void glInvalidateBufferSubData(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glInvalidateBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glInvalidateBufferSubData(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glInvalidateFramebuffer(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glInvalidateFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateFramebuffer(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glInvalidateFramebuffer(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glInvalidateFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glInvalidateFramebuffer(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glInvalidateNamedFramebufferData(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glInvalidateNamedFramebufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glInvalidateNamedFramebufferData(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glInvalidateNamedFramebufferData(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glInvalidateNamedFramebufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateNamedFramebufferData(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glInvalidateNamedFramebufferSubData(final int n, final int n2, final IntBuffer intBuffer, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glInvalidateNamedFramebufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateNamedFramebufferSubData(n, n2, intBuffer, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glInvalidateNamedFramebufferSubData(final int n, final int n2, final int[] array, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glInvalidateNamedFramebufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateNamedFramebufferSubData(n, n2, array, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glInvalidateSubFramebuffer(final int n, final int n2, final int[] array, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glInvalidateSubFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateSubFramebuffer(n, n2, array, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glInvalidateSubFramebuffer(final int n, final int n2, final IntBuffer intBuffer, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glInvalidateSubFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateSubFramebuffer(n, n2, intBuffer, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glInvalidateTexImage(final int n, final int n2) {
        this.printIndent();
        this.print("glInvalidateTexImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateTexImage(n, n2);
        this.println("");
    }
    
    @Override
    public void glInvalidateTexSubImage(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glInvalidateTexSubImage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glInvalidateTexSubImage(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public boolean glIsBuffer(final int n) {
        this.printIndent();
        this.print("glIsBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsBuffer = this.downstreamGL4bc.glIsBuffer(n);
        this.println(" = " + glIsBuffer);
        return glIsBuffer;
    }
    
    @Override
    public boolean glIsBufferResidentNV(final int n) {
        this.printIndent();
        this.print("glIsBufferResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsBufferResidentNV = this.downstreamGL4bc.glIsBufferResidentNV(n);
        this.println(" = " + glIsBufferResidentNV);
        return glIsBufferResidentNV;
    }
    
    @Override
    public boolean glIsCommandListNV(final int n) {
        this.printIndent();
        this.print("glIsCommandListNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsCommandListNV = this.downstreamGL4bc.glIsCommandListNV(n);
        this.println(" = " + glIsCommandListNV);
        return glIsCommandListNV;
    }
    
    @Override
    public boolean glIsEnabled(final int n) {
        this.printIndent();
        this.print("glIsEnabled(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsEnabled = this.downstreamGL4bc.glIsEnabled(n);
        this.println(" = " + glIsEnabled);
        return glIsEnabled;
    }
    
    @Override
    public boolean glIsEnabledIndexed(final int n, final int n2) {
        this.printIndent();
        this.print("glIsEnabledIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final boolean glIsEnabledIndexed = this.downstreamGL4bc.glIsEnabledIndexed(n, n2);
        this.println(" = " + glIsEnabledIndexed);
        return glIsEnabledIndexed;
    }
    
    @Override
    public boolean glIsEnabledi(final int n, final int n2) {
        this.printIndent();
        this.print("glIsEnabledi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final boolean glIsEnabledi = this.downstreamGL4bc.glIsEnabledi(n, n2);
        this.println(" = " + glIsEnabledi);
        return glIsEnabledi;
    }
    
    @Override
    public boolean glIsFramebuffer(final int n) {
        this.printIndent();
        this.print("glIsFramebuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsFramebuffer = this.downstreamGL4bc.glIsFramebuffer(n);
        this.println(" = " + glIsFramebuffer);
        return glIsFramebuffer;
    }
    
    @Override
    public boolean glIsImageHandleResidentARB(final long n) {
        this.printIndent();
        this.print("glIsImageHandleResidentARB(<long> " + n + ")");
        final boolean glIsImageHandleResidentARB = this.downstreamGL4bc.glIsImageHandleResidentARB(n);
        this.println(" = " + glIsImageHandleResidentARB);
        return glIsImageHandleResidentARB;
    }
    
    @Override
    public boolean glIsList(final int n) {
        this.printIndent();
        this.print("glIsList(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsList = this.downstreamGL4bc.glIsList(n);
        this.println(" = " + glIsList);
        return glIsList;
    }
    
    @Override
    public boolean glIsNameAMD(final int n, final int n2) {
        this.printIndent();
        this.print("glIsNameAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final boolean glIsNameAMD = this.downstreamGL4bc.glIsNameAMD(n, n2);
        this.println(" = " + glIsNameAMD);
        return glIsNameAMD;
    }
    
    @Override
    public boolean glIsNamedBufferResidentNV(final int n) {
        this.printIndent();
        this.print("glIsNamedBufferResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsNamedBufferResidentNV = this.downstreamGL4bc.glIsNamedBufferResidentNV(n);
        this.println(" = " + glIsNamedBufferResidentNV);
        return glIsNamedBufferResidentNV;
    }
    
    @Override
    public boolean glIsNamedStringARB(final int n, final String s) {
        this.printIndent();
        this.print("glIsNamedStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        final boolean glIsNamedStringARB = this.downstreamGL4bc.glIsNamedStringARB(n, s);
        this.println(" = " + glIsNamedStringARB);
        return glIsNamedStringARB;
    }
    
    @Override
    public boolean glIsOcclusionQueryNV(final int n) {
        this.printIndent();
        this.print("glIsOcclusionQueryNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsOcclusionQueryNV = this.downstreamGL4bc.glIsOcclusionQueryNV(n);
        this.println(" = " + glIsOcclusionQueryNV);
        return glIsOcclusionQueryNV;
    }
    
    @Override
    public boolean glIsProgram(final int n) {
        this.printIndent();
        this.print("glIsProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsProgram = this.downstreamGL4bc.glIsProgram(n);
        this.println(" = " + glIsProgram);
        return glIsProgram;
    }
    
    @Override
    public boolean glIsProgramARB(final int n) {
        this.printIndent();
        this.print("glIsProgramARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsProgramARB = this.downstreamGL4bc.glIsProgramARB(n);
        this.println(" = " + glIsProgramARB);
        return glIsProgramARB;
    }
    
    @Override
    public boolean glIsProgramPipeline(final int n) {
        this.printIndent();
        this.print("glIsProgramPipeline(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsProgramPipeline = this.downstreamGL4bc.glIsProgramPipeline(n);
        this.println(" = " + glIsProgramPipeline);
        return glIsProgramPipeline;
    }
    
    @Override
    public boolean glIsQuery(final int n) {
        this.printIndent();
        this.print("glIsQuery(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsQuery = this.downstreamGL4bc.glIsQuery(n);
        this.println(" = " + glIsQuery);
        return glIsQuery;
    }
    
    @Override
    public boolean glIsRenderbuffer(final int n) {
        this.printIndent();
        this.print("glIsRenderbuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsRenderbuffer = this.downstreamGL4bc.glIsRenderbuffer(n);
        this.println(" = " + glIsRenderbuffer);
        return glIsRenderbuffer;
    }
    
    @Override
    public boolean glIsSampler(final int n) {
        this.printIndent();
        this.print("glIsSampler(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsSampler = this.downstreamGL4bc.glIsSampler(n);
        this.println(" = " + glIsSampler);
        return glIsSampler;
    }
    
    @Override
    public boolean glIsShader(final int n) {
        this.printIndent();
        this.print("glIsShader(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsShader = this.downstreamGL4bc.glIsShader(n);
        this.println(" = " + glIsShader);
        return glIsShader;
    }
    
    @Override
    public boolean glIsStateNV(final int n) {
        this.printIndent();
        this.print("glIsStateNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsStateNV = this.downstreamGL4bc.glIsStateNV(n);
        this.println(" = " + glIsStateNV);
        return glIsStateNV;
    }
    
    @Override
    public boolean glIsSync(final long n) {
        this.printIndent();
        this.print("glIsSync(<long> " + n + ")");
        final boolean glIsSync = this.downstreamGL4bc.glIsSync(n);
        this.println(" = " + glIsSync);
        return glIsSync;
    }
    
    @Override
    public boolean glIsTexture(final int n) {
        this.printIndent();
        this.print("glIsTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsTexture = this.downstreamGL4bc.glIsTexture(n);
        this.println(" = " + glIsTexture);
        return glIsTexture;
    }
    
    @Override
    public boolean glIsTextureHandleResidentARB(final long n) {
        this.printIndent();
        this.print("glIsTextureHandleResidentARB(<long> " + n + ")");
        final boolean glIsTextureHandleResidentARB = this.downstreamGL4bc.glIsTextureHandleResidentARB(n);
        this.println(" = " + glIsTextureHandleResidentARB);
        return glIsTextureHandleResidentARB;
    }
    
    @Override
    public boolean glIsTransformFeedback(final int n) {
        this.printIndent();
        this.print("glIsTransformFeedback(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsTransformFeedback = this.downstreamGL4bc.glIsTransformFeedback(n);
        this.println(" = " + glIsTransformFeedback);
        return glIsTransformFeedback;
    }
    
    @Override
    public boolean glIsTransformFeedbackNV(final int n) {
        this.printIndent();
        this.print("glIsTransformFeedbackNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsTransformFeedbackNV = this.downstreamGL4bc.glIsTransformFeedbackNV(n);
        this.println(" = " + glIsTransformFeedbackNV);
        return glIsTransformFeedbackNV;
    }
    
    @Override
    public boolean glIsVariantEnabledEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glIsVariantEnabledEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final boolean glIsVariantEnabledEXT = this.downstreamGL4bc.glIsVariantEnabledEXT(n, n2);
        this.println(" = " + glIsVariantEnabledEXT);
        return glIsVariantEnabledEXT;
    }
    
    @Override
    public boolean glIsVertexArray(final int n) {
        this.printIndent();
        this.print("glIsVertexArray(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glIsVertexArray = this.downstreamGL4bc.glIsVertexArray(n);
        this.println(" = " + glIsVertexArray);
        return glIsVertexArray;
    }
    
    @Override
    public boolean glIsVertexAttribEnabledAPPLE(final int n, final int n2) {
        this.printIndent();
        this.print("glIsVertexAttribEnabledAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final boolean glIsVertexAttribEnabledAPPLE = this.downstreamGL4bc.glIsVertexAttribEnabledAPPLE(n, n2);
        this.println(" = " + glIsVertexAttribEnabledAPPLE);
        return glIsVertexAttribEnabledAPPLE;
    }
    
    @Override
    public void glLightModelf(final int n, final float n2) {
        this.printIndent();
        this.print("glLightModelf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glLightModelf(n, n2);
        this.println("");
    }
    
    @Override
    public void glLightModelfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glLightModelfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glLightModelfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glLightModelfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glLightModelfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glLightModelfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glLightModeli(final int n, final int n2) {
        this.printIndent();
        this.print("glLightModeli(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glLightModeli(n, n2);
        this.println("");
    }
    
    @Override
    public void glLightModeliv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glLightModeliv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glLightModeliv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glLightModeliv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glLightModeliv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glLightModeliv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glLightf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glLightf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glLightf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glLightfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glLightfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glLightfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glLightfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glLightfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glLightfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glLighti(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glLighti(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glLighti(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glLightiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glLightiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glLightiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glLightiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glLightiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glLightiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glLineStipple(final int n, final short n2) {
        this.printIndent();
        this.print("glLineStipple(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glLineStipple(n, n2);
        this.println("");
    }
    
    @Override
    public void glLineWidth(final float n) {
        this.printIndent();
        this.print("glLineWidth(<float> " + n + ")");
        this.downstreamGL4bc.glLineWidth(n);
        this.println("");
    }
    
    @Override
    public void glLinkProgram(final int n) {
        this.printIndent();
        this.print("glLinkProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLinkProgram(n);
        this.println("");
    }
    
    @Override
    public void glLinkProgramARB(final long n) {
        this.printIndent();
        this.print("glLinkProgramARB(<long> " + n + ")");
        this.downstreamGL4bc.glLinkProgramARB(n);
        this.println("");
    }
    
    @Override
    public void glListBase(final int n) {
        this.printIndent();
        this.print("glListBase(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glListBase(n);
        this.println("");
    }
    
    @Override
    public void glListDrawCommandsStatesClientNV(final int n, final int n2, final PointerBuffer pointerBuffer, final IntBuffer intBuffer, final IntBuffer intBuffer2, final IntBuffer intBuffer3, final int n3) {
        this.printIndent();
        this.print("glListDrawCommandsStatesClientNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<java.nio.IntBuffer> " + intBuffer3 + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glListDrawCommandsStatesClientNV(n, n2, pointerBuffer, intBuffer, intBuffer2, intBuffer3, n3);
        this.println("");
    }
    
    @Override
    public void glListDrawCommandsStatesClientNV(final int n, final int n2, final PointerBuffer pointerBuffer, final int[] array, final int n3, final int[] array2, final int n4, final int[] array3, final int n5, final int n6) {
        this.printIndent();
        this.print("glListDrawCommandsStatesClientNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glListDrawCommandsStatesClientNV(n, n2, pointerBuffer, array, n3, array2, n4, array3, n5, n6);
        this.println("");
    }
    
    @Override
    public void glLoadIdentity() {
        this.printIndent();
        this.print("glLoadIdentity()");
        this.downstreamGL4bc.glLoadIdentity();
        this.println("");
    }
    
    @Override
    public void glLoadMatrixd(final double[] array, final int n) {
        this.printIndent();
        this.print("glLoadMatrixd(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLoadMatrixd(array, n);
        this.println("");
    }
    
    @Override
    public void glLoadMatrixd(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glLoadMatrixd(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glLoadMatrixd(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glLoadMatrixf(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glLoadMatrixf(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glLoadMatrixf(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glLoadMatrixf(final float[] array, final int n) {
        this.printIndent();
        this.print("glLoadMatrixf(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLoadMatrixf(array, n);
        this.println("");
    }
    
    @Override
    public void glLoadName(final int n) {
        this.printIndent();
        this.print("glLoadName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLoadName(n);
        this.println("");
    }
    
    @Override
    public void glLoadTransposeMatrixd(final double[] array, final int n) {
        this.printIndent();
        this.print("glLoadTransposeMatrixd(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLoadTransposeMatrixd(array, n);
        this.println("");
    }
    
    @Override
    public void glLoadTransposeMatrixd(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glLoadTransposeMatrixd(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glLoadTransposeMatrixd(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glLoadTransposeMatrixf(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glLoadTransposeMatrixf(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glLoadTransposeMatrixf(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glLoadTransposeMatrixf(final float[] array, final int n) {
        this.printIndent();
        this.print("glLoadTransposeMatrixf(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLoadTransposeMatrixf(array, n);
        this.println("");
    }
    
    @Override
    public void glLockArraysEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glLockArraysEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glLockArraysEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glLogicOp(final int n) {
        this.printIndent();
        this.print("glLogicOp(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glLogicOp(n);
        this.println("");
    }
    
    @Override
    public void glMakeBufferNonResidentNV(final int n) {
        this.printIndent();
        this.print("glMakeBufferNonResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMakeBufferNonResidentNV(n);
        this.println("");
    }
    
    @Override
    public void glMakeBufferResidentNV(final int n, final int n2) {
        this.printIndent();
        this.print("glMakeBufferResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMakeBufferResidentNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glMakeImageHandleNonResidentARB(final long n) {
        this.printIndent();
        this.print("glMakeImageHandleNonResidentARB(<long> " + n + ")");
        this.downstreamGL4bc.glMakeImageHandleNonResidentARB(n);
        this.println("");
    }
    
    @Override
    public void glMakeImageHandleResidentARB(final long n, final int n2) {
        this.printIndent();
        this.print("glMakeImageHandleResidentARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMakeImageHandleResidentARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glMakeNamedBufferNonResidentNV(final int n) {
        this.printIndent();
        this.print("glMakeNamedBufferNonResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMakeNamedBufferNonResidentNV(n);
        this.println("");
    }
    
    @Override
    public void glMakeNamedBufferResidentNV(final int n, final int n2) {
        this.printIndent();
        this.print("glMakeNamedBufferResidentNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMakeNamedBufferResidentNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glMakeTextureHandleNonResidentARB(final long n) {
        this.printIndent();
        this.print("glMakeTextureHandleNonResidentARB(<long> " + n + ")");
        this.downstreamGL4bc.glMakeTextureHandleNonResidentARB(n);
        this.println("");
    }
    
    @Override
    public void glMakeTextureHandleResidentARB(final long n) {
        this.printIndent();
        this.print("glMakeTextureHandleResidentARB(<long> " + n + ")");
        this.downstreamGL4bc.glMakeTextureHandleResidentARB(n);
        this.println("");
    }
    
    @Override
    public void glMap1d(final int n, final double n2, final double n3, final int n4, final int n5, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMap1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMap1d(n, n2, n3, n4, n5, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMap1d(final int n, final double n2, final double n3, final int n4, final int n5, final double[] array, final int n6) {
        this.printIndent();
        this.print("glMap1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glMap1d(n, n2, n3, n4, n5, array, n6);
        this.println("");
    }
    
    @Override
    public void glMap1f(final int n, final float n2, final float n3, final int n4, final int n5, final float[] array, final int n6) {
        this.printIndent();
        this.print("glMap1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glMap1f(n, n2, n3, n4, n5, array, n6);
        this.println("");
    }
    
    @Override
    public void glMap1f(final int n, final float n2, final float n3, final int n4, final int n5, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMap1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMap1f(n, n2, n3, n4, n5, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMap2d(final int n, final double n2, final double n3, final int n4, final int n5, final double n6, final double n7, final int n8, final int n9, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMap2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<double> " + n6 + ", " + "<double> " + n7 + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMap2d(n, n2, n3, n4, n5, n6, n7, n8, n9, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMap2d(final int n, final double n2, final double n3, final int n4, final int n5, final double n6, final double n7, final int n8, final int n9, final double[] array, final int n10) {
        this.printIndent();
        this.print("glMap2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<double> " + n6 + ", " + "<double> " + n7 + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ")");
        this.downstreamGL4bc.glMap2d(n, n2, n3, n4, n5, n6, n7, n8, n9, array, n10);
        this.println("");
    }
    
    @Override
    public void glMap2f(final int n, final float n2, final float n3, final int n4, final int n5, final float n6, final float n7, final int n8, final int n9, final float[] array, final int n10) {
        this.printIndent();
        this.print("glMap2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<float> " + n6 + ", " + "<float> " + n7 + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ")");
        this.downstreamGL4bc.glMap2f(n, n2, n3, n4, n5, n6, n7, n8, n9, array, n10);
        this.println("");
    }
    
    @Override
    public void glMap2f(final int n, final float n2, final float n3, final int n4, final int n5, final float n6, final float n7, final int n8, final int n9, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMap2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<float> " + n6 + ", " + "<float> " + n7 + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMap2f(n, n2, n3, n4, n5, n6, n7, n8, n9, floatBuffer);
        this.println("");
    }
    
    @Override
    public ByteBuffer glMapBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glMapBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final ByteBuffer glMapBuffer = this.downstreamGL4bc.glMapBuffer(n, n2);
        this.println(" = " + glMapBuffer);
        return glMapBuffer;
    }
    
    @Override
    public ByteBuffer glMapBufferRange(final int n, final long n2, final long n3, final int n4) {
        this.printIndent();
        this.print("glMapBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final ByteBuffer glMapBufferRange = this.downstreamGL4bc.glMapBufferRange(n, n2, n3, n4);
        this.println(" = " + glMapBufferRange);
        return glMapBufferRange;
    }
    
    @Override
    public void glMapControlPointsNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final boolean b, final Buffer buffer) {
        this.printIndent();
        this.print("glMapControlPointsNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMapControlPointsNV(n, n2, n3, n4, n5, n6, n7, b, buffer);
        this.println("");
    }
    
    @Override
    public void glMapGrid1d(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glMapGrid1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glMapGrid1d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMapGrid1f(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glMapGrid1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glMapGrid1f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMapGrid2d(final int n, final double n2, final double n3, final int n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glMapGrid2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glMapGrid2d(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glMapGrid2f(final int n, final float n2, final float n3, final int n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glMapGrid2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glMapGrid2f(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public ByteBuffer glMapNamedBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glMapNamedBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final ByteBuffer glMapNamedBuffer = this.downstreamGL4bc.glMapNamedBuffer(n, n2);
        this.println(" = " + glMapNamedBuffer);
        return glMapNamedBuffer;
    }
    
    @Override
    public ByteBuffer glMapNamedBufferEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glMapNamedBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final ByteBuffer glMapNamedBufferEXT = this.downstreamGL4bc.glMapNamedBufferEXT(n, n2);
        this.println(" = " + glMapNamedBufferEXT);
        return glMapNamedBufferEXT;
    }
    
    @Override
    public ByteBuffer glMapNamedBufferRange(final int n, final long n2, final long n3, final int n4) {
        this.printIndent();
        this.print("glMapNamedBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final ByteBuffer glMapNamedBufferRange = this.downstreamGL4bc.glMapNamedBufferRange(n, n2, n3, n4);
        this.println(" = " + glMapNamedBufferRange);
        return glMapNamedBufferRange;
    }
    
    @Override
    public ByteBuffer glMapNamedBufferRangeEXT(final int n, final long n2, final long n3, final int n4) {
        this.printIndent();
        this.print("glMapNamedBufferRangeEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final ByteBuffer glMapNamedBufferRangeEXT = this.downstreamGL4bc.glMapNamedBufferRangeEXT(n, n2, n3, n4);
        this.println(" = " + glMapNamedBufferRangeEXT);
        return glMapNamedBufferRangeEXT;
    }
    
    @Override
    public void glMapParameterfvNV(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glMapParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMapParameterfvNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMapParameterfvNV(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMapParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMapParameterfvNV(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMapParameterivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMapParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMapParameterivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMapParameterivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMapParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMapParameterivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public ByteBuffer glMapTexture2DINTEL(final int n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glMapTexture2DINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        final ByteBuffer glMapTexture2DINTEL = this.downstreamGL4bc.glMapTexture2DINTEL(n, n2, n3, intBuffer, intBuffer2);
        this.println(" = " + glMapTexture2DINTEL);
        return glMapTexture2DINTEL;
    }
    
    @Override
    public ByteBuffer glMapTexture2DINTEL(final int n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glMapTexture2DINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        final ByteBuffer glMapTexture2DINTEL = this.downstreamGL4bc.glMapTexture2DINTEL(n, n2, n3, array, n4, array2, n5);
        this.println(" = " + glMapTexture2DINTEL);
        return glMapTexture2DINTEL;
    }
    
    @Override
    public void glMapVertexAttrib1dAPPLE(final int n, final int n2, final double n3, final double n4, final int n5, final int n6, final double[] array, final int n7) {
        this.printIndent();
        this.print("glMapVertexAttrib1dAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glMapVertexAttrib1dAPPLE(n, n2, n3, n4, n5, n6, array, n7);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib1dAPPLE(final int n, final int n2, final double n3, final double n4, final int n5, final int n6, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMapVertexAttrib1dAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMapVertexAttrib1dAPPLE(n, n2, n3, n4, n5, n6, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib1fAPPLE(final int n, final int n2, final float n3, final float n4, final int n5, final int n6, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMapVertexAttrib1fAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMapVertexAttrib1fAPPLE(n, n2, n3, n4, n5, n6, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib1fAPPLE(final int n, final int n2, final float n3, final float n4, final int n5, final int n6, final float[] array, final int n7) {
        this.printIndent();
        this.print("glMapVertexAttrib1fAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glMapVertexAttrib1fAPPLE(n, n2, n3, n4, n5, n6, array, n7);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib2dAPPLE(final int n, final int n2, final double n3, final double n4, final int n5, final int n6, final double n7, final double n8, final int n9, final int n10, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMapVertexAttrib2dAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<double> " + n7 + ", " + "<double> " + n8 + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMapVertexAttrib2dAPPLE(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib2dAPPLE(final int n, final int n2, final double n3, final double n4, final int n5, final int n6, final double n7, final double n8, final int n9, final int n10, final double[] array, final int n11) {
        this.printIndent();
        this.print("glMapVertexAttrib2dAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<double> " + n7 + ", " + "<double> " + n8 + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ")");
        this.downstreamGL4bc.glMapVertexAttrib2dAPPLE(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, array, n11);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib2fAPPLE(final int n, final int n2, final float n3, final float n4, final int n5, final int n6, final float n7, final float n8, final int n9, final int n10, final float[] array, final int n11) {
        this.printIndent();
        this.print("glMapVertexAttrib2fAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<float> " + n7 + ", " + "<float> " + n8 + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ")");
        this.downstreamGL4bc.glMapVertexAttrib2fAPPLE(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, array, n11);
        this.println("");
    }
    
    @Override
    public void glMapVertexAttrib2fAPPLE(final int n, final int n2, final float n3, final float n4, final int n5, final int n6, final float n7, final float n8, final int n9, final int n10, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMapVertexAttrib2fAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<float> " + n7 + ", " + "<float> " + n8 + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMapVertexAttrib2fAPPLE(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMaterialf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glMaterialf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glMaterialf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMaterialfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glMaterialfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMaterialfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMaterialfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMaterialfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMaterialfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMateriali(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMateriali(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMateriali(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMaterialiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMaterialiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMaterialiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMaterialiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMaterialiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMaterialiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMatrixFrustumEXT(final int n, final double n2, final double n3, final double n4, final double n5, final double n6, final double n7) {
        this.printIndent();
        this.print("glMatrixFrustumEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ", " + "<double> " + n7 + ")");
        this.downstreamGL4bc.glMatrixFrustumEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexPointerARB(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glMatrixIndexPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMatrixIndexPointerARB(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexPointerARB(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glMatrixIndexPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glMatrixIndexPointerARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexubvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glMatrixIndexubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glMatrixIndexubvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexubvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixIndexubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixIndexubvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexuivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixIndexuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixIndexuivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexuivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMatrixIndexuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMatrixIndexuivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexusvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMatrixIndexusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMatrixIndexusvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixIndexusvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixIndexusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixIndexusvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadIdentityEXT(final int n) {
        this.printIndent();
        this.print("glMatrixLoadIdentityEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixLoadIdentityEXT(n);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadTransposedEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixLoadTransposedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixLoadTransposedEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadTransposedEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMatrixLoadTransposedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMatrixLoadTransposedEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadTransposefEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixLoadTransposefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixLoadTransposefEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadTransposefEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMatrixLoadTransposefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMatrixLoadTransposefEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixLoaddEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMatrixLoaddEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMatrixLoaddEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixLoaddEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixLoaddEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixLoaddEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadfEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMatrixLoadfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMatrixLoadfEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixLoadfEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixLoadfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixLoadfEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixMode(final int n) {
        this.printIndent();
        this.print("glMatrixMode(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixMode(n);
        this.println("");
    }
    
    @Override
    public void glMatrixMultTransposedEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixMultTransposedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixMultTransposedEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixMultTransposedEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMatrixMultTransposedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMatrixMultTransposedEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixMultTransposefEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixMultTransposefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixMultTransposefEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixMultTransposefEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMatrixMultTransposefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMatrixMultTransposefEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixMultdEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMatrixMultdEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMatrixMultdEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixMultdEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixMultdEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixMultdEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixMultfEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMatrixMultfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMatrixMultfEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMatrixMultfEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMatrixMultfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixMultfEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMatrixOrthoEXT(final int n, final double n2, final double n3, final double n4, final double n5, final double n6, final double n7) {
        this.printIndent();
        this.print("glMatrixOrthoEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ", " + "<double> " + n7 + ")");
        this.downstreamGL4bc.glMatrixOrthoEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glMatrixPopEXT(final int n) {
        this.printIndent();
        this.print("glMatrixPopEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixPopEXT(n);
        this.println("");
    }
    
    @Override
    public void glMatrixPushEXT(final int n) {
        this.printIndent();
        this.print("glMatrixPushEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMatrixPushEXT(n);
        this.println("");
    }
    
    @Override
    public void glMatrixRotatedEXT(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glMatrixRotatedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glMatrixRotatedEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMatrixRotatefEXT(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glMatrixRotatefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glMatrixRotatefEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMatrixScaledEXT(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glMatrixScaledEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glMatrixScaledEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMatrixScalefEXT(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glMatrixScalefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMatrixScalefEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMatrixTranslatedEXT(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glMatrixTranslatedEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glMatrixTranslatedEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMatrixTranslatefEXT(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glMatrixTranslatefEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMatrixTranslatefEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMaxShaderCompilerThreadsARB(final int n) {
        this.printIndent();
        this.print("glMaxShaderCompilerThreadsARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMaxShaderCompilerThreadsARB(n);
        this.println("");
    }
    
    @Override
    public void glMemoryBarrier(final int n) {
        this.printIndent();
        this.print("glMemoryBarrier(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMemoryBarrier(n);
        this.println("");
    }
    
    @Override
    public void glMemoryBarrierByRegion(final int n) {
        this.printIndent();
        this.print("glMemoryBarrierByRegion(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMemoryBarrierByRegion(n);
        this.println("");
    }
    
    @Override
    public void glMinSampleShading(final float n) {
        this.printIndent();
        this.print("glMinSampleShading(<float> " + n + ")");
        this.downstreamGL4bc.glMinSampleShading(n);
        this.println("");
    }
    
    @Override
    public void glMinmax(final int n, final int n2, final boolean b) {
        this.printIndent();
        this.print("glMinmax(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glMinmax(n, n2, b);
        this.println("");
    }
    
    @Override
    public void glMultMatrixd(final double[] array, final int n) {
        this.printIndent();
        this.print("glMultMatrixd(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMultMatrixd(array, n);
        this.println("");
    }
    
    @Override
    public void glMultMatrixd(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultMatrixd(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultMatrixd(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultMatrixf(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultMatrixf(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultMatrixf(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultMatrixf(final float[] array, final int n) {
        this.printIndent();
        this.print("glMultMatrixf(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMultMatrixf(array, n);
        this.println("");
    }
    
    @Override
    public void glMultTransposeMatrixd(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultTransposeMatrixd(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultTransposeMatrixd(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultTransposeMatrixd(final double[] array, final int n) {
        this.printIndent();
        this.print("glMultTransposeMatrixd(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMultTransposeMatrixd(array, n);
        this.println("");
    }
    
    @Override
    public void glMultTransposeMatrixf(final float[] array, final int n) {
        this.printIndent();
        this.print("glMultTransposeMatrixf(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glMultTransposeMatrixf(array, n);
        this.println("");
    }
    
    @Override
    public void glMultTransposeMatrixf(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultTransposeMatrixf(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultTransposeMatrixf(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArrays(final int n, final int[] array, final int n2, final int[] array2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiDrawArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArrays(n, array, n2, array2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArrays(final int n, final IntBuffer intBuffer, final IntBuffer intBuffer2, final int n2) {
        this.printIndent();
        this.print("glMultiDrawArrays(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArrays(n, intBuffer, intBuffer2, n2);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirect(final int n, final Buffer buffer, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirect(n, buffer, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirect(final int n, final long n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirect(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirectAMD(final int n, final Buffer buffer, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirectAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirectAMD(n, buffer, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirectBindlessCountNV(final int n, final Buffer buffer, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirectBindlessCountNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirectBindlessCountNV(n, buffer, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirectBindlessNV(final int n, final Buffer buffer, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirectBindlessNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirectBindlessNV(n, buffer, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiDrawArraysIndirectCountARB(final int n, final long n2, final long n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glMultiDrawArraysIndirectCountARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawArraysIndirectCountARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElements(final int n, final IntBuffer intBuffer, final int n2, final PointerBuffer pointerBuffer, final int n3) {
        this.printIndent();
        this.print("glMultiDrawElements(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElements(n, intBuffer, n2, pointerBuffer, n3);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsBaseVertex(final int n, final IntBuffer intBuffer, final int n2, final PointerBuffer pointerBuffer, final int n3, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glMultiDrawElementsBaseVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glMultiDrawElementsBaseVertex(n, intBuffer, n2, pointerBuffer, n3, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsIndirect(final int n, final int n2, final Buffer buffer, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiDrawElementsIndirect(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElementsIndirect(n, n2, buffer, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsIndirectAMD(final int n, final int n2, final Buffer buffer, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiDrawElementsIndirectAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElementsIndirectAMD(n, n2, buffer, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsIndirectBindlessCountNV(final int n, final int n2, final Buffer buffer, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glMultiDrawElementsIndirectBindlessCountNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElementsIndirectBindlessCountNV(n, n2, buffer, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsIndirectBindlessNV(final int n, final int n2, final Buffer buffer, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glMultiDrawElementsIndirectBindlessNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElementsIndirectBindlessNV(n, n2, buffer, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiDrawElementsIndirectCountARB(final int n, final int n2, final long n3, final long n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glMultiDrawElementsIndirectCountARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiDrawElementsIndirectCountARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glMultiTexBufferEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiTexBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexBufferEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1bOES(final int n, final byte b) {
        this.printIndent();
        this.print("glMultiTexCoord1bOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ")");
        this.downstreamGL4bc.glMultiTexCoord1bOES(n, b);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1bvOES(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1bvOES(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1bvOES(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1bvOES(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1d(final int n, final double n2) {
        this.printIndent();
        this.print("glMultiTexCoord1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glMultiTexCoord1d(n, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1f(final int n, final float n2) {
        this.printIndent();
        this.print("glMultiTexCoord1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glMultiTexCoord1f(n, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1h(final int n, final short n2) {
        this.printIndent();
        this.print("glMultiTexCoord1h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glMultiTexCoord1h(n, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1i(final int n, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1i(n, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1s(final int n, final short n2) {
        this.printIndent();
        this.print("glMultiTexCoord1s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glMultiTexCoord1s(n, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord1sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord1sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord1sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord1sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord1sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2bOES(final int n, final byte b, final byte b2) {
        this.printIndent();
        this.print("glMultiTexCoord2bOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ", " + "<byte> " + b2 + ")");
        this.downstreamGL4bc.glMultiTexCoord2bOES(n, b, b2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2bvOES(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2bvOES(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2bvOES(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2bvOES(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2d(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glMultiTexCoord2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glMultiTexCoord2d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2f(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glMultiTexCoord2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glMultiTexCoord2f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2h(final int n, final short n2, final short n3) {
        this.printIndent();
        this.print("glMultiTexCoord2h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glMultiTexCoord2h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoord2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2s(final int n, final short n2, final short n3) {
        this.printIndent();
        this.print("glMultiTexCoord2s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glMultiTexCoord2s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord2sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord2sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord2sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord2sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord2sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3bOES(final int n, final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glMultiTexCoord3bOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glMultiTexCoord3bOES(n, b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3bvOES(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3bvOES(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3bvOES(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3bvOES(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3d(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glMultiTexCoord3d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexCoord3d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3f(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glMultiTexCoord3f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexCoord3f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3h(final int n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glMultiTexCoord3h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexCoord3h(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiTexCoord3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3s(final int n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glMultiTexCoord3s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexCoord3s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord3sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord3sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord3sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord3sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord3sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4bOES(final int n, final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glMultiTexCoord4bOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glMultiTexCoord4bOES(n, b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4bvOES(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4bvOES(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4bvOES(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4bvOES(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4bvOES(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4d(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glMultiTexCoord4d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glMultiTexCoord4d(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4f(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glMultiTexCoord4f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glMultiTexCoord4f(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4h(final int n, final short n2, final short n3, final short n4, final short n5) {
        this.printIndent();
        this.print("glMultiTexCoord4h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ", " + "<short> " + n5 + ")");
        this.downstreamGL4bc.glMultiTexCoord4h(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4i(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glMultiTexCoord4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4i(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4s(final int n, final short n2, final short n3, final short n4, final short n5) {
        this.printIndent();
        this.print("glMultiTexCoord4s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ", " + "<short> " + n5 + ")");
        this.downstreamGL4bc.glMultiTexCoord4s(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glMultiTexCoord4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoord4sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoord4sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glMultiTexCoord4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoord4sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP1ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP1ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP1uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoordP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoordP1uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP1uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP1uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP2ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP2ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP2uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoordP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoordP2uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP2uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP2uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP3ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP3ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP3uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP3uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP3uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoordP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoordP3uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP4ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP4ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP4uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glMultiTexCoordP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexCoordP4uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordP4uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexCoordP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexCoordP4uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexCoordPointerEXT(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexCoordPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexCoordPointerEXT(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnvfEXT(final int n, final int n2, final int n3, final float n4) {
        this.printIndent();
        this.print("glMultiTexEnvfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexEnvfEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnvfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexEnvfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexEnvfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnvfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexEnvfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexEnvfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnviEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiTexEnviEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexEnviEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnvivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexEnvivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexEnvivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexEnvivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexEnvivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexEnvivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexGendEXT(final int n, final int n2, final int n3, final double n4) {
        this.printIndent();
        this.print("glMultiTexGendEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexGendEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexGendvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexGendvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexGendvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexGendvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glMultiTexGendvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glMultiTexGendvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexGenfEXT(final int n, final int n2, final int n3, final float n4) {
        this.printIndent();
        this.print("glMultiTexGenfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexGenfEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexGenfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexGenfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexGenfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexGenfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexGenfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexGenfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexGeniEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiTexGeniEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexGeniEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexGenivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexGenivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexGenivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexGenivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexGenivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexGenivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterIivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexParameterIivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterIivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexParameterIivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterIuivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexParameterIuivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterIuivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexParameterIuivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterfEXT(final int n, final int n2, final int n3, final float n4) {
        this.printIndent();
        this.print("glMultiTexParameterfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glMultiTexParameterfEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexParameterfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glMultiTexParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glMultiTexParameterfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameteriEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glMultiTexParameteriEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexParameteriEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glMultiTexParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexParameterivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glMultiTexParameterivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glMultiTexParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glMultiTexParameterivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexRenderbufferEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glMultiTexRenderbufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glMultiTexRenderbufferEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glMultiTexSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexSubImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glMultiTexSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final Buffer buffer) {
        this.printIndent();
        this.print("glMultiTexSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glMultiTexSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, buffer);
        this.println("");
    }
    
    @Override
    public void glNamedBufferData(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glNamedBufferData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedBufferData(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glNamedBufferDataEXT(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glNamedBufferDataEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedBufferDataEXT(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glNamedBufferPageCommitmentARB(final int n, final long n2, final long n3, final boolean b) {
        this.printIndent();
        this.print("glNamedBufferPageCommitmentARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glNamedBufferPageCommitmentARB(n, n2, n3, b);
        this.println("");
    }
    
    @Override
    public void glNamedBufferPageCommitmentEXT(final int n, final long n2, final long n3, final boolean b) {
        this.printIndent();
        this.print("glNamedBufferPageCommitmentEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glNamedBufferPageCommitmentEXT(n, n2, n3, b);
        this.println("");
    }
    
    @Override
    public void glNamedBufferStorage(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glNamedBufferStorage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedBufferStorage(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glNamedBufferStorageEXT(final int n, final long n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glNamedBufferStorageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedBufferStorageEXT(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glNamedBufferSubData(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glNamedBufferSubData(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glNamedBufferSubData(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glNamedBufferSubDataEXT(final int n, final long n2, final long n3, final Buffer buffer) {
        this.printIndent();
        this.print("glNamedBufferSubDataEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glNamedBufferSubDataEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glNamedCopyBufferSubDataEXT(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glNamedCopyBufferSubDataEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glNamedCopyBufferSubDataEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferDrawBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glNamedFramebufferDrawBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferDrawBuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferDrawBuffers(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNamedFramebufferDrawBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNamedFramebufferDrawBuffers(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferDrawBuffers(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glNamedFramebufferDrawBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferDrawBuffers(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glNamedFramebufferParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferReadBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glNamedFramebufferReadBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferReadBuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferRenderbuffer(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferRenderbuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferRenderbuffer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferRenderbufferEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferRenderbufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferRenderbufferEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferSampleLocationsfvARB(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferSampleLocationsfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferSampleLocationsfvARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferSampleLocationsfvARB(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glNamedFramebufferSampleLocationsfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glNamedFramebufferSampleLocationsfvARB(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferSampleLocationsfvNV(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferSampleLocationsfvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferSampleLocationsfvNV(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glNamedFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glNamedFramebufferSampleLocationsfvNV(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTexture(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferTexture(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTexture(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTexture1DEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedFramebufferTexture1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTexture1DEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTexture2DEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedFramebufferTexture2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTexture2DEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTexture3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glNamedFramebufferTexture3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTexture3DEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTextureEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedFramebufferTextureEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTextureEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTextureFaceEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedFramebufferTextureFaceEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTextureFaceEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTextureLayer(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedFramebufferTextureLayer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTextureLayer(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedFramebufferTextureLayerEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedFramebufferTextureLayerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedFramebufferTextureLayerEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4dEXT(final int n, final int n2, final int n3, final double n4, final double n5, final double n6, final double n7) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4dEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ", " + "<double> " + n7 + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4dEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4dvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4dvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4dvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4dvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4fEXT(final int n, final int n2, final int n3, final float n4, final float n5, final float n6, final float n7) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4fEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<float> " + n7 + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4fEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4fvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4fvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameter4fvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParameter4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameter4fvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4iEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4iEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4iEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4ivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4ivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4ivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4ivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4uiEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4uiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4uiEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4uivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4uivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameterI4uivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glNamedProgramLocalParameterI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameterI4uivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameters4fvEXT(final int n, final int n2, final int n3, final int n4, final float[] array, final int n5) {
        this.printIndent();
        this.print("glNamedProgramLocalParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameters4fvEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParameters4fvEXT(final int n, final int n2, final int n3, final int n4, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParameters4fvEXT(n, n2, n3, n4, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParametersI4ivEXT(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glNamedProgramLocalParametersI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParametersI4ivEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParametersI4ivEXT(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParametersI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParametersI4ivEXT(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParametersI4uivEXT(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glNamedProgramLocalParametersI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedProgramLocalParametersI4uivEXT(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glNamedProgramLocalParametersI4uivEXT(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNamedProgramLocalParametersI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNamedProgramLocalParametersI4uivEXT(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNamedProgramStringEXT(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glNamedProgramStringEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glNamedProgramStringEXT(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glNamedRenderbufferStorage(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedRenderbufferStorage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedRenderbufferStorage(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedRenderbufferStorageEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glNamedRenderbufferStorageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedRenderbufferStorageEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glNamedRenderbufferStorageMultisample(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedRenderbufferStorageMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedRenderbufferStorageMultisample(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedRenderbufferStorageMultisampleCoverageEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glNamedRenderbufferStorageMultisampleCoverageEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedRenderbufferStorageMultisampleCoverageEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glNamedRenderbufferStorageMultisampleEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glNamedRenderbufferStorageMultisampleEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glNamedRenderbufferStorageMultisampleEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glNamedStringARB(final int n, final int n2, final String s, final int n3, final String s2) {
        this.printIndent();
        this.print("glNamedStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.lang.String> " + s + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.lang.String> " + s2 + ")");
        this.downstreamGL4bc.glNamedStringARB(n, n2, s, n3, s2);
        this.println("");
    }
    
    @Override
    public void glNewList(final int n, final int n2) {
        this.printIndent();
        this.print("glNewList(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNewList(n, n2);
        this.println("");
    }
    
    @Override
    public void glNormal3b(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glNormal3b(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glNormal3b(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glNormal3bv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glNormal3bv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glNormal3bv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glNormal3bv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glNormal3bv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3bv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glNormal3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glNormal3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormal3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glNormal3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glNormal3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glNormal3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glNormal3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glNormal3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glNormal3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormal3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glNormal3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glNormal3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glNormal3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glNormal3h(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glNormal3h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glNormal3h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormal3hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glNormal3hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glNormal3hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glNormal3hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glNormal3hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3hv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glNormal3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormal3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNormal3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNormal3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glNormal3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glNormal3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glNormal3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glNormal3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormal3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glNormal3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glNormal3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glNormal3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glNormal3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glNormal3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glNormalFormatNV(final int n, final int n2) {
        this.printIndent();
        this.print("glNormalFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNormalFormatNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glNormalP3ui(final int n, final int n2) {
        this.printIndent();
        this.print("glNormalP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNormalP3ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glNormalP3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glNormalP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glNormalP3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glNormalP3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glNormalP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glNormalP3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glNormalPointer(final GLArrayData glArrayData) {
        this.printIndent();
        this.print("glNormalPointer(<com.jogamp.opengl.GLArrayData> " + glArrayData + ")");
        this.downstreamGL4bc.glNormalPointer(glArrayData);
        this.println("");
    }
    
    @Override
    public void glNormalPointer(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glNormalPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glNormalPointer(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glNormalPointer(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glNormalPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glNormalPointer(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glObjectLabel(final int n, final int n2, final int n3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glObjectLabel(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glObjectLabel(n, n2, n3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glObjectLabel(final int n, final int n2, final int n3, final byte[] array, final int n4) {
        this.printIndent();
        this.print("glObjectLabel(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glObjectLabel(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glObjectPtrLabel(final Buffer buffer, final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glObjectPtrLabel(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glObjectPtrLabel(buffer, n, array, n2);
        this.println("");
    }
    
    @Override
    public void glObjectPtrLabel(final Buffer buffer, final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glObjectPtrLabel(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glObjectPtrLabel(buffer, n, byteBuffer);
        this.println("");
    }
    
    @Override
    public int glObjectPurgeableAPPLE(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glObjectPurgeableAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glObjectPurgeableAPPLE = this.downstreamGL4bc.glObjectPurgeableAPPLE(n, n2, n3);
        this.println(" = " + glObjectPurgeableAPPLE);
        return glObjectPurgeableAPPLE;
    }
    
    @Override
    public int glObjectUnpurgeableAPPLE(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glObjectUnpurgeableAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glObjectUnpurgeableAPPLE = this.downstreamGL4bc.glObjectUnpurgeableAPPLE(n, n2, n3);
        this.println(" = " + glObjectUnpurgeableAPPLE);
        return glObjectUnpurgeableAPPLE;
    }
    
    @Override
    public void glOrtho(final double n, final double n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glOrtho(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glOrtho(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glOrthof(final float n, final float n2, final float n3, final float n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glOrthof(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glOrthof(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glPNTrianglesfATI(final int n, final float n2) {
        this.printIndent();
        this.print("glPNTrianglesfATI(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPNTrianglesfATI(n, n2);
        this.println("");
    }
    
    @Override
    public void glPNTrianglesiATI(final int n, final int n2) {
        this.printIndent();
        this.print("glPNTrianglesiATI(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPNTrianglesiATI(n, n2);
        this.println("");
    }
    
    @Override
    public void glPassThrough(final float n) {
        this.printIndent();
        this.print("glPassThrough(<float> " + n + ")");
        this.downstreamGL4bc.glPassThrough(n);
        this.println("");
    }
    
    @Override
    public void glPatchParameterfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glPatchParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPatchParameterfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glPatchParameterfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glPatchParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glPatchParameterfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glPatchParameteri(final int n, final int n2) {
        this.printIndent();
        this.print("glPatchParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPatchParameteri(n, n2);
        this.println("");
    }
    
    @Override
    public void glPauseTransformFeedback() {
        this.printIndent();
        this.print("glPauseTransformFeedback()");
        this.downstreamGL4bc.glPauseTransformFeedback();
        this.println("");
    }
    
    @Override
    public void glPauseTransformFeedbackNV() {
        this.printIndent();
        this.print("glPauseTransformFeedbackNV()");
        this.downstreamGL4bc.glPauseTransformFeedbackNV();
        this.println("");
    }
    
    @Override
    public void glPixelDataRangeNV(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glPixelDataRangeNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glPixelDataRangeNV(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glPixelMapfv(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glPixelMapfv(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPixelMapfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glPixelMapfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glPixelMapfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glPixelMapfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelMapfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glPixelMapuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glPixelMapuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glPixelMapuiv(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glPixelMapuiv(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPixelMapuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glPixelMapuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelMapuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glPixelMapusv(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glPixelMapusv(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPixelMapusv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glPixelMapusv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glPixelMapusv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glPixelMapusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelMapusv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glPixelStoref(final int n, final float n2) {
        this.printIndent();
        this.print("glPixelStoref(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPixelStoref(n, n2);
        this.println("");
    }
    
    @Override
    public void glPixelStorei(final int n, final int n2) {
        this.printIndent();
        this.print("glPixelStorei(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelStorei(n, n2);
        this.println("");
    }
    
    @Override
    public void glPixelTransferf(final int n, final float n2) {
        this.printIndent();
        this.print("glPixelTransferf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPixelTransferf(n, n2);
        this.println("");
    }
    
    @Override
    public void glPixelTransferi(final int n, final int n2) {
        this.printIndent();
        this.print("glPixelTransferi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelTransferi(n, n2);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameterfEXT(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glPixelTransformParameterfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glPixelTransformParameterfEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameterfvEXT(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glPixelTransformParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelTransformParameterfvEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameterfvEXT(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glPixelTransformParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glPixelTransformParameterfvEXT(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameteriEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glPixelTransformParameteriEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelTransformParameteriEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameterivEXT(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glPixelTransformParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPixelTransformParameterivEXT(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glPixelTransformParameterivEXT(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glPixelTransformParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glPixelTransformParameterivEXT(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glPixelZoom(final float n, final float n2) {
        this.printIndent();
        this.print("glPixelZoom(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPixelZoom(n, n2);
        this.println("");
    }
    
    @Override
    public void glPointParameterf(final int n, final float n2) {
        this.printIndent();
        this.print("glPointParameterf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPointParameterf(n, n2);
        this.println("");
    }
    
    @Override
    public void glPointParameterfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glPointParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPointParameterfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glPointParameterfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glPointParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glPointParameterfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glPointParameteri(final int n, final int n2) {
        this.printIndent();
        this.print("glPointParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPointParameteri(n, n2);
        this.println("");
    }
    
    @Override
    public void glPointParameteriv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glPointParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glPointParameteriv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glPointParameteriv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glPointParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPointParameteriv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glPointSize(final float n) {
        this.printIndent();
        this.print("glPointSize(<float> " + n + ")");
        this.downstreamGL4bc.glPointSize(n);
        this.println("");
    }
    
    @Override
    public void glPolygonMode(final int n, final int n2) {
        this.printIndent();
        this.print("glPolygonMode(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glPolygonMode(n, n2);
        this.println("");
    }
    
    @Override
    public void glPolygonOffset(final float n, final float n2) {
        this.printIndent();
        this.print("glPolygonOffset(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glPolygonOffset(n, n2);
        this.println("");
    }
    
    @Override
    public void glPolygonOffsetClampEXT(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glPolygonOffsetClampEXT(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glPolygonOffsetClampEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glPolygonStipple(final byte[] array, final int n) {
        this.printIndent();
        this.print("glPolygonStipple(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPolygonStipple(array, n);
        this.println("");
    }
    
    @Override
    public void glPolygonStipple(final long n) {
        this.printIndent();
        this.print("glPolygonStipple(<long> " + n + ")");
        this.downstreamGL4bc.glPolygonStipple(n);
        this.println("");
    }
    
    @Override
    public void glPolygonStipple(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glPolygonStipple(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glPolygonStipple(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glPopAttrib() {
        this.printIndent();
        this.print("glPopAttrib()");
        this.downstreamGL4bc.glPopAttrib();
        this.println("");
    }
    
    @Override
    public void glPopClientAttrib() {
        this.printIndent();
        this.print("glPopClientAttrib()");
        this.downstreamGL4bc.glPopClientAttrib();
        this.println("");
    }
    
    @Override
    public void glPopDebugGroup() {
        this.printIndent();
        this.print("glPopDebugGroup()");
        this.downstreamGL4bc.glPopDebugGroup();
        this.println("");
    }
    
    @Override
    public void glPopMatrix() {
        this.printIndent();
        this.print("glPopMatrix()");
        this.downstreamGL4bc.glPopMatrix();
        this.println("");
    }
    
    @Override
    public void glPopName() {
        this.printIndent();
        this.print("glPopName()");
        this.downstreamGL4bc.glPopName();
        this.println("");
    }
    
    @Override
    public void glPrimitiveBoundingBox(final float n, final float n2, final float n3, final float n4, final float n5, final float n6, final float n7, final float n8) {
        this.printIndent();
        this.print("glPrimitiveBoundingBox(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ", " + "<float> " + n7 + ", " + "<float> " + n8 + ")");
        this.downstreamGL4bc.glPrimitiveBoundingBox(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glPrimitiveRestartIndex(final int n) {
        this.printIndent();
        this.print("glPrimitiveRestartIndex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPrimitiveRestartIndex(n);
        this.println("");
    }
    
    @Override
    public void glPrimitiveRestartIndexNV(final int n) {
        this.printIndent();
        this.print("glPrimitiveRestartIndexNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPrimitiveRestartIndexNV(n);
        this.println("");
    }
    
    @Override
    public void glPrimitiveRestartNV() {
        this.printIndent();
        this.print("glPrimitiveRestartNV()");
        this.downstreamGL4bc.glPrimitiveRestartNV();
        this.println("");
    }
    
    @Override
    public void glPrioritizeTextures(final int n, final int[] array, final int n2, final float[] array2, final int n3) {
        this.printIndent();
        this.print("glPrioritizeTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glPrioritizeTextures(n, array, n2, array2, n3);
        this.println("");
    }
    
    @Override
    public void glPrioritizeTextures(final int n, final IntBuffer intBuffer, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glPrioritizeTextures(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glPrioritizeTextures(n, intBuffer, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramBinary(final int n, final int n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glProgramBinary(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramBinary(n, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersIivNV(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramBufferParametersIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramBufferParametersIivNV(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersIivNV(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glProgramBufferParametersIivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramBufferParametersIivNV(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersIuivNV(final int n, final int n2, final int n3, final int n4, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramBufferParametersIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramBufferParametersIuivNV(n, n2, n3, n4, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersIuivNV(final int n, final int n2, final int n3, final int n4, final int[] array, final int n5) {
        this.printIndent();
        this.print("glProgramBufferParametersIuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramBufferParametersIuivNV(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersfvNV(final int n, final int n2, final int n3, final int n4, final float[] array, final int n5) {
        this.printIndent();
        this.print("glProgramBufferParametersfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramBufferParametersfvNV(n, n2, n3, n4, array, n5);
        this.println("");
    }
    
    @Override
    public void glProgramBufferParametersfvNV(final int n, final int n2, final int n3, final int n4, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramBufferParametersfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramBufferParametersfvNV(n, n2, n3, n4, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4dARB(final int n, final int n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glProgramEnvParameter4dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glProgramEnvParameter4dARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4dvARB(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramEnvParameter4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParameter4dvARB(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4dvARB(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glProgramEnvParameter4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameter4dvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4fARB(final int n, final int n2, final float n3, final float n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glProgramEnvParameter4fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glProgramEnvParameter4fARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glProgramEnvParameter4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameter4fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameter4fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramEnvParameter4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParameter4fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4iNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramEnvParameterI4iNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4iNV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4ivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glProgramEnvParameterI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4ivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4ivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramEnvParameterI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4ivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4uiNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramEnvParameterI4uiNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4uiNV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4uivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glProgramEnvParameterI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4uivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameterI4uivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramEnvParameterI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParameterI4uivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameters4fvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramEnvParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParameters4fvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParameters4fvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramEnvParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParameters4fvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParametersI4ivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramEnvParametersI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParametersI4ivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParametersI4ivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramEnvParametersI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParametersI4ivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParametersI4uivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramEnvParametersI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramEnvParametersI4uivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramEnvParametersI4uivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramEnvParametersI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramEnvParametersI4uivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4dARB(final int n, final int n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glProgramLocalParameter4dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glProgramLocalParameter4dARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4dvARB(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glProgramLocalParameter4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameter4dvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4dvARB(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramLocalParameter4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParameter4dvARB(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4fARB(final int n, final int n2, final float n3, final float n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glProgramLocalParameter4fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glProgramLocalParameter4fARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramLocalParameter4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParameter4fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameter4fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glProgramLocalParameter4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameter4fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4iNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramLocalParameterI4iNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4iNV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4ivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramLocalParameterI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4ivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4ivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glProgramLocalParameterI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4ivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4uiNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramLocalParameterI4uiNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4uiNV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4uivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glProgramLocalParameterI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4uivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameterI4uivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramLocalParameterI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParameterI4uivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameters4fvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramLocalParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParameters4fvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParameters4fvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramLocalParameters4fvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParameters4fvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParametersI4ivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramLocalParametersI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParametersI4ivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParametersI4ivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramLocalParametersI4ivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParametersI4ivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParametersI4uivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramLocalParametersI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramLocalParametersI4uivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramLocalParametersI4uivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramLocalParametersI4uivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramLocalParametersI4uivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glProgramParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramParameteriARB(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glProgramParameteriARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramParameteriARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramStringARB(final int n, final int n2, final int n3, final String s) {
        this.printIndent();
        this.print("glProgramStringARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.lang.String> " + s + ")");
        this.downstreamGL4bc.glProgramStringARB(n, n2, n3, s);
        this.println("");
    }
    
    @Override
    public void glProgramSubroutineParametersuivNV(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glProgramSubroutineParametersuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramSubroutineParametersuivNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glProgramSubroutineParametersuivNV(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramSubroutineParametersuivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramSubroutineParametersuivNV(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1d(final int n, final int n2, final double n3) {
        this.printIndent();
        this.print("glProgramUniform1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1dEXT(final int n, final int n2, final double n3) {
        this.printIndent();
        this.print("glProgramUniform1dEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1dEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1dv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1dv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1dv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1dv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1dvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform1dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1dvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1dvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1dvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1f(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glProgramUniform1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1fv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1fv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1fv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniform1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1fv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glProgramUniform1i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64ARB(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniform1i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1i64ARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64NV(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniform1i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1i64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform1i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1i64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1i64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1i64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1i64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1i64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1iv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1iv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1iv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1iv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glProgramUniform1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64ARB(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniform1ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1ui64ARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64NV(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniform1ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniform1ui64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1ui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1ui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1ui64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1ui64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1ui64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1uiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform1uiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform1uiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform1uiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2d(final int n, final int n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glProgramUniform2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2dEXT(final int n, final int n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glProgramUniform2dEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2dEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2dv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2dv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2dv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2dv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2dvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2dvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2dvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2dvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2f(final int n, final int n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glProgramUniform2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2fv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniform2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2fv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2fv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2fv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64ARB(final int n, final int n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glProgramUniform2i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2i64ARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64NV(final int n, final int n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glProgramUniform2i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2i64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2i64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform2i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2i64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2i64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2i64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2i64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2iv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2iv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2iv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2iv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2ui(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64ARB(final int n, final int n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glProgramUniform2ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2ui64ARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64NV(final int n, final int n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glProgramUniform2ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glProgramUniform2ui64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2ui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform2ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2ui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2ui64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2ui64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2ui64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2uiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform2uiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform2uiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform2uiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3d(final int n, final int n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glProgramUniform3d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3d(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3dEXT(final int n, final int n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glProgramUniform3dEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3dEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3dv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3dv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3dv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3dv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3dvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3dvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3dvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3dvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3f(final int n, final int n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glProgramUniform3f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3f(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3fv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniform3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3fv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3fv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3fv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glProgramUniform3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3i(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64ARB(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glProgramUniform3i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3i64ARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64NV(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glProgramUniform3i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3i64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3i64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform3i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3i64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3i64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3i64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3i64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3iv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3iv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3iv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3iv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glProgramUniform3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3ui(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64ARB(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glProgramUniform3ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3ui64ARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64NV(final int n, final int n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glProgramUniform3ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glProgramUniform3ui64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform3ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3ui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3ui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3ui64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3ui64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3ui64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3uiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform3uiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform3uiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform3uiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4d(final int n, final int n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glProgramUniform4d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4d(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4dEXT(final int n, final int n2, final double n3, final double n4, final double n5, final double n6) {
        this.printIndent();
        this.print("glProgramUniform4dEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ", " + "<double> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4dEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4dv(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4dv(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4dv(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4dv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4dvEXT(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniform4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4dvEXT(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4dvEXT(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4dvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4f(final int n, final int n2, final float n3, final float n4, final float n5, final float n6) {
        this.printIndent();
        this.print("glProgramUniform4f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ", " + "<float> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4f(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4fv(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4fv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4fv(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniform4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4fv(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramUniform4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4i(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64ARB(final int n, final int n2, final long n3, final long n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glProgramUniform4i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4i64ARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64NV(final int n, final int n2, final long n3, final long n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glProgramUniform4i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4i64NV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform4i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4i64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4i64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4i64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4i64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4i64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4iv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4iv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4iv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4iv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glProgramUniform4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4ui(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64ARB(final int n, final int n2, final long n3, final long n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glProgramUniform4ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4ui64ARB(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64NV(final int n, final int n2, final long n3, final long n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glProgramUniform4ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glProgramUniform4ui64NV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform4ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4ui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4ui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4ui64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4ui64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniform4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4ui64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4uiv(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniform4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniform4uiv(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniform4uiv(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glProgramUniform4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glProgramUniform4uiv(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformHandleui64ARB(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniformHandleui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniformHandleui64ARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniformHandleui64vARB(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformHandleui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformHandleui64vARB(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformHandleui64vARB(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniformHandleui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniformHandleui64vARB(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x3fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x3fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix2x4fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix2x4fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x2fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x2fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix3x4fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix3x4fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x2fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x2fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3dv(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3dv(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3dv(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3dv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3dvEXT(final int n, final int n2, final int n3, final boolean b, final double[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3dvEXT(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3dvEXT(final int n, final int n2, final int n3, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3dvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3dvEXT(n, n2, n3, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3fv(final int n, final int n2, final int n3, final boolean b, final float[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3fv(n, n2, n3, b, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformMatrix4x3fv(final int n, final int n2, final int n3, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glProgramUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glProgramUniformMatrix4x3fv(n, n2, n3, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramUniformui64NV(final int n, final int n2, final long n3) {
        this.printIndent();
        this.print("glProgramUniformui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glProgramUniformui64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glProgramUniformui64vNV(final int n, final int n2, final int n3, final long[] array, final int n4) {
        this.printIndent();
        this.print("glProgramUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramUniformui64vNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glProgramUniformui64vNV(final int n, final int n2, final int n3, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glProgramUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glProgramUniformui64vNV(n, n2, n3, longBuffer);
        this.println("");
    }
    
    @Override
    public void glProgramVertexLimitNV(final int n, final int n2) {
        this.printIndent();
        this.print("glProgramVertexLimitNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glProgramVertexLimitNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glProvokingVertex(final int n) {
        this.printIndent();
        this.print("glProvokingVertex(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glProvokingVertex(n);
        this.println("");
    }
    
    @Override
    public void glProvokingVertexEXT(final int n) {
        this.printIndent();
        this.print("glProvokingVertexEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glProvokingVertexEXT(n);
        this.println("");
    }
    
    @Override
    public void glPushAttrib(final int n) {
        this.printIndent();
        this.print("glPushAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPushAttrib(n);
        this.println("");
    }
    
    @Override
    public void glPushClientAttrib(final int n) {
        this.printIndent();
        this.print("glPushClientAttrib(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPushClientAttrib(n);
        this.println("");
    }
    
    @Override
    public void glPushClientAttribDefaultEXT(final int n) {
        this.printIndent();
        this.print("glPushClientAttribDefaultEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPushClientAttribDefaultEXT(n);
        this.println("");
    }
    
    @Override
    public void glPushDebugGroup(final int n, final int n2, final int n3, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glPushDebugGroup(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glPushDebugGroup(n, n2, n3, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glPushDebugGroup(final int n, final int n2, final int n3, final byte[] array, final int n4) {
        this.printIndent();
        this.print("glPushDebugGroup(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glPushDebugGroup(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glPushMatrix() {
        this.printIndent();
        this.print("glPushMatrix()");
        this.downstreamGL4bc.glPushMatrix();
        this.println("");
    }
    
    @Override
    public void glPushName(final int n) {
        this.printIndent();
        this.print("glPushName(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glPushName(n);
        this.println("");
    }
    
    @Override
    public void glQueryCounter(final int n, final int n2) {
        this.printIndent();
        this.print("glQueryCounter(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glQueryCounter(n, n2);
        this.println("");
    }
    
    @Override
    public int glQueryMatrixxOES(final int[] array, final int n, final int[] array2, final int n2) {
        this.printIndent();
        this.print("glQueryMatrixxOES(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final int glQueryMatrixxOES = this.downstreamGL4bc.glQueryMatrixxOES(array, n, array2, n2);
        this.println(" = " + glQueryMatrixxOES);
        return glQueryMatrixxOES;
    }
    
    @Override
    public int glQueryMatrixxOES(final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glQueryMatrixxOES(<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        final int glQueryMatrixxOES = this.downstreamGL4bc.glQueryMatrixxOES(intBuffer, intBuffer2);
        this.println(" = " + glQueryMatrixxOES);
        return glQueryMatrixxOES;
    }
    
    @Override
    public void glQueryObjectParameteruiAMD(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glQueryObjectParameteruiAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glQueryObjectParameteruiAMD(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRasterPos2d(final double n, final double n2) {
        this.printIndent();
        this.print("glRasterPos2d(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glRasterPos2d(n, n2);
        this.println("");
    }
    
    @Override
    public void glRasterPos2dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos2dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos2dv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos2dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glRasterPos2dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glRasterPos2dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos2f(final float n, final float n2) {
        this.printIndent();
        this.print("glRasterPos2f(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glRasterPos2f(n, n2);
        this.println("");
    }
    
    @Override
    public void glRasterPos2fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glRasterPos2fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glRasterPos2fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos2fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos2fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos2fv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos2i(final int n, final int n2) {
        this.printIndent();
        this.print("glRasterPos2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos2i(n, n2);
        this.println("");
    }
    
    @Override
    public void glRasterPos2iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos2iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos2iv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos2iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glRasterPos2iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glRasterPos2iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos2s(final short n, final short n2) {
        this.printIndent();
        this.print("glRasterPos2s(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glRasterPos2s(n, n2);
        this.println("");
    }
    
    @Override
    public void glRasterPos2sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos2sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos2sv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos2sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glRasterPos2sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glRasterPos2sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glRasterPos3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glRasterPos3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glRasterPos3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glRasterPos3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glRasterPos3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glRasterPos3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glRasterPos3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glRasterPos3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glRasterPos3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glRasterPos3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glRasterPos3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glRasterPos3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glRasterPos3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glRasterPos3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glRasterPos3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glRasterPos3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glRasterPos3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glRasterPos3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glRasterPos3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos4d(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glRasterPos4d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glRasterPos4d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRasterPos4dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glRasterPos4dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glRasterPos4dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos4dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos4dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos4dv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos4f(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glRasterPos4f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glRasterPos4f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRasterPos4fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos4fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos4fv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos4fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glRasterPos4fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glRasterPos4fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos4i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glRasterPos4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos4i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRasterPos4iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glRasterPos4iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glRasterPos4iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterPos4iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos4iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos4iv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos4s(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glRasterPos4s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glRasterPos4s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRasterPos4sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glRasterPos4sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glRasterPos4sv(array, n);
        this.println("");
    }
    
    @Override
    public void glRasterPos4sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glRasterPos4sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glRasterPos4sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glRasterSamplesEXT(final int n, final boolean b) {
        this.printIndent();
        this.print("glRasterSamplesEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glRasterSamplesEXT(n, b);
        this.println("");
    }
    
    @Override
    public void glReadBuffer(final int n) {
        this.printIndent();
        this.print("glReadBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glReadBuffer(n);
        this.println("");
    }
    
    @Override
    public void glReadPixels(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glReadPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glReadPixels(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glReadPixels(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glReadPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glReadPixels(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glReadnPixels(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glReadnPixels(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glReadnPixels(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glRectd(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glRectd(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glRectd(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRectdv(final double[] array, final int n, final double[] array2, final int n2) {
        this.printIndent();
        this.print("glRectdv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glRectdv(array, n, array2, n2);
        this.println("");
    }
    
    @Override
    public void glRectdv(final DoubleBuffer doubleBuffer, final DoubleBuffer doubleBuffer2) {
        this.printIndent();
        this.print("glRectdv(<java.nio.DoubleBuffer> " + doubleBuffer + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer2 + ")");
        this.downstreamGL4bc.glRectdv(doubleBuffer, doubleBuffer2);
        this.println("");
    }
    
    @Override
    public void glRectf(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glRectf(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glRectf(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRectfv(final float[] array, final int n, final float[] array2, final int n2) {
        this.printIndent();
        this.print("glRectfv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glRectfv(array, n, array2, n2);
        this.println("");
    }
    
    @Override
    public void glRectfv(final FloatBuffer floatBuffer, final FloatBuffer floatBuffer2) {
        this.printIndent();
        this.print("glRectfv(<java.nio.FloatBuffer> " + floatBuffer + ", " + "<java.nio.FloatBuffer> " + floatBuffer2 + ")");
        this.downstreamGL4bc.glRectfv(floatBuffer, floatBuffer2);
        this.println("");
    }
    
    @Override
    public void glRecti(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glRecti(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glRecti(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRectiv(final int[] array, final int n, final int[] array2, final int n2) {
        this.printIndent();
        this.print("glRectiv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glRectiv(array, n, array2, n2);
        this.println("");
    }
    
    @Override
    public void glRectiv(final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glRectiv(<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glRectiv(intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glRects(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glRects(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glRects(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRectsv(final short[] array, final int n, final short[] array2, final int n2) {
        this.printIndent();
        this.print("glRectsv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glRectsv(array, n, array2, n2);
        this.println("");
    }
    
    @Override
    public void glRectsv(final ShortBuffer shortBuffer, final ShortBuffer shortBuffer2) {
        this.printIndent();
        this.print("glRectsv(<java.nio.ShortBuffer> " + shortBuffer + ", " + "<java.nio.ShortBuffer> " + shortBuffer2 + ")");
        this.downstreamGL4bc.glRectsv(shortBuffer, shortBuffer2);
        this.println("");
    }
    
    @Override
    public void glReleaseShaderCompiler() {
        this.printIndent();
        this.print("glReleaseShaderCompiler()");
        this.downstreamGL4bc.glReleaseShaderCompiler();
        this.println("");
    }
    
    @Override
    public int glRenderMode(final int n) {
        this.printIndent();
        this.print("glRenderMode(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final int glRenderMode = this.downstreamGL4bc.glRenderMode(n);
        this.println(" = " + glRenderMode);
        return glRenderMode;
    }
    
    @Override
    public void glRenderbufferStorage(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glRenderbufferStorage(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glRenderbufferStorage(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRenderbufferStorageMultisample(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glRenderbufferStorageMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glRenderbufferStorageMultisample(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glRenderbufferStorageMultisampleCoverageNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glRenderbufferStorageMultisampleCoverageNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glRenderbufferStorageMultisampleCoverageNV(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glResetHistogram(final int n) {
        this.printIndent();
        this.print("glResetHistogram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glResetHistogram(n);
        this.println("");
    }
    
    @Override
    public void glResetMinmax(final int n) {
        this.printIndent();
        this.print("glResetMinmax(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glResetMinmax(n);
        this.println("");
    }
    
    @Override
    public void glResolveDepthValuesNV() {
        this.printIndent();
        this.print("glResolveDepthValuesNV()");
        this.downstreamGL4bc.glResolveDepthValuesNV();
        this.println("");
    }
    
    @Override
    public void glResumeTransformFeedback() {
        this.printIndent();
        this.print("glResumeTransformFeedback()");
        this.downstreamGL4bc.glResumeTransformFeedback();
        this.println("");
    }
    
    @Override
    public void glResumeTransformFeedbackNV() {
        this.printIndent();
        this.print("glResumeTransformFeedbackNV()");
        this.downstreamGL4bc.glResumeTransformFeedbackNV();
        this.println("");
    }
    
    @Override
    public void glRotated(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glRotated(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glRotated(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glRotatef(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glRotatef(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glRotatef(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glSampleCoverage(final float n, final boolean b) {
        this.printIndent();
        this.print("glSampleCoverage(<float> " + n + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glSampleCoverage(n, b);
        this.println("");
    }
    
    @Override
    public void glSampleMaskIndexedNV(final int n, final int n2) {
        this.printIndent();
        this.print("glSampleMaskIndexedNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glSampleMaskIndexedNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glSampleMaski(final int n, final int n2) {
        this.printIndent();
        this.print("glSampleMaski(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glSampleMaski(n, n2);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glSamplerParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSamplerParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSamplerParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSamplerParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSamplerParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSamplerParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glSamplerParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSamplerParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glSamplerParameterf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glSamplerParameterf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glSamplerParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glSamplerParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glSamplerParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glSamplerParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSamplerParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glSamplerParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSamplerParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glSamplerParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSamplerParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glSamplerParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSamplerParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSamplerParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glScaled(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glScaled(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glScaled(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glScalef(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glScalef(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glScalef(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glScissor(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glScissor(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glScissor(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glScissorArrayv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glScissorArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glScissorArrayv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glScissorArrayv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glScissorArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glScissorArrayv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glScissorIndexed(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glScissorIndexed(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glScissorIndexed(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glScissorIndexedv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glScissorIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glScissorIndexedv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glScissorIndexedv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glScissorIndexedv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glScissorIndexedv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3b(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glSecondaryColor3b(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glSecondaryColor3b(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3bv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3bv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3bv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3bv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3bv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3bv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glSecondaryColor3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glSecondaryColor3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glSecondaryColor3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glSecondaryColor3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3h(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glSecondaryColor3h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glSecondaryColor3h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3hv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glSecondaryColor3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glSecondaryColor3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glSecondaryColor3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3ub(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glSecondaryColor3ub(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glSecondaryColor3ub(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3ubv(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3ubv(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3ubv(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3ubv(final byte[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3ubv(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3ubv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glSecondaryColor3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3uiv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3uiv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3uiv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3uiv(final int[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3uiv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3uiv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3us(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glSecondaryColor3us(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glSecondaryColor3us(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3usv(final short[] array, final int n) {
        this.printIndent();
        this.print("glSecondaryColor3usv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColor3usv(array, n);
        this.println("");
    }
    
    @Override
    public void glSecondaryColor3usv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glSecondaryColor3usv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glSecondaryColor3usv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorFormatNV(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glSecondaryColorFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColorFormatNV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorP3ui(final int n, final int n2) {
        this.printIndent();
        this.print("glSecondaryColorP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColorP3ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorP3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glSecondaryColorP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glSecondaryColorP3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorP3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSecondaryColorP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSecondaryColorP3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorPointer(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glSecondaryColorPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glSecondaryColorPointer(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glSecondaryColorPointer(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glSecondaryColorPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glSecondaryColorPointer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glSelectBuffer(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSelectBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSelectBuffer(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glSelectPerfMonitorCountersAMD(final int n, final boolean b, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glSelectPerfMonitorCountersAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glSelectPerfMonitorCountersAMD(n, b, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glSelectPerfMonitorCountersAMD(final int n, final boolean b, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glSelectPerfMonitorCountersAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glSelectPerfMonitorCountersAMD(n, b, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glSeparableFilter2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7, final long n8) {
        this.printIndent();
        this.print("glSeparableFilter2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ", " + "<long> " + n8 + ")");
        this.downstreamGL4bc.glSeparableFilter2D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glSeparableFilter2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer, final Buffer buffer2) {
        this.printIndent();
        this.print("glSeparableFilter2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<java.nio.Buffer> " + buffer2 + ")");
        this.downstreamGL4bc.glSeparableFilter2D(n, n2, n3, n4, n5, n6, buffer, buffer2);
        this.println("");
    }
    
    @Override
    public void glSetInvariantEXT(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glSetInvariantEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glSetInvariantEXT(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glSetLocalConstantEXT(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glSetLocalConstantEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glSetLocalConstantEXT(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glSetMultisamplefvAMD(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glSetMultisamplefvAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glSetMultisamplefvAMD(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glSetMultisamplefvAMD(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glSetMultisamplefvAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glSetMultisamplefvAMD(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glShadeModel(final int n) {
        this.printIndent();
        this.print("glShadeModel(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glShadeModel(n);
        this.println("");
    }
    
    @Override
    public void glShaderBinary(final int n, final IntBuffer intBuffer, final int n2, final Buffer buffer, final int n3) {
        this.printIndent();
        this.print("glShaderBinary(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderBinary(n, intBuffer, n2, buffer, n3);
        this.println("");
    }
    
    @Override
    public void glShaderBinary(final int n, final int[] array, final int n2, final int n3, final Buffer buffer, final int n4) {
        this.printIndent();
        this.print("glShaderBinary(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderBinary(n, array, n2, n3, buffer, n4);
        this.println("");
    }
    
    @Override
    public void glShaderOp1EXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glShaderOp1EXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderOp1EXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glShaderOp2EXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glShaderOp2EXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderOp2EXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glShaderOp3EXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glShaderOp3EXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderOp3EXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glShaderSource(final int n, final int n2, final String[] array, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glShaderSource(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glShaderSource(n, n2, array, intBuffer);
        this.println("");
    }
    
    @Override
    public void glShaderSource(final int n, final int n2, final String[] array, final int[] array2, final int n3) {
        this.printIndent();
        this.print("glShaderSource(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderSource(n, n2, array, array2, n3);
        this.println("");
    }
    
    @Override
    public void glShaderSourceARB(final long n, final int n2, final String[] array, final int[] array2, final int n3) {
        this.printIndent();
        this.print("glShaderSourceARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderSourceARB(n, n2, array, array2, n3);
        this.println("");
    }
    
    @Override
    public void glShaderSourceARB(final long n, final int n2, final String[] array, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glShaderSourceARB(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glShaderSourceARB(n, n2, array, intBuffer);
        this.println("");
    }
    
    @Override
    public void glShaderStorageBlockBinding(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glShaderStorageBlockBinding(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glShaderStorageBlockBinding(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glStateCaptureNV(final int n, final int n2) {
        this.printIndent();
        this.print("glStateCaptureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glStateCaptureNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glStencilClearTagEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glStencilClearTagEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilClearTagEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glStencilFunc(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glStencilFunc(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilFunc(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glStencilFuncSeparate(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glStencilFuncSeparate(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilFuncSeparate(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glStencilMask(final int n) {
        this.printIndent();
        this.print("glStencilMask(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilMask(n);
        this.println("");
    }
    
    @Override
    public void glStencilMaskSeparate(final int n, final int n2) {
        this.printIndent();
        this.print("glStencilMaskSeparate(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilMaskSeparate(n, n2);
        this.println("");
    }
    
    @Override
    public void glStencilOp(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glStencilOp(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilOp(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glStencilOpSeparate(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glStencilOpSeparate(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilOpSeparate(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glStencilOpValueAMD(final int n, final int n2) {
        this.printIndent();
        this.print("glStencilOpValueAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glStencilOpValueAMD(n, n2);
        this.println("");
    }
    
    @Override
    public void glStringMarkerGREMEDY(final int n, final Buffer buffer) {
        this.printIndent();
        this.print("glStringMarkerGREMEDY(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glStringMarkerGREMEDY(n, buffer);
        this.println("");
    }
    
    @Override
    public void glSubpixelPrecisionBiasNV(final int n, final int n2) {
        this.printIndent();
        this.print("glSubpixelPrecisionBiasNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glSubpixelPrecisionBiasNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glSwizzleEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glSwizzleEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glSwizzleEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glSyncTextureINTEL(final int n) {
        this.printIndent();
        this.print("glSyncTextureINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glSyncTextureINTEL(n);
        this.println("");
    }
    
    @Override
    public void glTessellationFactorAMD(final float n) {
        this.printIndent();
        this.print("glTessellationFactorAMD(<float> " + n + ")");
        this.downstreamGL4bc.glTessellationFactorAMD(n);
        this.println("");
    }
    
    @Override
    public void glTessellationModeAMD(final int n) {
        this.printIndent();
        this.print("glTessellationModeAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTessellationModeAMD(n);
        this.println("");
    }
    
    @Override
    public void glTexBuffer(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexBuffer(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexBufferRange(final int n, final int n2, final int n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glTexBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glTexBufferRange(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTexCoord1bOES(final byte b) {
        this.printIndent();
        this.print("glTexCoord1bOES(<byte> " + b + ")");
        this.downstreamGL4bc.glTexCoord1bOES(b);
        this.println("");
    }
    
    @Override
    public void glTexCoord1bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glTexCoord1bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glTexCoord1bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord1bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1d(final double n) {
        this.printIndent();
        this.print("glTexCoord1d(<double> " + n + ")");
        this.downstreamGL4bc.glTexCoord1d(n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1dv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glTexCoord1dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glTexCoord1dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord1f(final float n) {
        this.printIndent();
        this.print("glTexCoord1f(<float> " + n + ")");
        this.downstreamGL4bc.glTexCoord1f(n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexCoord1fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexCoord1fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord1fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1fv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1h(final short n) {
        this.printIndent();
        this.print("glTexCoord1h(<short> " + n + ")");
        this.downstreamGL4bc.glTexCoord1h(n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1hv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord1hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord1hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord1i(final int n) {
        this.printIndent();
        this.print("glTexCoord1i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1i(n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1iv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoord1iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoord1iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord1s(final short n) {
        this.printIndent();
        this.print("glTexCoord1s(<short> " + n + ")");
        this.downstreamGL4bc.glTexCoord1s(n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord1sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord1sv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord1sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord1sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord1sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2bOES(final byte b, final byte b2) {
        this.printIndent();
        this.print("glTexCoord2bOES(<byte> " + b + ", " + "<byte> " + b2 + ")");
        this.downstreamGL4bc.glTexCoord2bOES(b, b2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord2bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glTexCoord2bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glTexCoord2bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2d(final double n, final double n2) {
        this.printIndent();
        this.print("glTexCoord2d(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glTexCoord2d(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2dv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord2dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glTexCoord2dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glTexCoord2dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2f(final float n, final float n2) {
        this.printIndent();
        this.print("glTexCoord2f(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glTexCoord2f(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexCoord2fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexCoord2fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2fv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord2h(final short n, final short n2) {
        this.printIndent();
        this.print("glTexCoord2h(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glTexCoord2h(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord2hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord2hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2hv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord2i(final int n, final int n2) {
        this.printIndent();
        this.print("glTexCoord2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2i(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2iv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord2iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoord2iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoord2iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2s(final short n, final short n2) {
        this.printIndent();
        this.print("glTexCoord2s(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glTexCoord2s(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoord2sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord2sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord2sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord2sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord2sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord2sv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3bOES(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glTexCoord3bOES(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glTexCoord3bOES(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glTexCoord3bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glTexCoord3bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord3bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glTexCoord3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glTexCoord3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glTexCoord3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glTexCoord3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glTexCoord3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTexCoord3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexCoord3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexCoord3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord3h(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glTexCoord3h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glTexCoord3h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3hv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord3hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord3hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexCoord3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoord3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoord3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glTexCoord3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glTexCoord3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoord3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4bOES(final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glTexCoord4bOES(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glTexCoord4bOES(b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord4bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glTexCoord4bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glTexCoord4bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4d(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glTexCoord4d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glTexCoord4d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glTexCoord4dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glTexCoord4dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4dv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord4f(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glTexCoord4f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glTexCoord4f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4fv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord4fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexCoord4fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexCoord4fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4h(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glTexCoord4h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glTexCoord4h(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord4hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord4hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4hv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord4i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glTexCoord4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoord4iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoord4iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4iv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoord4s(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glTexCoord4s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glTexCoord4s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexCoord4sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glTexCoord4sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glTexCoord4sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoord4sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glTexCoord4sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoord4sv(array, n);
        this.println("");
    }
    
    @Override
    public void glTexCoordFormatNV(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexCoordFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordFormatNV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexCoordP1ui(final int n, final int n2) {
        this.printIndent();
        this.print("glTexCoordP1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP1ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP1uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glTexCoordP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP1uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP1uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoordP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoordP1uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoordP2ui(final int n, final int n2) {
        this.printIndent();
        this.print("glTexCoordP2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP2ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP2uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoordP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoordP2uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoordP2uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glTexCoordP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP2uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP3ui(final int n, final int n2) {
        this.printIndent();
        this.print("glTexCoordP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP3ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glTexCoordP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoordP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoordP3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoordP4ui(final int n, final int n2) {
        this.printIndent();
        this.print("glTexCoordP4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP4ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP4uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glTexCoordP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexCoordP4uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glTexCoordP4uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexCoordP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexCoordP4uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexCoordPointer(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glTexCoordPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexCoordPointer(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glTexCoordPointer(final GLArrayData glArrayData) {
        this.printIndent();
        this.print("glTexCoordPointer(<com.jogamp.opengl.GLArrayData> " + glArrayData + ")");
        this.downstreamGL4bc.glTexCoordPointer(glArrayData);
        this.println("");
    }
    
    @Override
    public void glTexCoordPointer(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glTexCoordPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glTexCoordPointer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexEnvf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glTexEnvf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTexEnvf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexEnvfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexEnvfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexEnvfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexEnvfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glTexEnvfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexEnvfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexEnvi(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexEnvi(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexEnvi(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexEnviv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTexEnviv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexEnviv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexEnviv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexEnviv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexEnviv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexGend(final int n, final int n2, final double n3) {
        this.printIndent();
        this.print("glTexGend(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glTexGend(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexGendv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glTexGendv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glTexGendv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glTexGendv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glTexGendv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexGendv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexGenf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glTexGenf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTexGenf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexGenfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glTexGenfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexGenfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexGenfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexGenfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexGenfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexGeni(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexGeni(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexGeni(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexGeniv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexGeniv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexGeniv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexGeniv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTexGeniv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexGeniv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final long n8) {
        this.printIndent();
        this.print("glTexImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<long> " + n8 + ")");
        this.downstreamGL4bc.glTexImage1D(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glTexImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glTexImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexImage1D(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glTexImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glTexImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glTexImage2D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glTexImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glTexImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexImage2D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glTexImage2DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final boolean b) {
        this.printIndent();
        this.print("glTexImage2DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexImage2DMultisample(n, n2, n3, n4, n5, b);
        this.println("");
    }
    
    @Override
    public void glTexImage2DMultisampleCoverageNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTexImage2DMultisampleCoverageNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexImage2DMultisampleCoverageNV(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTexImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final long n10) {
        this.printIndent();
        this.print("glTexImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<long> " + n10 + ")");
        this.downstreamGL4bc.glTexImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glTexImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glTexImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glTexImage3DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTexImage3DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexImage3DMultisample(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTexImage3DMultisampleCoverageNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final boolean b) {
        this.printIndent();
        this.print("glTexImage3DMultisampleCoverageNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexImage3DMultisampleCoverageNV(n, n2, n3, n4, n5, n6, n7, b);
        this.println("");
    }
    
    @Override
    public void glTexPageCommitmentARB(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final boolean b) {
        this.printIndent();
        this.print("glTexPageCommitmentARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexPageCommitmentARB(n, n2, n3, n4, n5, n6, n7, n8, b);
        this.println("");
    }
    
    @Override
    public void glTexParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTexParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTexParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexParameterf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glTexParameterf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTexParameterf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glTexParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTexParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTexParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTexParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTexParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTexParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTexParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTexParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTexParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTexParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTexRenderbufferNV(final int n, final int n2) {
        this.printIndent();
        this.print("glTexRenderbufferNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTexRenderbufferNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glTexStorage1D(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glTexStorage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTexStorage1D(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTexStorage2D(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glTexStorage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glTexStorage2D(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTexStorage2DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final boolean b) {
        this.printIndent();
        this.print("glTexStorage2DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexStorage2DMultisample(n, n2, n3, n4, n5, b);
        this.println("");
    }
    
    @Override
    public void glTexStorage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glTexStorage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glTexStorage3D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glTexStorage3DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTexStorage3DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexStorage3DMultisample(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTexStorageSparseAMD(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glTexStorageSparseAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glTexStorageSparseAMD(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glTexSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glTexSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glTexSubImage1D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glTexSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glTexSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexSubImage1D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glTexSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glTexSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glTexSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glTexSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glTexSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glTexSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final long n11) {
        this.printIndent();
        this.print("glTexSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<long> " + n11 + ")");
        this.downstreamGL4bc.glTexSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11);
        this.println("");
    }
    
    @Override
    public void glTexSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glTexSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTexSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureBarrier() {
        this.printIndent();
        this.print("glTextureBarrier()");
        this.downstreamGL4bc.glTextureBarrier();
        this.println("");
    }
    
    @Override
    public void glTextureBarrierNV() {
        this.printIndent();
        this.print("glTextureBarrierNV()");
        this.downstreamGL4bc.glTextureBarrierNV();
        this.println("");
    }
    
    @Override
    public void glTextureBuffer(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTextureBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureBuffer(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTextureBufferEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glTextureBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureBufferEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTextureBufferRange(final int n, final int n2, final int n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glTextureBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glTextureBufferRange(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTextureBufferRangeEXT(final int n, final int n2, final int n3, final int n4, final long n5, final long n6) {
        this.printIndent();
        this.print("glTextureBufferRangeEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glTextureBufferRangeEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glTextureImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glTextureImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glTextureImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glTextureImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final long n10) {
        this.printIndent();
        this.print("glTextureImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<long> " + n10 + ")");
        this.downstreamGL4bc.glTextureImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glTextureImage2DMultisampleCoverageNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final boolean b) {
        this.printIndent();
        this.print("glTextureImage2DMultisampleCoverageNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureImage2DMultisampleCoverageNV(n, n2, n3, n4, n5, n6, n7, b);
        this.println("");
    }
    
    @Override
    public void glTextureImage2DMultisampleNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTextureImage2DMultisampleNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureImage2DMultisampleNV(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTextureImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final long n11) {
        this.printIndent();
        this.print("glTextureImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<long> " + n11 + ")");
        this.downstreamGL4bc.glTextureImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11);
        this.println("");
    }
    
    @Override
    public void glTextureImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureImage3DMultisampleCoverageNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final boolean b) {
        this.printIndent();
        this.print("glTextureImage3DMultisampleCoverageNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureImage3DMultisampleCoverageNV(n, n2, n3, n4, n5, n6, n7, n8, b);
        this.println("");
    }
    
    @Override
    public void glTextureImage3DMultisampleNV(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final boolean b) {
        this.printIndent();
        this.print("glTextureImage3DMultisampleNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureImage3DMultisampleNV(n, n2, n3, n4, n5, n6, n7, b);
        this.println("");
    }
    
    @Override
    public void glTextureLightEXT(final int n) {
        this.printIndent();
        this.print("glTextureLightEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureLightEXT(n);
        this.println("");
    }
    
    @Override
    public void glTextureMaterialEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glTextureMaterialEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureMaterialEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glTextureNormalEXT(final int n) {
        this.printIndent();
        this.print("glTextureNormalEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureNormalEXT(n);
        this.println("");
    }
    
    @Override
    public void glTexturePageCommitmentEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final boolean b) {
        this.printIndent();
        this.print("glTexturePageCommitmentEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTexturePageCommitmentEXT(n, n2, n3, n4, n5, n6, n7, n8, b);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTextureParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterIiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameterIiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameterIiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glTextureParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterIivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameterIivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameterIivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTextureParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterIuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameterIuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameterIuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIuivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameterIuivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterIuivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glTextureParameterIuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterIuivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glTextureParameterf(final int n, final int n2, final float n3) {
        this.printIndent();
        this.print("glTextureParameterf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTextureParameterf(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameterfEXT(final int n, final int n2, final int n3, final float n4) {
        this.printIndent();
        this.print("glTextureParameterfEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glTextureParameterfEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTextureParameterfv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glTextureParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterfv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameterfv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTextureParameterfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTextureParameterfv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterfvEXT(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glTextureParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glTextureParameterfvEXT(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterfvEXT(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glTextureParameterfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterfvEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glTextureParameteri(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTextureParameteri(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameteri(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameteriEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glTextureParameteriEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameteriEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTextureParameteriv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glTextureParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameteriv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTextureParameteriv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameteriv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameteriv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterivEXT(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glTextureParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glTextureParameterivEXT(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glTextureParameterivEXT(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glTextureParameterivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureParameterivEXT(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glTextureRangeAPPLE(final int n, final int n2, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureRangeAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureRangeAPPLE(n, n2, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureRenderbufferEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTextureRenderbufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureRenderbufferEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTextureStorage1D(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glTextureStorage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage1D(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glTextureStorage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glTextureStorage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage1DEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTextureStorage2D(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glTextureStorage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage2D(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTextureStorage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glTextureStorage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage2DEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glTextureStorage2DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final boolean b) {
        this.printIndent();
        this.print("glTextureStorage2DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureStorage2DMultisample(n, n2, n3, n4, n5, b);
        this.println("");
    }
    
    @Override
    public void glTextureStorage2DMultisampleEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTextureStorage2DMultisampleEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureStorage2DMultisampleEXT(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTextureStorage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glTextureStorage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage3D(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glTextureStorage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7) {
        this.printIndent();
        this.print("glTextureStorage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorage3DEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glTextureStorage3DMultisample(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final boolean b) {
        this.printIndent();
        this.print("glTextureStorage3DMultisample(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureStorage3DMultisample(n, n2, n3, n4, n5, n6, b);
        this.println("");
    }
    
    @Override
    public void glTextureStorage3DMultisampleEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final boolean b) {
        this.printIndent();
        this.print("glTextureStorage3DMultisampleEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<boolean> " + b + ")");
        this.downstreamGL4bc.glTextureStorage3DMultisampleEXT(n, n2, n3, n4, n5, n6, n7, b);
        this.println("");
    }
    
    @Override
    public void glTextureStorageSparseAMD(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glTextureStorageSparseAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureStorageSparseAMD(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glTextureSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glTextureSubImage1D(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage1D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage1D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage1D(n, n2, n3, n4, n5, n6, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final long n8) {
        this.printIndent();
        this.print("glTextureSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<long> " + n8 + ")");
        this.downstreamGL4bc.glTextureSubImage1DEXT(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage1DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage1DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage1DEXT(n, n2, n3, n4, n5, n6, n7, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final long n9) {
        this.printIndent();
        this.print("glTextureSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<long> " + n9 + ")");
        this.downstreamGL4bc.glTextureSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, n9);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage2D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage2D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage2D(n, n2, n3, n4, n5, n6, n7, n8, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage2DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final long n10) {
        this.printIndent();
        this.print("glTextureSubImage2DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<long> " + n10 + ")");
        this.downstreamGL4bc.glTextureSubImage2DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final long n11) {
        this.printIndent();
        this.print("glTextureSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<long> " + n11 + ")");
        this.downstreamGL4bc.glTextureSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage3D(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage3D(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage3D(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final long n12) {
        this.printIndent();
        this.print("glTextureSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<long> " + n12 + ")");
        this.downstreamGL4bc.glTextureSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12);
        this.println("");
    }
    
    @Override
    public void glTextureSubImage3DEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8, final int n9, final int n10, final int n11, final Buffer buffer) {
        this.printIndent();
        this.print("glTextureSubImage3DEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n11).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glTextureSubImage3DEXT(n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, buffer);
        this.println("");
    }
    
    @Override
    public void glTextureView(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final int n7, final int n8) {
        this.printIndent();
        this.print("glTextureView(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n8).toUpperCase() + ")");
        this.downstreamGL4bc.glTextureView(n, n2, n3, n4, n5, n6, n7, n8);
        this.println("");
    }
    
    @Override
    public void glTransformFeedbackBufferBase(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glTransformFeedbackBufferBase(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTransformFeedbackBufferBase(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTransformFeedbackBufferRange(final int n, final int n2, final int n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glTransformFeedbackBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glTransformFeedbackBufferRange(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glTransformFeedbackVaryings(final int n, final int n2, final String[] array, final int n3) {
        this.printIndent();
        this.print("glTransformFeedbackVaryings(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glTransformFeedbackVaryings(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glTranslated(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glTranslated(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glTranslated(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glTranslatef(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glTranslatef(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glTranslatef(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform(final GLUniformData glUniformData) {
        this.printIndent();
        this.print("glUniform(<com.jogamp.opengl.GLUniformData> " + glUniformData + ")");
        this.downstreamGL4bc.glUniform(glUniformData);
        this.println("");
    }
    
    @Override
    public void glUniform1d(final int n, final double n2) {
        this.printIndent();
        this.print("glUniform1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glUniform1d(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1dv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1dv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1dv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniform1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniform1dv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1f(final int n, final float n2) {
        this.printIndent();
        this.print("glUniform1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glUniform1f(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1fARB(final int n, final float n2) {
        this.printIndent();
        this.print("glUniform1fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glUniform1fARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1fv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform1fv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1fv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1fv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform1fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform1fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1i(final int n, final int n2) {
        this.printIndent();
        this.print("glUniform1i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1i(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1i64ARB(final int n, final long n2) {
        this.printIndent();
        this.print("glUniform1i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniform1i64ARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1i64NV(final int n, final long n2) {
        this.printIndent();
        this.print("glUniform1i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniform1i64NV(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1i64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform1i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform1i64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1i64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1i64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1i64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1i64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1i64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform1i64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1iARB(final int n, final int n2) {
        this.printIndent();
        this.print("glUniform1iARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1iARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1iv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1iv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1iv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform1iv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1ivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform1ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform1ivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1ivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1ivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1ui(final int n, final int n2) {
        this.printIndent();
        this.print("glUniform1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64ARB(final int n, final long n2) {
        this.printIndent();
        this.print("glUniform1ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniform1ui64ARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64NV(final int n, final long n2) {
        this.printIndent();
        this.print("glUniform1ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniform1ui64NV(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1ui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform1ui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform1ui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1ui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1ui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform1uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform1uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform1uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform1uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2d(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glUniform2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glUniform2d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2dv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniform2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniform2dv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2dv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2dv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2f(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glUniform2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glUniform2f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2fARB(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glUniform2fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glUniform2fARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2fv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2fv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2fv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform2fv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform2fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUniform2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2i64ARB(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glUniform2i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glUniform2i64ARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2i64NV(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glUniform2i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glUniform2i64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2i64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform2i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform2i64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2i64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2i64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2i64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform2i64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2i64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2i64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2iARB(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUniform2iARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2iARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2iv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform2iv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2iv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2iv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2ivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform2ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform2ivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUniform2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64ARB(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glUniform2ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glUniform2ui64ARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64NV(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glUniform2ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glUniform2ui64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform2ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform2ui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2ui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2ui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2ui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform2ui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform2uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform2uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform2uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform2uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3d(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glUniform3d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glUniform3d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3dv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniform3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniform3dv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3dv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3dv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3f(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glUniform3f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glUniform3f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3fARB(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glUniform3fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glUniform3fARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3fv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3fv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3fv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform3fv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform3fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glUniform3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3i64ARB(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glUniform3i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glUniform3i64ARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3i64NV(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glUniform3i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glUniform3i64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3i64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3i64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3i64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform3i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform3i64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3i64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3i64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3i64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform3i64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3iARB(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glUniform3iARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3iARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3iv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform3iv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3iv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3iv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3ivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform3ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform3ivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3ivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3ivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3ui(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glUniform3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3ui(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64ARB(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glUniform3ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glUniform3ui64ARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64NV(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glUniform3ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glUniform3ui64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3ui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform3ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform3ui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3ui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3ui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform3ui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform3uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform3uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform3uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform3uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4d(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glUniform4d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glUniform4d(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4dv(final int n, final int n2, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4dv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4dv(final int n, final int n2, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniform4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniform4dv(n, n2, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4f(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glUniform4f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glUniform4f(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4fARB(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glUniform4fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glUniform4fARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4fv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform4fv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4fv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4fv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4fvARB(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4fvARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4fvARB(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniform4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniform4fvARB(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4i(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glUniform4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4i(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4i64ARB(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glUniform4i64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glUniform4i64ARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4i64NV(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glUniform4i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glUniform4i64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4i64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4i64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4i64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform4i64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform4i64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4i64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4i64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4i64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform4i64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4iARB(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glUniform4iARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4iARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4iv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4iv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4iv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform4iv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4ivARB(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform4ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform4ivARB(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4ivARB(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4ivARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4ui(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glUniform4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4ui(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64ARB(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glUniform4ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glUniform4ui64ARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64NV(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glUniform4ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glUniform4ui64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4ui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform4ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform4ui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniform4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniform4ui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4ui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4ui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniform4uiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniform4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniform4uiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniform4uiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniform4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniform4uiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformBlockBinding(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUniformBlockBinding(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformBlockBinding(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniformBufferEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUniformBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformBufferEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glUniformHandleui64ARB(final int n, final long n2) {
        this.printIndent();
        this.print("glUniformHandleui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniformHandleui64ARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniformHandleui64vARB(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniformHandleui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniformHandleui64vARB(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformHandleui64vARB(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniformHandleui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformHandleui64vARB(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2fvARB(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2fvARB(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2fvARB(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2fvARB(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x3dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2x3dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x3dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2x3dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x3fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2x3fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x3fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2x3fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x4dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2x4dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x4dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2x4dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x4fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix2x4fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix2x4fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix2x4fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3fvARB(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3fvARB(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3fvARB(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3fvARB(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x2dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3x2dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x2dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3x2dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x2fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3x2fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x2fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3x2fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x4dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3x4dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x4dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3x4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3x4dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x4fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix3x4fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix3x4fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix3x4fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4fvARB(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4fvARB(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4fvARB(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4fvARB(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x2dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4x2dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x2dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4x2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4x2dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x2fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4x2fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x2fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4x2fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x3dv(final int n, final int n2, final boolean b, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4x3dv(n, n2, b, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x3dv(final int n, final int n2, final boolean b, final double[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4x3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4x3dv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x3fv(final int n, final int n2, final boolean b, final float[] array, final int n3) {
        this.printIndent();
        this.print("glUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformMatrix4x3fv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformMatrix4x3fv(final int n, final int n2, final boolean b, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glUniformMatrix4x3fv(n, n2, b, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformSubroutinesuiv(final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glUniformSubroutinesuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glUniformSubroutinesuiv(n, n2, intBuffer);
        this.println("");
    }
    
    @Override
    public void glUniformSubroutinesuiv(final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glUniformSubroutinesuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformSubroutinesuiv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformui64NV(final int n, final long n2) {
        this.printIndent();
        this.print("glUniformui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glUniformui64NV(n, n2);
        this.println("");
    }
    
    @Override
    public void glUniformui64vNV(final int n, final int n2, final long[] array, final int n3) {
        this.printIndent();
        this.print("glUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUniformui64vNV(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glUniformui64vNV(final int n, final int n2, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glUniformui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glUniformui64vNV(n, n2, longBuffer);
        this.println("");
    }
    
    @Override
    public void glUnlockArraysEXT() {
        this.printIndent();
        this.print("glUnlockArraysEXT()");
        this.downstreamGL4bc.glUnlockArraysEXT();
        this.println("");
    }
    
    @Override
    public boolean glUnmapBuffer(final int n) {
        this.printIndent();
        this.print("glUnmapBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glUnmapBuffer = this.downstreamGL4bc.glUnmapBuffer(n);
        this.println(" = " + glUnmapBuffer);
        return glUnmapBuffer;
    }
    
    @Override
    public boolean glUnmapNamedBuffer(final int n) {
        this.printIndent();
        this.print("glUnmapNamedBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glUnmapNamedBuffer = this.downstreamGL4bc.glUnmapNamedBuffer(n);
        this.println(" = " + glUnmapNamedBuffer);
        return glUnmapNamedBuffer;
    }
    
    @Override
    public boolean glUnmapNamedBufferEXT(final int n) {
        this.printIndent();
        this.print("glUnmapNamedBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        final boolean glUnmapNamedBufferEXT = this.downstreamGL4bc.glUnmapNamedBufferEXT(n);
        this.println(" = " + glUnmapNamedBufferEXT);
        return glUnmapNamedBufferEXT;
    }
    
    @Override
    public void glUnmapTexture2DINTEL(final int n, final int n2) {
        this.printIndent();
        this.print("glUnmapTexture2DINTEL(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glUnmapTexture2DINTEL(n, n2);
        this.println("");
    }
    
    @Override
    public void glUseProgram(final int n) {
        this.printIndent();
        this.print("glUseProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glUseProgram(n);
        this.println("");
    }
    
    @Override
    public void glUseProgramObjectARB(final long n) {
        this.printIndent();
        this.print("glUseProgramObjectARB(<long> " + n + ")");
        this.downstreamGL4bc.glUseProgramObjectARB(n);
        this.println("");
    }
    
    @Override
    public void glUseProgramStages(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glUseProgramStages(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glUseProgramStages(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVDPAUFiniNV() {
        this.printIndent();
        this.print("glVDPAUFiniNV()");
        this.downstreamGL4bc.glVDPAUFiniNV();
        this.println("");
    }
    
    @Override
    public void glVDPAUGetSurfaceivNV(final long n, final int n2, final int n3, final int[] array, final int n4, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glVDPAUGetSurfaceivNV(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVDPAUGetSurfaceivNV(n, n2, n3, array, n4, array2, n5);
        this.println("");
    }
    
    @Override
    public void glVDPAUGetSurfaceivNV(final long n, final int n2, final int n3, final IntBuffer intBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glVDPAUGetSurfaceivNV(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glVDPAUGetSurfaceivNV(n, n2, n3, intBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glVDPAUInitNV(final Buffer buffer, final Buffer buffer2) {
        this.printIndent();
        this.print("glVDPAUInitNV(<java.nio.Buffer> " + buffer + ", " + "<java.nio.Buffer> " + buffer2 + ")");
        this.downstreamGL4bc.glVDPAUInitNV(buffer, buffer2);
        this.println("");
    }
    
    @Override
    public boolean glVDPAUIsSurfaceNV(final long n) {
        this.printIndent();
        this.print("glVDPAUIsSurfaceNV(<long> " + n + ")");
        final boolean glVDPAUIsSurfaceNV = this.downstreamGL4bc.glVDPAUIsSurfaceNV(n);
        this.println(" = " + glVDPAUIsSurfaceNV);
        return glVDPAUIsSurfaceNV;
    }
    
    @Override
    public void glVDPAUMapSurfacesNV(final int n, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glVDPAUMapSurfacesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glVDPAUMapSurfacesNV(n, pointerBuffer);
        this.println("");
    }
    
    @Override
    public long glVDPAURegisterOutputSurfaceNV(final Buffer buffer, final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVDPAURegisterOutputSurfaceNV(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final long glVDPAURegisterOutputSurfaceNV = this.downstreamGL4bc.glVDPAURegisterOutputSurfaceNV(buffer, n, n2, array, n3);
        this.println(" = " + glVDPAURegisterOutputSurfaceNV);
        return glVDPAURegisterOutputSurfaceNV;
    }
    
    @Override
    public long glVDPAURegisterOutputSurfaceNV(final Buffer buffer, final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVDPAURegisterOutputSurfaceNV(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        final long glVDPAURegisterOutputSurfaceNV = this.downstreamGL4bc.glVDPAURegisterOutputSurfaceNV(buffer, n, n2, intBuffer);
        this.println(" = " + glVDPAURegisterOutputSurfaceNV);
        return glVDPAURegisterOutputSurfaceNV;
    }
    
    @Override
    public long glVDPAURegisterVideoSurfaceNV(final Buffer buffer, final int n, final int n2, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVDPAURegisterVideoSurfaceNV(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        final long glVDPAURegisterVideoSurfaceNV = this.downstreamGL4bc.glVDPAURegisterVideoSurfaceNV(buffer, n, n2, intBuffer);
        this.println(" = " + glVDPAURegisterVideoSurfaceNV);
        return glVDPAURegisterVideoSurfaceNV;
    }
    
    @Override
    public long glVDPAURegisterVideoSurfaceNV(final Buffer buffer, final int n, final int n2, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVDPAURegisterVideoSurfaceNV(<java.nio.Buffer> " + buffer + ", " + "<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final long glVDPAURegisterVideoSurfaceNV = this.downstreamGL4bc.glVDPAURegisterVideoSurfaceNV(buffer, n, n2, array, n3);
        this.println(" = " + glVDPAURegisterVideoSurfaceNV);
        return glVDPAURegisterVideoSurfaceNV;
    }
    
    @Override
    public void glVDPAUSurfaceAccessNV(final long n, final int n2) {
        this.printIndent();
        this.print("glVDPAUSurfaceAccessNV(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVDPAUSurfaceAccessNV(n, n2);
        this.println("");
    }
    
    @Override
    public void glVDPAUUnmapSurfacesNV(final int n, final PointerBuffer pointerBuffer) {
        this.printIndent();
        this.print("glVDPAUUnmapSurfacesNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ")");
        this.downstreamGL4bc.glVDPAUUnmapSurfacesNV(n, pointerBuffer);
        this.println("");
    }
    
    @Override
    public void glVDPAUUnregisterSurfaceNV(final long n) {
        this.printIndent();
        this.print("glVDPAUUnregisterSurfaceNV(<long> " + n + ")");
        this.downstreamGL4bc.glVDPAUUnregisterSurfaceNV(n);
        this.println("");
    }
    
    @Override
    public void glValidateProgram(final int n) {
        this.printIndent();
        this.print("glValidateProgram(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glValidateProgram(n);
        this.println("");
    }
    
    @Override
    public void glValidateProgramARB(final long n) {
        this.printIndent();
        this.print("glValidateProgramARB(<long> " + n + ")");
        this.downstreamGL4bc.glValidateProgramARB(n);
        this.println("");
    }
    
    @Override
    public void glValidateProgramPipeline(final int n) {
        this.printIndent();
        this.print("glValidateProgramPipeline(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glValidateProgramPipeline(n);
        this.println("");
    }
    
    @Override
    public void glVariantPointerEXT(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glVariantPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVariantPointerEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVariantPointerEXT(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glVariantPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVariantPointerEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glVariantbvEXT(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVariantbvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantbvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantbvEXT(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVariantbvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVariantbvEXT(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantdvEXT(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVariantdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantdvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantdvEXT(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVariantdvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVariantdvEXT(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantfvEXT(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVariantfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVariantfvEXT(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantfvEXT(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVariantfvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantfvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVariantivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVariantivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVariantivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantsvEXT(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVariantsvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantsvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantsvEXT(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVariantsvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVariantsvEXT(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantubvEXT(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVariantubvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVariantubvEXT(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantubvEXT(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVariantubvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantubvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantuivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVariantuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVariantuivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVariantuivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVariantuivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantuivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantusvEXT(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVariantusvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVariantusvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVariantusvEXT(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVariantusvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVariantusvEXT(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2bOES(final byte b, final byte b2) {
        this.printIndent();
        this.print("glVertex2bOES(<byte> " + b + ", " + "<byte> " + b2 + ")");
        this.downstreamGL4bc.glVertex2bOES(b, b2);
        this.println("");
    }
    
    @Override
    public void glVertex2bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glVertex2bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertex2bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertex2bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2d(final double n, final double n2) {
        this.printIndent();
        this.print("glVertex2d(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glVertex2d(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertex2dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glVertex2dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2dv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertex2dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertex2dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2f(final float n, final float n2) {
        this.printIndent();
        this.print("glVertex2f(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glVertex2f(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertex2fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertex2fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertex2fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glVertex2fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2fv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2h(final short n, final short n2) {
        this.printIndent();
        this.print("glVertex2h(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glVertex2h(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertex2hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex2hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2hv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex2hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex2hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2i(final int n, final int n2) {
        this.printIndent();
        this.print("glVertex2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2i(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertex2iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glVertex2iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2iv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertex2iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertex2iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex2s(final short n, final short n2) {
        this.printIndent();
        this.print("glVertex2s(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glVertex2s(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertex2sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex2sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex2sv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex2sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex2sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex2sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3bOES(final byte b, final byte b2, final byte b3) {
        this.printIndent();
        this.print("glVertex3bOES(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ")");
        this.downstreamGL4bc.glVertex3bOES(b, b2, b3);
        this.println("");
    }
    
    @Override
    public void glVertex3bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertex3bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertex3bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glVertex3bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glVertex3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glVertex3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertex3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glVertex3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertex3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertex3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glVertex3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glVertex3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertex3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertex3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertex3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glVertex3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex3h(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glVertex3h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glVertex3h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertex3hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex3hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex3hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex3hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3hv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertex3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertex3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glVertex3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertex3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertex3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glVertex3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glVertex3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertex3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4bOES(final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glVertex4bOES(<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glVertex4bOES(b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glVertex4bvOES(final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertex4bvOES(<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertex4bvOES(byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex4bvOES(final byte[] array, final int n) {
        this.printIndent();
        this.print("glVertex4bvOES(<[B>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4bvOES(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4d(final double n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glVertex4d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glVertex4d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertex4dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertex4dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertex4dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex4dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glVertex4dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4dv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4f(final float n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glVertex4f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glVertex4f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertex4fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glVertex4fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4fv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertex4fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertex4fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex4h(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glVertex4h(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glVertex4h(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertex4hv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex4hv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4hv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4hv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex4hv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex4hv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex4i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertex4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertex4iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertex4iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertex4iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertex4iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glVertex4iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4iv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4s(final short n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glVertex4s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glVertex4s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertex4sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertex4sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertex4sv(array, n);
        this.println("");
    }
    
    @Override
    public void glVertex4sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertex4sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertex4sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexArrayAttribBinding(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexArrayAttribBinding(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayAttribBinding(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexArrayAttribFormat(final int n, final int n2, final int n3, final int n4, final boolean b, final int n5) {
        this.printIndent();
        this.print("glVertexArrayAttribFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayAttribFormat(n, n2, n3, n4, b, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayAttribIFormat(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayAttribIFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayAttribIFormat(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayAttribLFormat(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayAttribLFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayAttribLFormat(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayBindVertexBufferEXT(final int n, final int n2, final int n3, final long n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayBindVertexBufferEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayBindVertexBufferEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayBindingDivisor(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexArrayBindingDivisor(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayBindingDivisor(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexArrayColorOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glVertexArrayColorOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glVertexArrayColorOffsetEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glVertexArrayEdgeFlagOffsetEXT(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glVertexArrayEdgeFlagOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVertexArrayEdgeFlagOffsetEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexArrayElementBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexArrayElementBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayElementBuffer(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexArrayFogCoordOffsetEXT(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexArrayFogCoordOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexArrayFogCoordOffsetEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayIndexOffsetEXT(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexArrayIndexOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexArrayIndexOffsetEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayMultiTexCoordOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glVertexArrayMultiTexCoordOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glVertexArrayMultiTexCoordOffsetEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glVertexArrayNormalOffsetEXT(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexArrayNormalOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexArrayNormalOffsetEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayParameteriAPPLE(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexArrayParameteriAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayParameteriAPPLE(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexArrayRangeAPPLE(final int n, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexArrayRangeAPPLE(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexArrayRangeAPPLE(n, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexArraySecondaryColorOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glVertexArraySecondaryColorOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glVertexArraySecondaryColorOffsetEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glVertexArrayTexCoordOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glVertexArrayTexCoordOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glVertexArrayTexCoordOffsetEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribBindingEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribBindingEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribBindingEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribDivisorEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribDivisorEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribDivisorEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribFormatEXT(final int n, final int n2, final int n3, final int n4, final boolean b, final int n5) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribFormatEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribFormatEXT(n, n2, n3, n4, b, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribIFormatEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribIFormatEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribIFormatEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribIOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribIOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribIOffsetEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribLFormatEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribLFormatEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribLFormatEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribLOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6, final long n7) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribLOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribLOffsetEXT(n, n2, n3, n4, n5, n6, n7);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexAttribOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final boolean b, final int n6, final long n7) {
        this.printIndent();
        this.print("glVertexArrayVertexAttribOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ", " + "<long> " + n7 + ")");
        this.downstreamGL4bc.glVertexArrayVertexAttribOffsetEXT(n, n2, n3, n4, n5, b, n6, n7);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexBindingDivisorEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexArrayVertexBindingDivisorEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexBindingDivisorEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexBuffer(final int n, final int n2, final int n3, final long n4, final int n5) {
        this.printIndent();
        this.print("glVertexArrayVertexBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexBuffer(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexBuffers(final int n, final int n2, final int n3, final IntBuffer intBuffer, final PointerBuffer pointerBuffer, final IntBuffer intBuffer2) {
        this.printIndent();
        this.print("glVertexArrayVertexBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<java.nio.IntBuffer> " + intBuffer2 + ")");
        this.downstreamGL4bc.glVertexArrayVertexBuffers(n, n2, n3, intBuffer, pointerBuffer, intBuffer2);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexBuffers(final int n, final int n2, final int n3, final int[] array, final int n4, final PointerBuffer pointerBuffer, final int[] array2, final int n5) {
        this.printIndent();
        this.print("glVertexArrayVertexBuffers(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + pointerBuffer + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexArrayVertexBuffers(n, n2, n3, array, n4, pointerBuffer, array2, n5);
        this.println("");
    }
    
    @Override
    public void glVertexArrayVertexOffsetEXT(final int n, final int n2, final int n3, final int n4, final int n5, final long n6) {
        this.printIndent();
        this.print("glVertexArrayVertexOffsetEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<long> " + n6 + ")");
        this.downstreamGL4bc.glVertexArrayVertexOffsetEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1d(final int n, final double n2) {
        this.printIndent();
        this.print("glVertexAttrib1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1d(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1dARB(final int n, final double n2) {
        this.printIndent();
        this.print("glVertexAttrib1dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1dARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1dvARB(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1dvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1dvARB(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1dvARB(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1f(final int n, final float n2) {
        this.printIndent();
        this.print("glVertexAttrib1f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1f(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1fARB(final int n, final float n2) {
        this.printIndent();
        this.print("glVertexAttrib1fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1fARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1fvARB(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1fvARB(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1fvARB(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1fvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1h(final int n, final short n2) {
        this.printIndent();
        this.print("glVertexAttrib1h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1h(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1s(final int n, final short n2) {
        this.printIndent();
        this.print("glVertexAttrib1s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1s(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1sARB(final int n, final short n2) {
        this.printIndent();
        this.print("glVertexAttrib1sARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttrib1sARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1svARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib1svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib1svARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib1svARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib1svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib1svARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2d(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glVertexAttrib2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2dARB(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glVertexAttrib2dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2dARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2dvARB(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2dvARB(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2dvARB(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2dvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2f(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glVertexAttrib2f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2fARB(final int n, final float n2, final float n3) {
        this.printIndent();
        this.print("glVertexAttrib2fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2fARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2fvARB(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2fvARB(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2fvARB(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2fvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2h(final int n, final short n2, final short n3) {
        this.printIndent();
        this.print("glVertexAttrib2h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2h(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2s(final int n, final short n2, final short n3) {
        this.printIndent();
        this.print("glVertexAttrib2s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2sARB(final int n, final short n2, final short n3) {
        this.printIndent();
        this.print("glVertexAttrib2sARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttrib2sARB(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2svARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib2svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib2svARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib2svARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib2svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib2svARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3d(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glVertexAttrib3d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3dARB(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glVertexAttrib3dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3dARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3dvARB(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3dvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3dvARB(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3dvARB(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3f(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glVertexAttrib3f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3f(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3fARB(final int n, final float n2, final float n3, final float n4) {
        this.printIndent();
        this.print("glVertexAttrib3fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3fARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3fvARB(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3fvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3fvARB(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3fvARB(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3h(final int n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glVertexAttrib3h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3h(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3s(final int n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glVertexAttrib3s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3s(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3sARB(final int n, final short n2, final short n3, final short n4) {
        this.printIndent();
        this.print("glVertexAttrib3sARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttrib3sARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3svARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib3svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib3svARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib3svARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib3svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib3svARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nbv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Nbv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Nbv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nbv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Nbv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Nbv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NbvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NbvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NbvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NbvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NbvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NbvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Niv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Niv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Niv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Niv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Niv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Niv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nsv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Nsv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Nsv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nsv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Nsv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Nsv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NsvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NsvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NsvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NsvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NsvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NsvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nub(final int n, final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glVertexAttrib4Nub(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glVertexAttrib4Nub(n, b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NubARB(final int n, final byte b, final byte b2, final byte b3, final byte b4) {
        this.printIndent();
        this.print("glVertexAttrib4NubARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<byte> " + b + ", " + "<byte> " + b2 + ", " + "<byte> " + b3 + ", " + "<byte> " + b4 + ")");
        this.downstreamGL4bc.glVertexAttrib4NubARB(n, b, b2, b3, b4);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nubv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Nubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Nubv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nubv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Nubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Nubv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NubvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NubvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NubvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NubvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nuiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Nuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Nuiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nuiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Nuiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Nuiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NuivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NuivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NuivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NuivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nusv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4Nusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4Nusv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4Nusv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4Nusv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4Nusv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NusvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4NusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4NusvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4NusvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4NusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4NusvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4bv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4bv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4bv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4bv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4bv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4bv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4bvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4bvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4bvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4bvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4bvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4bvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4d(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glVertexAttrib4d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4d(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4dARB(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glVertexAttrib4dARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4dARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4dvARB(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4dvARB(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4dvARB(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4dvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4dvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4f(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glVertexAttrib4f(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4f(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4fARB(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glVertexAttrib4fARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4fARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4fv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4fv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4fv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4fv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4fv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4fvARB(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4fvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4fvARB(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4fvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4fvARB(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4h(final int n, final short n2, final short n3, final short n4, final short n5) {
        this.printIndent();
        this.print("glVertexAttrib4h(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ", " + "<short> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4h(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4hv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4hv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4hv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4hv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4ivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4ivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4ivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4s(final int n, final short n2, final short n3, final short n4, final short n5) {
        this.printIndent();
        this.print("glVertexAttrib4s(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ", " + "<short> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4s(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4sARB(final int n, final short n2, final short n3, final short n4, final short n5) {
        this.printIndent();
        this.print("glVertexAttrib4sARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ", " + "<short> " + n4 + ", " + "<short> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttrib4sARB(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4svARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4svARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4svARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4svARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4svARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ubv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4ubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4ubv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ubv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4ubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4ubv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ubvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4ubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4ubvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4ubvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4ubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4ubvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4uivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4uivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4uivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4uivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4uivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4uivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4usv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4usv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4usv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4usv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4usv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4usv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4usvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttrib4usvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttrib4usvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttrib4usvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttrib4usvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttrib4usvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribBinding(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribBinding(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribBinding(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribDivisor(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribDivisor(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribDivisor(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribFormat(final int n, final int n2, final int n3, final boolean b, final int n4) {
        this.printIndent();
        this.print("glVertexAttribFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribFormat(n, n2, n3, b, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribFormatNV(final int n, final int n2, final int n3, final boolean b, final int n4) {
        this.printIndent();
        this.print("glVertexAttribFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribFormatNV(n, n2, n3, b, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1i(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1i(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1iEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1iEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1iEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI1iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI1iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1ivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1ivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1ivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI1ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI1ivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1ui(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1uiEXT(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1uiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1uiEXT(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI1uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1uivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI1uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI1uivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI1uivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI1uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI1uivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexAttribI2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2iEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexAttribI2iEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2iEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI2iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI2iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2ivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI2ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI2ivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2ivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI2ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2ivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2ui(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexAttribI2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2ui(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2uiEXT(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexAttribI2uiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2uiEXT(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI2uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2uivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI2uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI2uivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI2uivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI2uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI2uivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3i(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribI3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3i(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3iEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribI3iEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3iEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI3iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI3iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3ivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI3ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3ivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3ivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI3ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI3ivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3ui(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribI3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3ui(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3uiEXT(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribI3uiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3uiEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3uivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI3uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI3uivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI3uivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI3uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI3uivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4bv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4bv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4bv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4bv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4bv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4bv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4bvEXT(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4bvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4bvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4bvEXT(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4bvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4bvEXT(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4i(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexAttribI4i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4i(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4iEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexAttribI4iEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4iEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4iv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4iv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4iv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4iv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4iv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4ivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4ivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4ivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4sv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4sv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4sv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4sv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4sv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4svEXT(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4svEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4svEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4svEXT(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4svEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4svEXT(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ubv(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4ubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4ubv(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ubv(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4ubv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4ubv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ubvEXT(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4ubvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4ubvEXT(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ubvEXT(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4ubvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4ubvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4ui(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexAttribI4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4ui(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4uiEXT(final int n, final int n2, final int n3, final int n4, final int n5) {
        this.printIndent();
        this.print("glVertexAttribI4uiEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4uiEXT(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4uivEXT(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4uivEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4uivEXT(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4uivEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4uivEXT(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4usv(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4usv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4usv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4usv(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4usv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4usv(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4usvEXT(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribI4usvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribI4usvEXT(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribI4usvEXT(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribI4usvEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribI4usvEXT(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribIFormat(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribIFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribIFormat(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribIFormatNV(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribIFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribIFormatNV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribIPointer(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexAttribIPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexAttribIPointer(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribIPointer(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribIPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribIPointer(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribIPointerEXT(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexAttribIPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexAttribIPointerEXT(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1d(final int n, final double n2) {
        this.printIndent();
        this.print("glVertexAttribL1d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttribL1d(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL1dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttribL1dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL1dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1i64NV(final int n, final long n2) {
        this.printIndent();
        this.print("glVertexAttribL1i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttribL1i64NV(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1i64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL1i64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1i64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL1i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL1i64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64ARB(final int n, final long n2) {
        this.printIndent();
        this.print("glVertexAttribL1ui64ARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64ARB(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64NV(final int n, final long n2) {
        this.printIndent();
        this.print("glVertexAttribL1ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64NV(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64vARB(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64vARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64vARB(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL1ui64vARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64vARB(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL1ui64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL1ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL1ui64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2d(final int n, final double n2, final double n3) {
        this.printIndent();
        this.print("glVertexAttribL2d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttribL2d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL2dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttribL2dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL2dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2i64NV(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glVertexAttribL2i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttribL2i64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2i64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL2i64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2i64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL2i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL2i64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2ui64NV(final int n, final long n2, final long n3) {
        this.printIndent();
        this.print("glVertexAttribL2ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glVertexAttribL2ui64NV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2ui64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL2ui64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL2ui64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL2ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL2ui64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3d(final int n, final double n2, final double n3, final double n4) {
        this.printIndent();
        this.print("glVertexAttribL3d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttribL3d(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttribL3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL3dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL3dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL3dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3i64NV(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glVertexAttribL3i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttribL3i64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3i64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL3i64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3i64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL3i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL3i64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3ui64NV(final int n, final long n2, final long n3, final long n4) {
        this.printIndent();
        this.print("glVertexAttribL3ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVertexAttribL3ui64NV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3ui64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL3ui64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL3ui64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL3ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL3ui64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4d(final int n, final double n2, final double n3, final double n4, final double n5) {
        this.printIndent();
        this.print("glVertexAttribL4d(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ", " + "<double> " + n4 + ", " + "<double> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribL4d(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4dv(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVertexAttribL4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL4dv(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4dv(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL4dv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL4dv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4i64NV(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribL4i64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribL4i64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4i64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL4i64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4i64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL4i64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL4i64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4ui64NV(final int n, final long n2, final long n3, final long n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribL4ui64NV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<long> " + n4 + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribL4ui64NV(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4ui64vNV(final int n, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVertexAttribL4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        this.downstreamGL4bc.glVertexAttribL4ui64vNV(n, longBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribL4ui64vNV(final int n, final long[] array, final int n2) {
        this.printIndent();
        this.print("glVertexAttribL4ui64vNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribL4ui64vNV(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexAttribLFormat(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribLFormat(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribLFormat(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribLFormatNV(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glVertexAttribLFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribLFormatNV(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexAttribLPointer(final int n, final int n2, final int n3, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexAttribLPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexAttribLPointer(n, n2, n3, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribLPointer(final int n, final int n2, final int n3, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribLPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribLPointer(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP1ui(final int n, final int n2, final boolean b, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP1ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP1ui(n, n2, b, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP1uiv(final int n, final int n2, final boolean b, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP1uiv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP1uiv(final int n, final int n2, final boolean b, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribP1uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribP1uiv(n, n2, b, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP2ui(final int n, final int n2, final boolean b, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP2ui(n, n2, b, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP2uiv(final int n, final int n2, final boolean b, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribP2uiv(n, n2, b, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP2uiv(final int n, final int n2, final boolean b, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP2uiv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP3ui(final int n, final int n2, final boolean b, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP3ui(n, n2, b, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP3uiv(final int n, final int n2, final boolean b, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribP3uiv(n, n2, b, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP3uiv(final int n, final int n2, final boolean b, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP3uiv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP4ui(final int n, final int n2, final boolean b, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP4ui(n, n2, b, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP4uiv(final int n, final int n2, final boolean b, final int[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribP4uiv(n, n2, b, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribP4uiv(final int n, final int n2, final boolean b, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexAttribP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<boolean> " + b + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexAttribP4uiv(n, n2, b, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribParameteriAMD(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexAttribParameteriAMD(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribParameteriAMD(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribPointer(final int n, final int n2, final int n3, final boolean b, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexAttribPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexAttribPointer(n, n2, n3, b, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribPointer(final int n, final int n2, final int n3, final boolean b, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribPointer(n, n2, n3, b, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribPointer(final GLArrayData glArrayData) {
        this.printIndent();
        this.print("glVertexAttribPointer(<com.jogamp.opengl.GLArrayData> " + glArrayData + ")");
        this.downstreamGL4bc.glVertexAttribPointer(glArrayData);
        this.println("");
    }
    
    @Override
    public void glVertexAttribPointerARB(final int n, final int n2, final int n3, final boolean b, final int n4, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexAttribPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexAttribPointerARB(n, n2, n3, b, n4, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribPointerARB(final int n, final int n2, final int n3, final boolean b, final int n4, final long n5) {
        this.printIndent();
        this.print("glVertexAttribPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<boolean> " + b + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<long> " + n5 + ")");
        this.downstreamGL4bc.glVertexAttribPointerARB(n, n2, n3, b, n4, n5);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs1hv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribs1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribs1hv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs1hv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribs1hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribs1hv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs2hv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribs2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribs2hv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs2hv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribs2hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribs2hv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs3hv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribs3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribs3hv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs3hv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribs3hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribs3hv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs4hv(final int n, final int n2, final short[] array, final int n3) {
        this.printIndent();
        this.print("glVertexAttribs4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexAttribs4hv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glVertexAttribs4hv(final int n, final int n2, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexAttribs4hv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexAttribs4hv(n, n2, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexBindingDivisor(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexBindingDivisor(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexBindingDivisor(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexBlendARB(final int n) {
        this.printIndent();
        this.print("glVertexBlendARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexBlendARB(n);
        this.println("");
    }
    
    @Override
    public void glVertexFormatNV(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glVertexFormatNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexFormatNV(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glVertexP2ui(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexP2ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP2ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexP2uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP2uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexP2uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexP2uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexP2uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexP3ui(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexP3ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP3ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexP3uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexP3uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexP3uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexP3uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP3uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexP4ui(final int n, final int n2) {
        this.printIndent();
        this.print("glVertexP4ui(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP4ui(n, n2);
        this.println("");
    }
    
    @Override
    public void glVertexP4uiv(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVertexP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVertexP4uiv(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexP4uiv(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glVertexP4uiv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexP4uiv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glVertexPointer(final GLArrayData glArrayData) {
        this.printIndent();
        this.print("glVertexPointer(<com.jogamp.opengl.GLArrayData> " + glArrayData + ")");
        this.downstreamGL4bc.glVertexPointer(glArrayData);
        this.println("");
    }
    
    @Override
    public void glVertexPointer(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glVertexPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVertexPointer(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexPointer(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexPointer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexPointer(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexWeightPointerEXT(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glVertexWeightPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glVertexWeightPointerEXT(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glVertexWeightPointerEXT(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glVertexWeightPointerEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glVertexWeightPointerEXT(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glVertexWeightfEXT(final float n) {
        this.printIndent();
        this.print("glVertexWeightfEXT(<float> " + n + ")");
        this.downstreamGL4bc.glVertexWeightfEXT(n);
        this.println("");
    }
    
    @Override
    public void glVertexWeightfvEXT(final float[] array, final int n) {
        this.printIndent();
        this.print("glVertexWeightfvEXT(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexWeightfvEXT(array, n);
        this.println("");
    }
    
    @Override
    public void glVertexWeightfvEXT(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVertexWeightfvEXT(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVertexWeightfvEXT(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexWeighth(final short n) {
        this.printIndent();
        this.print("glVertexWeighth(<short> " + n + ")");
        this.downstreamGL4bc.glVertexWeighth(n);
        this.println("");
    }
    
    @Override
    public void glVertexWeighthv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glVertexWeighthv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glVertexWeighthv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glVertexWeighthv(final short[] array, final int n) {
        this.printIndent();
        this.print("glVertexWeighthv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glVertexWeighthv(array, n);
        this.println("");
    }
    
    @Override
    public int glVideoCaptureNV(final int n, final IntBuffer intBuffer, final LongBuffer longBuffer) {
        this.printIndent();
        this.print("glVideoCaptureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ", " + "<java.nio.LongBuffer> " + longBuffer + ")");
        final int glVideoCaptureNV = this.downstreamGL4bc.glVideoCaptureNV(n, intBuffer, longBuffer);
        this.println(" = " + glVideoCaptureNV);
        return glVideoCaptureNV;
    }
    
    @Override
    public int glVideoCaptureNV(final int n, final int[] array, final int n2, final long[] array2, final int n3) {
        this.printIndent();
        this.print("glVideoCaptureNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        final int glVideoCaptureNV = this.downstreamGL4bc.glVideoCaptureNV(n, array, n2, array2, n3);
        this.println(" = " + glVideoCaptureNV);
        return glVideoCaptureNV;
    }
    
    @Override
    public void glVideoCaptureStreamParameterdvNV(final int n, final int n2, final int n3, final double[] array, final int n4) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterdvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterdvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glVideoCaptureStreamParameterdvNV(final int n, final int n2, final int n3, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterdvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterdvNV(n, n2, n3, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glVideoCaptureStreamParameterfvNV(final int n, final int n2, final int n3, final float[] array, final int n4) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterfvNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glVideoCaptureStreamParameterfvNV(final int n, final int n2, final int n3, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterfvNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterfvNV(n, n2, n3, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glVideoCaptureStreamParameterivNV(final int n, final int n2, final int n3, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterivNV(n, n2, n3, intBuffer);
        this.println("");
    }
    
    @Override
    public void glVideoCaptureStreamParameterivNV(final int n, final int n2, final int n3, final int[] array, final int n4) {
        this.printIndent();
        this.print("glVideoCaptureStreamParameterivNV(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glVideoCaptureStreamParameterivNV(n, n2, n3, array, n4);
        this.println("");
    }
    
    @Override
    public void glViewport(final int n, final int n2, final int n3, final int n4) {
        this.printIndent();
        this.print("glViewport(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        this.downstreamGL4bc.glViewport(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glViewportArrayv(final int n, final int n2, final float[] array, final int n3) {
        this.printIndent();
        this.print("glViewportArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glViewportArrayv(n, n2, array, n3);
        this.println("");
    }
    
    @Override
    public void glViewportArrayv(final int n, final int n2, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glViewportArrayv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glViewportArrayv(n, n2, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glViewportIndexedf(final int n, final float n2, final float n3, final float n4, final float n5) {
        this.printIndent();
        this.print("glViewportIndexedf(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ", " + "<float> " + n4 + ", " + "<float> " + n5 + ")");
        this.downstreamGL4bc.glViewportIndexedf(n, n2, n3, n4, n5);
        this.println("");
    }
    
    @Override
    public void glViewportIndexedfv(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glViewportIndexedfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glViewportIndexedfv(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glViewportIndexedfv(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glViewportIndexedfv(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glViewportIndexedfv(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glWaitSync(final long n, final int n2, final long n3) {
        this.printIndent();
        this.print("glWaitSync(<long> " + n + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<long> " + n3 + ")");
        this.downstreamGL4bc.glWaitSync(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glWeightPointerARB(final int n, final int n2, final int n3, final long n4) {
        this.printIndent();
        this.print("glWeightPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<long> " + n4 + ")");
        this.downstreamGL4bc.glWeightPointerARB(n, n2, n3, n4);
        this.println("");
    }
    
    @Override
    public void glWeightPointerARB(final int n, final int n2, final int n3, final Buffer buffer) {
        this.printIndent();
        this.print("glWeightPointerARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<java.nio.Buffer> " + buffer + ")");
        this.downstreamGL4bc.glWeightPointerARB(n, n2, n3, buffer);
        this.println("");
    }
    
    @Override
    public void glWeightbvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glWeightbvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightbvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightbvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glWeightbvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glWeightbvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightdvARB(final int n, final double[] array, final int n2) {
        this.printIndent();
        this.print("glWeightdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[D>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightdvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightdvARB(final int n, final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glWeightdvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glWeightdvARB(n, doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightfvARB(final int n, final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glWeightfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glWeightfvARB(n, floatBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightfvARB(final int n, final float[] array, final int n2) {
        this.printIndent();
        this.print("glWeightfvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightfvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glWeightivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glWeightivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glWeightivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightsvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glWeightsvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glWeightsvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightsvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glWeightsvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightsvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightubvARB(final int n, final byte[] array, final int n2) {
        this.printIndent();
        this.print("glWeightubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightubvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightubvARB(final int n, final ByteBuffer byteBuffer) {
        this.printIndent();
        this.print("glWeightubvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + byteBuffer + ")");
        this.downstreamGL4bc.glWeightubvARB(n, byteBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightuivARB(final int n, final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glWeightuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glWeightuivARB(n, intBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightuivARB(final int n, final int[] array, final int n2) {
        this.printIndent();
        this.print("glWeightuivARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightuivARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWeightusvARB(final int n, final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glWeightusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glWeightusvARB(n, shortBuffer);
        this.println("");
    }
    
    @Override
    public void glWeightusvARB(final int n, final short[] array, final int n2) {
        this.printIndent();
        this.print("glWeightusvARB(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<[S>" + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWeightusvARB(n, array, n2);
        this.println("");
    }
    
    @Override
    public void glWindowPos2d(final double n, final double n2) {
        this.printIndent();
        this.print("glWindowPos2d(<double> " + n + ", " + "<double> " + n2 + ")");
        this.downstreamGL4bc.glWindowPos2d(n, n2);
        this.println("");
    }
    
    @Override
    public void glWindowPos2dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glWindowPos2dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glWindowPos2dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos2dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos2dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos2dv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos2f(final float n, final float n2) {
        this.printIndent();
        this.print("glWindowPos2f(<float> " + n + ", " + "<float> " + n2 + ")");
        this.downstreamGL4bc.glWindowPos2f(n, n2);
        this.println("");
    }
    
    @Override
    public void glWindowPos2fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos2fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos2fv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos2fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glWindowPos2fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glWindowPos2fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos2i(final int n, final int n2) {
        this.printIndent();
        this.print("glWindowPos2i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos2i(n, n2);
        this.println("");
    }
    
    @Override
    public void glWindowPos2iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glWindowPos2iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glWindowPos2iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos2iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos2iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos2iv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos2s(final short n, final short n2) {
        this.printIndent();
        this.print("glWindowPos2s(<short> " + n + ", " + "<short> " + n2 + ")");
        this.downstreamGL4bc.glWindowPos2s(n, n2);
        this.println("");
    }
    
    @Override
    public void glWindowPos2sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos2sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos2sv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos2sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glWindowPos2sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glWindowPos2sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos3d(final double n, final double n2, final double n3) {
        this.printIndent();
        this.print("glWindowPos3d(<double> " + n + ", " + "<double> " + n2 + ", " + "<double> " + n3 + ")");
        this.downstreamGL4bc.glWindowPos3d(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glWindowPos3dv(final DoubleBuffer doubleBuffer) {
        this.printIndent();
        this.print("glWindowPos3dv(<java.nio.DoubleBuffer> " + doubleBuffer + ")");
        this.downstreamGL4bc.glWindowPos3dv(doubleBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos3dv(final double[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos3dv(<[D>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos3dv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos3f(final float n, final float n2, final float n3) {
        this.printIndent();
        this.print("glWindowPos3f(<float> " + n + ", " + "<float> " + n2 + ", " + "<float> " + n3 + ")");
        this.downstreamGL4bc.glWindowPos3f(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glWindowPos3fv(final float[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos3fv(<[F>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos3fv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos3fv(final FloatBuffer floatBuffer) {
        this.printIndent();
        this.print("glWindowPos3fv(<java.nio.FloatBuffer> " + floatBuffer + ")");
        this.downstreamGL4bc.glWindowPos3fv(floatBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos3i(final int n, final int n2, final int n3) {
        this.printIndent();
        this.print("glWindowPos3i(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos3i(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glWindowPos3iv(final IntBuffer intBuffer) {
        this.printIndent();
        this.print("glWindowPos3iv(<java.nio.IntBuffer> " + intBuffer + ")");
        this.downstreamGL4bc.glWindowPos3iv(intBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos3iv(final int[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos3iv(<[I>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos3iv(array, n);
        this.println("");
    }
    
    @Override
    public void glWindowPos3s(final short n, final short n2, final short n3) {
        this.printIndent();
        this.print("glWindowPos3s(<short> " + n + ", " + "<short> " + n2 + ", " + "<short> " + n3 + ")");
        this.downstreamGL4bc.glWindowPos3s(n, n2, n3);
        this.println("");
    }
    
    @Override
    public void glWindowPos3sv(final ShortBuffer shortBuffer) {
        this.printIndent();
        this.print("glWindowPos3sv(<java.nio.ShortBuffer> " + shortBuffer + ")");
        this.downstreamGL4bc.glWindowPos3sv(shortBuffer);
        this.println("");
    }
    
    @Override
    public void glWindowPos3sv(final short[] array, final int n) {
        this.printIndent();
        this.print("glWindowPos3sv(<[S>, <int> 0x" + Integer.toHexString(n).toUpperCase() + ")");
        this.downstreamGL4bc.glWindowPos3sv(array, n);
        this.println("");
    }
    
    @Override
    public void glWriteMaskEXT(final int n, final int n2, final int n3, final int n4, final int n5, final int n6) {
        this.printIndent();
        this.print("glWriteMaskEXT(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n6).toUpperCase() + ")");
        this.downstreamGL4bc.glWriteMaskEXT(n, n2, n3, n4, n5, n6);
        this.println("");
    }
    
    @Override
    public boolean hasBasicFBOSupport() {
        return this.downstreamGL4bc.hasBasicFBOSupport();
    }
    
    @Override
    public boolean hasFullFBOSupport() {
        return this.downstreamGL4bc.hasFullFBOSupport();
    }
    
    @Override
    public boolean hasGLSL() {
        return this.downstreamGL4bc.hasGLSL();
    }
    
    @Override
    public boolean isExtensionAvailable(final String s) {
        return this.downstreamGL4bc.isExtensionAvailable(s);
    }
    
    @Override
    public boolean isFunctionAvailable(final String s) {
        return this.downstreamGL4bc.isFunctionAvailable(s);
    }
    
    @Override
    public boolean isGL() {
        return true;
    }
    
    @Override
    public boolean isGL2() {
        return this.downstreamGL4bc.isGL2();
    }
    
    @Override
    public boolean isGL2ES1() {
        return this.downstreamGL4bc.isGL2ES1();
    }
    
    @Override
    public boolean isGL2ES2() {
        return this.downstreamGL4bc.isGL2ES2();
    }
    
    @Override
    public boolean isGL2ES3() {
        return this.downstreamGL4bc.isGL2ES3();
    }
    
    @Override
    public boolean isGL2GL3() {
        return this.downstreamGL4bc.isGL2GL3();
    }
    
    @Override
    public boolean isGL3() {
        return this.downstreamGL4bc.isGL3();
    }
    
    @Override
    public boolean isGL3ES3() {
        return this.downstreamGL4bc.isGL3ES3();
    }
    
    @Override
    public boolean isGL3bc() {
        return this.downstreamGL4bc.isGL3bc();
    }
    
    @Override
    public boolean isGL3core() {
        return this.downstreamGL4bc.isGL3core();
    }
    
    @Override
    public boolean isGL4() {
        return this.downstreamGL4bc.isGL4();
    }
    
    @Override
    public boolean isGL4ES3() {
        return this.downstreamGL4bc.isGL4ES3();
    }
    
    @Override
    public boolean isGL4bc() {
        return this.downstreamGL4bc.isGL4bc();
    }
    
    @Override
    public boolean isGL4core() {
        return this.downstreamGL4bc.isGL4core();
    }
    
    @Override
    public boolean isGLES() {
        return this.downstreamGL4bc.isGLES();
    }
    
    @Override
    public boolean isGLES1() {
        return this.downstreamGL4bc.isGLES1();
    }
    
    @Override
    public boolean isGLES2() {
        return this.downstreamGL4bc.isGLES2();
    }
    
    @Override
    public boolean isGLES2Compatible() {
        return this.downstreamGL4bc.isGLES2Compatible();
    }
    
    @Override
    public boolean isGLES3() {
        return this.downstreamGL4bc.isGLES3();
    }
    
    @Override
    public boolean isGLES31Compatible() {
        return this.downstreamGL4bc.isGLES31Compatible();
    }
    
    @Override
    public boolean isGLES32Compatible() {
        return this.downstreamGL4bc.isGLES32Compatible();
    }
    
    @Override
    public boolean isGLES3Compatible() {
        return this.downstreamGL4bc.isGLES3Compatible();
    }
    
    @Override
    public boolean isGLcore() {
        return this.downstreamGL4bc.isGLcore();
    }
    
    @Override
    public boolean isNPOTTextureAvailable() {
        return this.downstreamGL4bc.isNPOTTextureAvailable();
    }
    
    @Override
    public boolean isPBOPackBound() {
        return this.downstreamGL4bc.isPBOPackBound();
    }
    
    @Override
    public boolean isPBOUnpackBound() {
        return this.downstreamGL4bc.isPBOUnpackBound();
    }
    
    @Override
    public boolean isTextureFormatBGRA8888Available() {
        return this.downstreamGL4bc.isTextureFormatBGRA8888Available();
    }
    
    @Override
    public boolean isVBOArrayBound() {
        return this.downstreamGL4bc.isVBOArrayBound();
    }
    
    @Override
    public boolean isVBOElementArrayBound() {
        return this.downstreamGL4bc.isVBOElementArrayBound();
    }
    
    @Override
    public GLBufferStorage mapBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("mapBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final GLBufferStorage mapBuffer = this.downstreamGL4bc.mapBuffer(n, n2);
        this.println(" = " + mapBuffer);
        return mapBuffer;
    }
    
    @Override
    public GLBufferStorage mapBufferRange(final int n, final long n2, final long n3, final int n4) {
        this.printIndent();
        this.print("mapBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final GLBufferStorage mapBufferRange = this.downstreamGL4bc.mapBufferRange(n, n2, n3, n4);
        this.println(" = " + mapBufferRange);
        return mapBufferRange;
    }
    
    @Override
    public GLBufferStorage mapNamedBuffer(final int n, final int n2) {
        this.printIndent();
        this.print("mapNamedBuffer(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(n2).toUpperCase() + ")");
        final GLBufferStorage mapNamedBuffer = this.downstreamGL4bc.mapNamedBuffer(n, n2);
        this.println(" = " + mapNamedBuffer);
        return mapNamedBuffer;
    }
    
    @Override
    public GLBufferStorage mapNamedBufferEXT(final int n, final int n2) {
        return this.downstreamGL4bc.mapNamedBufferEXT(n, n2);
    }
    
    @Override
    public GLBufferStorage mapNamedBufferRange(final int n, final long n2, final long n3, final int n4) {
        this.printIndent();
        this.print("mapNamedBufferRange(<int> 0x" + Integer.toHexString(n).toUpperCase() + ", " + "<long> " + n2 + ", " + "<long> " + n3 + ", " + "<int> 0x" + Integer.toHexString(n4).toUpperCase() + ")");
        final GLBufferStorage mapNamedBufferRange = this.downstreamGL4bc.mapNamedBufferRange(n, n2, n3, n4);
        this.println(" = " + mapNamedBufferRange);
        return mapNamedBufferRange;
    }
    
    @Override
    public GLBufferStorage mapNamedBufferRangeEXT(final int n, final long n2, final long n3, final int n4) {
        return this.downstreamGL4bc.mapNamedBufferRangeEXT(n, n2, n3, n4);
    }
    
    @Override
    public void setSwapInterval(final int swapInterval) {
        this.downstreamGL4bc.setSwapInterval(swapInterval);
    }
    
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append("TraceGL4bc [this 0x" + Integer.toHexString(this.hashCode()) + " implementing com.jogamp.opengl.GL4bc,\n\t");
        sb.append(" downstream: " + this.downstreamGL4bc.toString() + "\n\t]");
        return sb.toString();
    }
    
    protected String dumpArray(final Object o) {
        if (o == null) {
            return "[null]";
        }
        final StringBuilder sb = new StringBuilder("[");
        final int length = Array.getLength(o);
        for (int min = Math.min(length, 16), i = 0; i < min; ++i) {
            sb.append(Array.get(o, i));
            if (i < min - 1) {
                sb.append(',');
            }
        }
        if (length > 16) {
            sb.append("...").append(length);
        }
        sb.append(']');
        return sb.toString();
    }
    
    protected void print(final String s) {
        this.stream.print(s);
    }
    
    protected void println(final String s) {
        this.stream.println(s);
    }
    
    protected void printIndent() {
        for (int i = 0; i < this.indent; ++i) {
            this.stream.print(' ');
        }
    }
    
    static {
        DEBUG = Debug.debug("TraceGL4bc");
    }
}
